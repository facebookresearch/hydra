name: facebookresearch/hydra/plugin_tests
on:
  workflow_dispatch:
    inputs:
      plugin_test:
        required: true
      test_plugins:
        required: true
      cache_key_version:
        required: false
        default: v1
env:
  AWS_ACCESS_KEY_ID: xxxxXT3Z
  AWS_DEFAULT_REGION: xxxxst-2
  AWS_SECRET_ACCESS_KEY: xxxxGsxB
  CIRCLECI_TOKEN: xxxxed79
  INSTANCE_ROLE_ARN: xxxxr-v1
jobs:
  test_plugin_linux:
    if: ${{ inputs.plugin_test }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        test_plugin:
        - "${{ inputs.test_plugins }}"
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/linux"
      with:
        py_version: "${{ matrix.py_version }}"
    - name: "${{ matrix.test_plugin }}"
      run: |-
        export PATH="$HOME/miniconda3/envs/hydra/bin:$PATH"
        export NOX_PYTHON_VERSIONS=${{ matrix.py_version }}
        export PLUGINS=${{ matrix.test_plugin }}
        pip install nox dataclasses --progress-bar off
        nox -s lint_plugins test_plugins test_plugins_vs_core -ts
  test_plugin_macos:
    if: ${{ inputs.plugin_test }}
    runs-on: macos-latest
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        test_plugin:
        - "${{ inputs.test_plugins }}"
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 13.4.1
    - uses: "./.github/actions/macos"
      with:
        py_version: "${{ matrix.py_version }}"
    - name: "${{ matrix.test_plugin }}"
      run: |-
        export NOX_PYTHON_VERSIONS=${{ matrix.py_version }}
        export PLUGINS=${{ matrix.test_plugin }}
        conda activate hydra
        pip install nox dataclasses --progress-bar off
        nox -s lint_plugins test_plugins test_plugins_vs_core -ts
  test_plugin_win:
    if: ${{ inputs.plugin_test }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        test_plugin:
        - "${{ inputs.test_plugins }}"
    steps:
#     # This item has no matching transformer
#     - circleci_windows_:
    - name: "${{ matrix.test_plugin }}"
      run: |-
        $env:NOX_PYTHON_VERSIONS="${{ matrix.py_version }}"
        $env:ConEmuDefaultCp=65001
        $env:PYTHONIOENCODING="utf_8"
        $env:PLUGINS="${{ matrix.test_plugin }}"
        conda activate hydra
        nox -s lint_plugins test_plugins test_plugins_vs_core -ts
        exit $LASTEXITCODE
