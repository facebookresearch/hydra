name: facebookresearch/hydra/core_tests
on:
  workflow_dispatch:
    inputs:
      plugin_test:
        required: true
      test_plugins:
        required: true
      cache_key_version:
        required: false
        default: v1
env:
  AWS_ACCESS_KEY_ID: xxxxXT3Z
  AWS_DEFAULT_REGION: xxxxst-2
  AWS_SECRET_ACCESS_KEY: xxxxGsxB
  CIRCLECI_TOKEN: xxxxed79
  INSTANCE_ROLE_ARN: xxxxr-v1
jobs:
  trigger_plugin_pipelines:
    if: ${{ !(${{ inputs.plugin_test }}) }}
    runs-on: ubuntu-latest
    container:
      image: python:3.8
    steps:
    - uses: "./.github/actions/early_return_for_forked_pull_requests"
    - uses: actions/checkout@v4.1.0
    - name: Kick off Plugin tests
      run: |-
        python tools/ci/circleci_pipeline.py
        echo "Done kicking off plugin tests."
  test_macos:
    if: ${{ !(${{ inputs.plugin_test }}) }}
    runs-on: macos-latest
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 13.4.1
    - uses: "./.github/actions/macos"
      with:
        py_version: "${{ matrix.py_version }}"
    - name: Testing Hydra
      run: |-
        export NOX_PYTHON_VERSIONS=${{ matrix.py_version }}
        conda activate hydra
        pip install nox dataclasses --progress-bar off
        if [ -n "${{ github.event.number }}" ]; then
          nox -s lint test_tools test_core \
            test_jupyter_notebooks lint_plugins test_plugins test_plugins_vs_core -ts
        else
          nox -s lint test_tools test_core test_jupyter_notebooks -ts
        fi
  test_linux:
    if: ${{ !(${{ inputs.plugin_test }}) }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/linux"
      with:
        py_version: "${{ matrix.py_version }}"
    - name: Testing Hydra
      run: |-
        export PATH="$HOME/miniconda3/envs/hydra/bin:$PATH"
        export NOX_PYTHON_VERSIONS=${{ matrix.py_version }}
        pip install nox dataclasses --progress-bar off
        if [ -n "${{ github.event.number }}" ]; then
          nox -s lint test_tools test_core \
            test_jupyter_notebooks lint_plugins test_plugins test_plugins_vs_core -ts
        else
          nox -s lint test_tools test_core test_jupyter_notebooks -ts
        fi
  test_win:
    if: ${{ !(${{ inputs.plugin_test }}) }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
#     # This item has no matching transformer
#     - circleci_windows_:
    - name: Testing Hydra
      run: |-
        $env:NOX_PYTHON_VERSIONS="${{ matrix.py_version }}"
        $env:ConEmuDefaultCp=65001
        $env:PYTHONIOENCODING="utf_8"
        conda activate hydra
        If ($env:${{ github.event.number }}) {
          nox -s lint test_tools test_core test_jupyter_notebooks lint_plugins test_plugins test_plugins_vs_core -ts
        } else {
          nox -s lint test_tools test_core test_jupyter_notebooks -ts
        }
        exit $LASTEXITCODE
  test_linux_omc_dev:
    if: ${{ !(${{ inputs.plugin_test }}) }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu
    strategy:
      matrix:
        py_version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/linux"
      with:
        py_version: "${{ matrix.py_version }}"
    - name: Testing Hydra
      run: |-
        export PATH="$HOME/miniconda3/envs/hydra/bin:$PATH"
        export NOX_PYTHON_VERSIONS=${{ matrix.py_version }}
        export USE_OMEGACONF_DEV_VERSION=1
        pip install nox dataclasses --progress-bar off
        nox -s test_core -ts
