version: 2.1

jobs:
  # Mac
  py36_mac:
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: "Installing Conda"
          command: |
            curl -o Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            bash ./Miniconda3-latest-MacOSX-x86_64.sh -b
            ~/miniconda3/bin/conda init bash
      - run:
          name: "Testing Hydra"
          no_output_timeout: 60m
          command: |
            export NOX_PYTHON_VERSIONS=3.6
            ~/miniconda3/bin/conda create -n hydra python=3.6 -q -y
            ~/miniconda3/bin/conda run -n hydra pip install nox
            ~/miniconda3/bin/conda run -n hydra python3 -m nox

  py37_mac:
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: "Installing Conda"
          command: |
            curl -o Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            bash ./Miniconda3-latest-MacOSX-x86_64.sh -b
            ~/miniconda3/bin/conda init bash
      - run:
          name: "Testing Hydra"
          no_output_timeout: 60m
          command: |
            export NOX_PYTHON_VERSIONS=3.7
            ~/miniconda3/bin/conda create -n hydra python=3.7 -q -y
            ~/miniconda3/bin/conda run -n hydra pip install nox
            ~/miniconda3/bin/conda run -n hydra python3 -m nox

  py38_mac:
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run:
          name: "Installing Conda"
          command: |
            curl -o Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            bash ./Miniconda3-latest-MacOSX-x86_64.sh -b
            ~/miniconda3/bin/conda init bash
      - run:
          name: "Testing Hydra"
          no_output_timeout: 60m
          command: |
            export NOX_PYTHON_VERSIONS=3.8
            ~/miniconda3/bin/conda create -n hydra python=3.8 -q -y
            ~/miniconda3/bin/conda run -n hydra pip install nox
            ~/miniconda3/bin/conda run -n hydra python3 -m nox


  # Linux
  py36_linux:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo apt-get install -y expect
      - run: echo 'export NOX_PYTHON_VERSIONS=3.6' >> $BASH_ENV
      - run: sudo pip install nox
      - run: nox

  py37_linux:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo apt-get install -y expect
      - run: echo 'export NOX_PYTHON_VERSIONS=3.7' >> $BASH_ENV
      - run: sudo pip install nox
      - run: nox

  py38_linux:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run: sudo apt-get install -y expect
      - run: echo 'export NOX_PYTHON_VERSIONS=3.8' >> $BASH_ENV
      - run: sudo pip install nox
      - run: nox

  # windows
  py36_win:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Installing Conda
          command: |
            choco install miniconda3 -y
            C:\tools\miniconda3\Scripts\conda.exe init powershell
      - run:
          name: Preparing conda environment
          command: |
            conda create -n hydra python=3.6 -q -y
            conda run -n hydra pip install nox
      - run:
          name: Testing Hydra
          command: |
            $env:NOX_PYTHON_VERSIONS=3.6
            $env:PYTHONIOENCODING="utf_8"
            conda activate hydra
            nox
            exit $LASTEXITCODE

  py37_win:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Installing Conda
          command: |
            choco install miniconda3 -y
            C:\tools\miniconda3\Scripts\conda.exe init powershell
      - run:
          name: Preparing conda environment
          command: |
            conda create -n hydra python=3.7 -q -y
            conda run -n hydra pip install nox
      - run:
          name: Testing Hydra
          command: |
            $env:NOX_PYTHON_VERSIONS=3.7
            $env:PYTHONIOENCODING="utf_8"
            conda activate hydra
            nox
            exit $LASTEXITCODE

# TODO: test re-enable in a few months
#  py38_win:
#    executor: win/default
#    steps:
#      - checkout
#      - run:
#          name: Installing Conda
#          command: |
#            choco install miniconda3 -y
#            C:\tools\miniconda3\Scripts\conda.exe init powershell
#      - run:
#          name: Preparing conda environment
#          command: |
#            conda create -n hydra python=3.8 -q -y
#            conda run -n hydra pip install nox
#      - run:
#          name: Testing Hydra
#          command: |
#            $env:NOX_PYTHON_VERSIONS=3.8
#            $env:PYTHONIOENCODING="utf_8"
#            conda activate hydra
#            nox
#            exit $LASTEXITCODE
  # Misc
  coverage:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo pip install nox
      - run: nox -s coverage

  deploy-website:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - deploy:
          name: Deploying to GitHub Pages
          command: |
            SUBDIR=website
            REV=$(git log -5 --pretty=oneline origin/gh-pages | grep "Deploy website" |  awk 'NF>1{print $NF}'  | head -1)
            if [[ $(git diff-index $REV -- $SUBDIR) ]]; then
              echo "Changes detected in directory $SUBDIR between origin/master and this diff"

              cd $SUBDIR
              yarn --no-progress

              git config --global user.email omry@users.noreply.github.com
              git config --global user.name omry
              echo "machine github.com login docusaurus-bot password $GITHUB_TOKEN" > ~/.netrc
              yarn install && GIT_USER=docusaurus-bot yarn deploy
            else
              echo "No changes detected in directory $SUBDIR between origin/master and this diff"
            fi

workflows:
  version: 2
  build:
    jobs:
      # linux
      - py36_linux
      - py37_linux
      - py38_linux
      # mac
      - py36_mac
      - py37_mac
      - py38_mac
      # windows
      - py36_win
      - py37_win
      # - py38_win
      - deploy-website:
          filters:
            branches:
              only: master

orbs:
  win: circleci/windows@1.0.0
