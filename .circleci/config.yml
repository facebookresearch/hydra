version: 2.1

parameters:
  plugin_test:
    type: boolean
    default: False
  test_plugins:
    type: string
    default: ""
  cache_key_version:
    type: string
<<<<<<< HEAD
<<<<<<< HEAD
    default: v1
=======
    default: "v0"
>>>>>>> commit
=======
    default: v0
>>>>>>> fix merge conflicts

commands:
  macos:
    description: Commands run on MacOS
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: -<< pipeline.parameters.cache_key_version >>-macos-sys-{{ .Branch }}-<< parameters.py_version >>
      - run:
          name: Preparing environment - Conda
          command: |
            if [[ -f ~/miniconda3/LICENSE.txt ]] ; then
              echo "miniconda installed already."
            else
              curl -o Miniconda3-py38_4.8.3-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-py38_4.8.3-MacOSX-x86_64.sh
              bash ./Miniconda3-py38_4.8.3-MacOSX-x86_64.sh -b
            fi
            ~/miniconda3/bin/conda init bash
      - run:
          name: Preparing environment - Brew
          command: |
            brew update
            brew upgrade git
<<<<<<< HEAD
<<<<<<< HEAD
            brew install fish
            brew cleanup
=======
            brew install fish wget
>>>>>>> Add ray AMI for integration tests
=======
            brew install fish
>>>>>>> fix merge conflicts
      - run:
          name: Preparing environment - Hydra
          command: |
            conda create -n hydra python=<< parameters.py_version >> -yq
<<<<<<< HEAD
<<<<<<< HEAD
            conda run -n hydra pip install nox --progress-bar off
=======
            conda run -n hydra pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
>>>>>>> commit
=======
            conda run -n hydra pip install nox
>>>>>>> fix merge conflicts
      - save_cache:
          key: -<< pipeline.parameters.cache_key_version >>-macos-sys-{{ .Branch }}-<< parameters.py_version >>
          paths:
            - ~/miniconda3
            - ~/Library/Caches/Homebrew


  linux:
    description: Commands run on Linux
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - run:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> fix mypy and linux conda
          name: Preparing environment - Conda
          command: |
            curl -o Miniconda3-py38_4.8.3-Linux-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh
            bash ./Miniconda3-py38_4.8.3-Linux-x86_64.sh -b
<<<<<<< HEAD
<<<<<<< HEAD
      - run:
          name: Preparing environment - Other dependency
          command: |
            sudo apt-get update
<<<<<<< HEAD
<<<<<<< HEAD
            sudo apt-get install -y expect fish openjdk-11-jre
      - run:
          name: Preparing environment - Hydra
          command: |
            ~/miniconda3/bin/conda init bash
            ~/miniconda3/bin/conda create -n hydra python=<< parameters.py_version >> -yq
=======
            sudo apt-get install -y expect fish openjdk-11-jre rsyn
=======
            sudo apt-get install -y expect fish openjdk-11-jre rsync
>>>>>>> fix circleCI file
            sudo pip install nox
<<<<<<< HEAD
=======
      - run:
<<<<<<< HEAD
          name: "Testing Hydra"
          no_output_timeout: 20m
          command: |
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            pip install nox dataclasses
<<<<<<< HEAD
            nox
>>>>>>> hydra ray launcher
<<<<<<< HEAD
>>>>>>> hydra ray launcher
=======
=======
            nox -s << parameters.nox_session >>
>>>>>>> separate ray launcher into its own session
>>>>>>> separate ray launcher into its own session
=======
          name: "Preparing environment"
          command: |
            sudo apt-get update
            sudo apt-get install -y expect fish openjdk-11-jre rsync
            sudo pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
>>>>>>> commit


=======
=======
            ~/miniconda3/bin/conda init bash
=======
>>>>>>> commit
      - run:
>>>>>>> fix mypy and linux conda
          name: Preparing environment
=======
          name: Preparing environment - Other dependency
>>>>>>> fix linux setup
          command: |
            sudo apt-get update
            sudo apt-get install -y expect fish openjdk-11-jre rsync
<<<<<<< HEAD
<<<<<<< HEAD
            sudo pip install nox
>>>>>>> fix merge conflicts
=======
            conda create -n hydra python=<< parameters.py_version >> -yq
            conda run -n hydra pip install nox
=======
>>>>>>> remove conda install
      - run:
          name: Preparing environment - Hydra
          command: |
            ~/miniconda3/bin/conda init bash
            ~/miniconda3/bin/conda create -n hydra python=<< parameters.py_version >> -yq
            ~/miniconda3/bin/conda run -n hydra pip install nox


>>>>>>> fix mypy and linux conda
  win:
    description: Commands run on Windows
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: -<< pipeline.parameters.cache_key_version >>-win-sys-{{ .Branch }}-<< parameters.py_version >>
      - run:
          name: Preparing environment - system
          command: |
            choco install -y --no-progress miniconda3
            C:\tools\miniconda3\Scripts\conda.exe init powershell
            choco install -y --no-progress openssl javaruntime
      - run:
          name: Preparing environment - Hydra
          command: |
            conda create -n hydra python=<< parameters.py_version >> pywin32 -qy
            conda activate hydra
<<<<<<< HEAD
<<<<<<< HEAD
            pip install nox dataclasses --progress-bar off
=======
            pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
=======
            pip install nox
>>>>>>> fix merge conflicts
            pip install dataclasses
>>>>>>> commit
      - save_cache:
          key: -<< pipeline.parameters.cache_key_version >>-win-sys-{{ .Branch }}-<< parameters.py_version >>
          paths:
            - C:\tools\miniconda3


jobs:
  test_macos:
    parameters:
      py_version:
        type: string
    macos:
      xcode: "12.0.0"
    steps:
      - macos:
          py_version: << parameters.py_version >>
      - run:
          name: Testing Hydra
          no_output_timeout: 10m
          command: |
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            conda activate hydra
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
            pip install nox dataclasses --progress-bar off
=======
<<<<<<< HEAD
            pip install nox
=======
            pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
>>>>>>> commit
            pip install dataclasses
<<<<<<< HEAD
>>>>>>> separate ray launcher into its own session
=======
            pip install nox
            pip install dataclasses
>>>>>>> fix merge conflicts
            nox -s lint test_tools test_core test_jupyter_notebooks -ts
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
            nox -s lint test_core test_jupyter_notebooks -ts
<<<<<<< HEAD
=======
            nox -s << parameters.nox_session >>
            exit $LASTEXITCODE
>>>>>>> separate ray launcher into its own session
>>>>>>> separate ray launcher into its own session
=======
>>>>>>> commit


>>>>>>> separate ray launcher into its own session
=======
>>>>>>> fix merge conflicts
  test_linux:
    parameters:
      py_version:
        type: string
    docker:
      - image: cimg/base:stable-18.04
    steps:
      - linux:
          py_version: << parameters.py_version >>
      - run:
          name: Testing Hydra
          command: |
            export PATH="$HOME/miniconda3/envs/hydra/bin:$PATH"
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
            pip install nox dataclasses --progress-bar off
=======
            pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
=======
=======
            conda activate hydra
>>>>>>> fix mypy and linux conda
=======
            /home/circleci/miniconda3/bin/conda activate hydra
>>>>>>> replace conda with /home/circleci/miniconda3/bin/conda
            pip install nox
>>>>>>> fix merge conflicts
            pip install dataclasses
>>>>>>> commit
            nox -s lint test_tools test_core test_jupyter_notebooks -ts
  test_win:
    parameters:
      py_version:
        type: string
    executor: win/default
    steps:
      - win:
          py_version: << parameters.py_version >>
      - run:
          name: Testing Hydra
          no_output_timeout: 10m
          command: |
            $env:NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            $env:PYTHONIOENCODING="utf_8"
            conda activate hydra
            nox -s lint test_tools test_core test_jupyter_notebooks -ts
            exit $LASTEXITCODE
  trigger_plugin_piplines:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Kick off Plugin tests
          command: |
              python tools/ci/circleci_pipeline.py
              echo "Done kicking off plugin tests."
  test_plugin_macos:
    parameters:
      py_version:
        type: string
      test_plugin:
        type: string
    macos:
      xcode: "12.0.0"
    steps:
      - macos:
          py_version: << parameters.py_version >>
      - run:
          name: << parameters.test_plugin >>
          no_output_timeout: 10m
          command: |
              export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
              export PLUGINS=<< parameters.test_plugin >>
              conda activate hydra
<<<<<<< HEAD
<<<<<<< HEAD
              pip install nox dataclasses --progress-bar off
=======
              pip install nox@git+git://github.com/theacodes/nox.git@8dcefbf8f59293bc1925dd13376dd6d3aa66e53a
=======
              pip install nox
>>>>>>> fix merge conflicts
              pip install dataclasses
>>>>>>> commit
              nox -s lint_plugins test_plugins -ts
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
          nox_session: << parameters.nox_session >>
>>>>>>> separate ray launcher into its own session
=======
>>>>>>> commit


>>>>>>> separate ray launcher into its own session
=======
>>>>>>> fix merge conflicts
  test_plugin_linux:
    parameters:
      py_version:
        type: string
      test_plugin:
        type: string
    docker:
      - image: cimg/base:stable-18.04
    steps:
      - linux:
          py_version: << parameters.py_version >>
      - run:
          name: << parameters.test_plugin >>
          command: |
<<<<<<< HEAD
            export PATH="$HOME/miniconda3/envs/hydra/bin:$PATH"
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            export PLUGINS=<< parameters.test_plugin >>
            pip install nox dataclasses --progress-bar off
            nox -s lint_plugins test_plugins -ts
=======
                export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
                export PLUGINS=<< parameters.test_plugin >>
                pip install nox
                pip install dataclasses
                nox -s lint_plugins test_plugins -ts
<<<<<<< HEAD


>>>>>>> separate ray launcher into its own session
=======
>>>>>>> fix merge conflicts
  test_plugin_win:
    parameters:
      py_version:
        type: string
      test_plugin:
        type: string
    executor: win/default
    steps:
      - win:
          py_version: << parameters.py_version >>
      - run:
          name: << parameters.test_plugin >>
          no_output_timeout: 10m
          command: |
              $env:NOX_PYTHON_VERSIONS=<< parameters.py_version >>
              $env:PYTHONIOENCODING="utf_8"
              $env:PLUGINS="<< parameters.test_plugin >>"
              conda activate hydra
              nox -s lint_plugins test_plugins -ts
              exit $LASTEXITCODE
<<<<<<< HEAD
<<<<<<< HEAD
=======


>>>>>>> separate ray launcher into its own session
=======
>>>>>>> fix merge conflicts
  # Misc
  coverage:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo pip install nox --progress-bar off
      - run: nox -s coverage

workflows:
  version: 2
  build:
    unless: << pipeline.parameters.plugin_test >>
    jobs:
      - trigger_plugin_piplines
      - test_macos:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
      - test_linux:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
      - test_win:
          matrix:
            parameters:
<<<<<<< HEAD
#              py_version: ["3.6", "3.7", "3.8"]
              py_version: ["3.6"]
=======
              py_version: ["3.6", "3.7", "3.8"]
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> separate ray launcher into its own session
=======
<<<<<<< HEAD
>>>>>>> clean up nox file
=======
>>>>>>> commit


  plugin_tests:
    when: << pipeline.parameters.plugin_test >>
    jobs:
      - test_plugin_linux:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
              test_plugin: [<< pipeline.parameters.test_plugins >>]
      - test_plugin_macos:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
              test_plugin: [<< pipeline.parameters.test_plugins >>]
      - test_plugin_win:
          matrix:
            parameters:
<<<<<<< HEAD
#              py_version: ["3.6", "3.7", "3.8"]
              py_version: ["3.6"]
              test_plugin: [<< pipeline.parameters.test_plugins >>]
=======
              py_version: ["3.6", "3.7", "3.8"]
<<<<<<< HEAD
              test_plugin: [<< pipeline.parameters.plugin >>]
>>>>>>> commit
=======
              test_plugin: [<< pipeline.parameters.test_plugins >>]
>>>>>>> fix merge conflicts


orbs:
  win: circleci/windows@1.0.0
