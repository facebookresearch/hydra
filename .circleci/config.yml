version: 2.1

commands:
  macos:
    description: "Commands run on MacOS"
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - run:
          name: "Installing Conda"
          command: |
            curl -o Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
            bash ./Miniconda3-latest-MacOSX-x86_64.sh -b
            ~/miniconda3/bin/conda init bash
      - run:
          name: "Preparing environment"
          command: |
            brew update
            brew upgrade git
            brew install fish
            conda create -n hydra python=<< parameters.py_version >> -yq
            conda run -n hydra pip install nox
      - run:
          name: "Testing Hydra"
          no_output_timeout: 10m
          command: |
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            conda activate hydra
            pip install nox dataclasses
            nox

  linux:
    description: "Commands run on Linux"
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - run:
          name: "Preparing environment"
          command: |
            sudo apt-get update
            sudo apt-get install -y expect fish openjdk-11-jre
            sudo pip install nox
      - run:
          name: "Testing Hydra"
          command: |
            export NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            pip install nox dataclasses
            nox


  win:
    description: "Commands run on Windows"
    parameters:
      py_version:
        type: string
    steps:
      - checkout
      - run:
          name: Preparing system
          command: |
            choco install -y --no-progress miniconda3
            C:\tools\miniconda3\Scripts\conda.exe init powershell
            choco install -y --no-progress openssl javaruntime
      - run:
          name: Preparing conda environment
          command: |
            conda create -n hydra python=<< parameters.py_version >> pywin32 -qy
            conda activate hydra
            pip install nox dataclasses
      - run:
          name: Testing Hydra
          no_output_timeout: 20m
          command: |
            $env:NOX_PYTHON_VERSIONS=<< parameters.py_version >>
            $env:PYTHONIOENCODING="utf_8"
            conda activate hydra
            nox
            exit $LASTEXITCODE


executors:
  macos:
    macos:
      xcode: "10.0.0"
  linux:
    parameters:
      py_version:
        type: string
    docker:
      - image: circleci/python:<< parameters.py_version >>
  win: win/default


jobs:
  test_macos:
    parameters:
      py_version:
        type: string
    macos:
      xcode: "10.0.0"
    steps:
      - macos:
          py_version: << parameters.py_version >>

  test_linux:
    parameters:
      py_version:
        type: string
    docker:
      - image: circleci/python:<< parameters.py_version >>
    steps:
      - linux:
          py_version: << parameters.py_version >>

  test_win:
    parameters:
      py_version:
        type: string
    executor: win/default
    steps:
      - win:
          py_version: << parameters.py_version >>

  # Misc
  coverage:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: sudo pip install nox
      - run: nox -s coverage

workflows:
  version: 2
  build:
    jobs:
      - test_macos:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
      - test_linux:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]
      - test_win:
          matrix:
            parameters:
              py_version: ["3.6", "3.7", "3.8"]

orbs:
  win: circleci/windows@1.0.0
