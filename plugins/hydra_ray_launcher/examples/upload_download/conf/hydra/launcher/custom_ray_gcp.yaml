defaults:
  - ray_gcp

env_setup:
  commands:
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O conda_installer.sh
    - sudo bash conda_installer.sh -u -b -p /opt/conda && rm conda_installer.sh
    - /opt/conda/bin/conda init
    - sudo apt update && sudo apt install -y default-jre build-essential
    - >-
      conda create -n hydra_${python_version:micro}
      python=${python_version:micro} -y
    - >-
      echo 'export
      PATH="$HOME/anaconda3/envs/hydra_${python_version:micro}/bin:$PATH"'
      >> ~/.bashrc
    - >-
      pip install
      git+https://github.com/icgrp/hydra.git@ray-cluster-sdk#egg=hydra-core
    - >-
      pip install
      git+https://github.com/icgrp/hydra.git@ray-cluster-sdk#egg=hydra-ray-launcher\&subdirectory=plugins/hydra_ray_launcher
  pip_packages:
    cloudpickle: '${ray_pkg_version:cloudpickle}'
    hydra_core: null
    hydra_ray_launcher: null
    omegaconf: '${ray_pkg_version:omegaconf}'
    pickle5: 0.0.11
    ray: '${ray_pkg_version:ray}'
ray:
  cluster:
    auth:
      ssh_user: stahmed_seas_upenn_edu
    provider:
      type: gcp
      region: us-central1
      availability_zone: us-central1-a
      project_id: trim-modem-277014
sync_up:
  # source dir is relative in this case, assuming you are running from
  # <project_root>/hydra/plugins/hydra_ray_launcher/example
  # absolute path is also supported.
  source_dir: '.'
  # we leave target_dir to be null
  # as a result the files will be synced to a temp dir on remote cluster.
  # the temp dir will be cleaned up after the jobs are done.
  # recommend to leave target_dir to be null if you are syncing
  # code/artifacts to remote cluster so you don't need
  # configure $PYTHONPATH on remote cluster
  # No need to sync up config files.
  exclude: ['conf', 'multirun', "**/__pycache__"]
sync_down:
  # No need to sync down config files.
  exclude: ['conf']
