"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4980],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},49595:(e,n,t)=>{t.d(n,{A:()=>l,C:()=>c});t(96540);var s=t(28774),i=t(44586),o=t(48295),a=t(74848);function r(e){const n=(0,o.ir)();return(0,i.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function l(e){return(0,a.jsx)(s.default,{...e,to:r(e.to),target:"_blank"})}function c(e){const n=e.text??"Example (Click Here)";return(0,a.jsxs)(l,{...e,children:[(0,a.jsx)("span",{children:"\xa0"}),(0,a.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}},59309:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/basic/your_first_app/composition","title":"Putting it all together","description":"As software gets more complex, we resort to modularity and composition to keep it manageable.","source":"@site/versioned_docs/version-1.0/tutorials/basic/your_first_app/6_composition.md","sourceDirName":"tutorials/basic/your_first_app","slug":"/tutorials/basic/your_first_app/composition","permalink":"/docs/1.0/tutorials/basic/your_first_app/composition","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/tutorials/basic/your_first_app/6_composition.md","tags":[],"version":"1.0","lastUpdatedBy":"dependabot[bot]","lastUpdatedAt":1756143349000,"sidebarPosition":6,"frontMatter":{"id":"composition","title":"Putting it all together"},"sidebar":"docs","previous":{"title":"Selecting defaults for config groups","permalink":"/docs/1.0/tutorials/basic/your_first_app/defaults"},"next":{"title":"Multi-run","permalink":"/docs/1.0/tutorials/basic/running_your_app/multi-run"}}');var i=t(74848),o=t(28453),a=t(49595);const r={id:"composition",title:"Putting it all together"},l=void 0,c={},d=[{value:"Summary",id:"summary",level:3}];function u(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.C,{to:"examples/tutorials/basic/your_first_hydra_app/6_composition"}),"\n",(0,i.jsx)(n.p,{children:"As software gets more complex, we resort to modularity and composition to keep it manageable.\nWe can do the same with configs: suppose we want our working example to support multiple databases, with\nmultiple schemas per database, and different UIs. We wouldn't write a separate class\nfor each permutation of db, schema and UI, so we shouldn't write separate configs either. We use\nthe same solution in configuration as in writing the underlying software: composition."}),"\n",(0,i.jsxs)(n.p,{children:["To do this in Hydra, we first add a ",(0,i.jsx)(n.code,{children:"schema"})," and a ",(0,i.jsx)(n.code,{children:"ui"})," config group:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Directory layout"',children:"\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u251c\u2500\u2500 config.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 db\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 mysql.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 postgresql.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 schema\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 school.yaml\n\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 support.yaml\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 warehouse.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 ui\n\u2502\xa0\xa0     \u251c\u2500\u2500 full.yaml\n\u2502\xa0\xa0     \u2514\u2500\u2500 view.yaml\n\u2514\u2500\u2500 my_app.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["With these configs, we already have 12 possible combinations. Without composition we would need 12 separate configs,\nand a single change (such as renaming ",(0,i.jsx)(n.code,{children:"db.user"})," to ",(0,i.jsx)(n.code,{children:"db.username"}),") would need to be done separately in every one of them."]}),"\n",(0,i.jsx)(n.p,{children:"This is a maintainability nightmare -- but composition can come to the rescue."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"defaults:\n  - db: mysql\n  - ui: full\n  - schema: school\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The resulting configuration would be a composition of ",(0,i.jsx)(n.code,{children:"mysql"}),", ",(0,i.jsx)(n.code,{children:"full"})," ui and the ",(0,i.jsx)(n.code,{children:"school"})," database schema (which we are seeing for the first time here):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\ndb:\n  driver: mysql\n  user: omry\n  pass: secret\nui:\n  windows:\n    create_db: true\n    view: true\nschema:\n  database: school\n  tables:\n  - name: students\n    fields:\n    - name: string\n    - class: int\n  - name: exams\n    fields:\n    - profession: string\n    - time: data\n    - class: int\n"})}),"\n",(0,i.jsx)(n.h3,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The addition of each new db, schema, or ui only requires a single file"}),"\n",(0,i.jsxs)(n.li,{children:["Each config group can have a default specified in the ",(0,i.jsx)(n.code,{children:"defaults"})," list"]}),"\n",(0,i.jsxs)(n.li,{children:["Any combination can be composed by selecting the desired option from each config group in the ",(0,i.jsx)(n.code,{children:"defaults"})," list or the command line."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Stay tuned to see how to run all of the combinations automatically (",(0,i.jsx)(n.a,{href:"/docs/1.0/tutorials/basic/running_your_app/multi-run",children:"Multi-run"}),")."]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);