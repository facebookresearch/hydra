"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7715],{5630:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"configure_hydra/workdir","title":"Customizing working directory pattern","description":"Hydra automatically creates an output directory used to store log files and","source":"@site/versioned_docs/version-1.2/configure_hydra/workdir.md","sourceDirName":"configure_hydra","slug":"/configure_hydra/workdir","permalink":"/docs/1.2/configure_hydra/workdir","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/configure_hydra/workdir.md","tags":[],"version":"1.2","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1754333694000,"frontMatter":{"id":"workdir","title":"Customizing working directory pattern","sidebar_label":"Customizing working directory pattern"},"sidebar":"docs","previous":{"title":"Customizing logging","permalink":"/docs/1.2/configure_hydra/logging"},"next":{"title":"Customizing Application\'s help","permalink":"/docs/1.2/configure_hydra/app_help"}}');var a=r(74848),t=r(28453),o=r(49595);const d={id:"workdir",title:"Customizing working directory pattern",sidebar_label:"Customizing working directory pattern"},s=void 0,c={},l=[{value:"Configuration for run",id:"configuration-for-run",level:3},{value:"Configuration for multirun",id:"configuration-for-multirun",level:3},{value:"Using <code>hydra.job.override_dirname</code>",id:"using-hydrajoboverride_dirname",level:3}];function u(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.C,{text:"Example application",to:"examples/configure_hydra/workdir"}),"\n",(0,a.jsxs)(n.p,{children:["Hydra automatically creates an output directory used to store log files and\nsave yaml configs. This directory can be configured by setting ",(0,a.jsx)(n.code,{children:"hydra.run.dir"}),"\n(for single hydra runs) or ",(0,a.jsx)(n.code,{children:"hydra.sweep.dir"}),"/",(0,a.jsx)(n.code,{children:"hydra.sweep.subdir"})," (for multirun\nsweeps). At runtime, the path of the output directory can be\n",(0,a.jsx)(n.a,{href:"/docs/1.2/configure_hydra/intro#accessing-the-hydra-config",children:"accessed"})," via the ",(0,a.jsx)(n.code,{children:"hydra.runtime.output_dir"})," variable.\nBelow are a few examples of customizing output directory patterns."]}),"\n",(0,a.jsx)(n.h3,{id:"configuration-for-run",children:"Configuration for run"}),"\n",(0,a.jsx)(n.p,{children:"Run output directory grouped by date:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: ./outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Run output directory grouped by job name:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Run output directory can contain user configuration variables:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: outputs/${now:%Y-%m-%d_%H-%M-%S}/opt:${optimizer.type}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"configuration-for-multirun",children:"Configuration for multirun"}),"\n",(0,a.jsx)(n.p,{children:"We will run the application with same command but different configurations:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python my_app.py --multirun a=a1,a2,a3 \n"})}),"\n",(0,a.jsx)(n.p,{children:"Default multirun dir configurations:"}),"\n",(0,a.jsxs)("div",{className:"row",children:[(0,a.jsx)("div",{className:"col col--8",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"hydra:\n  sweep:\n    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}\n    subdir: ${hydra.job.num}\n\n"})})}),(0,a.jsx)("div",{className:"col  col--4",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="workding dir created"',children:"$ tree my_app -d\nmy_app\n\u251c\u2500\u2500 0\n\u251c\u2500\u2500 1\n\u2514\u2500\u2500 2\n"})})})]}),"\n",(0,a.jsx)(n.p,{children:"Similar configuration patterns in run can be applied to config multirun dir as well."}),"\n",(0,a.jsx)(n.p,{children:"For example, multirun output directory grouped by job name, and sub dir by job num:"}),"\n",(0,a.jsxs)("div",{className:"row",children:[(0,a.jsx)("div",{className:"col col--6",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"hydra:\n  sweep:\n    dir: ${hydra.job.name}\n    subdir: ${hydra.job.num}\n\n"})})}),(0,a.jsx)("div",{className:"col  col--6",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="workding dir created"',children:"$ tree my_app -d\nmy_app\n\u251c\u2500\u2500 0\n\u251c\u2500\u2500 1\n\u2514\u2500\u2500 2\n"})})})]}),"\n",(0,a.jsxs)(n.h3,{id:"using-hydrajoboverride_dirname",children:["Using ",(0,a.jsx)(n.code,{children:"hydra.job.override_dirname"})]}),"\n",(0,a.jsx)(o.C,{text:"Example application",to:"examples/configure_hydra/job_override_dirname"}),"\n",(0,a.jsxs)(n.p,{children:["This field is populated automatically using your command line arguments and is typically being used as a part of your\noutput directory pattern. It is meant to be used along with the configuration for working dir, especially\nin ",(0,a.jsx)(n.code,{children:"hydra.sweep.subdir"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"If we run the example application with the following commandline overrides and configs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"python my_app.py --multirun batch_size=32 learning_rate=0.1,0.01\n"})}),"\n",(0,a.jsxs)("div",{className:"row",children:[(0,a.jsx)("div",{className:"col col--6",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"hydra:\n  sweep:\n    dir: multirun\n    subdir: ${hydra.job.override_dirname}\n"})})}),(0,a.jsx)("div",{className:"col  col--6",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:'title="working dir created"',children:"$ tree multirun -d\nmultirun\n\u251c\u2500\u2500 batch_size=32,learning_rate=0.01\n\u2514\u2500\u2500 batch_size=32,learning_rate=0.1\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["You can further customized the output dir creation by configuring",(0,a.jsx)(n.code,{children:"hydra.job.override_dirname"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["In particular, the separator char ",(0,a.jsx)(n.code,{children:"="})," and the item separator char ",(0,a.jsx)(n.code,{children:","})," can be modified by overriding\n",(0,a.jsx)(n.code,{children:"hydra.job.config.override_dirname.kv_sep"})," and ",(0,a.jsx)(n.code,{children:"hydra.job.config.override_dirname.item_sep"}),".\nCommand line override keys can also be automatically excluded from the generated ",(0,a.jsx)(n.code,{children:"override_dirname"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"An example of a case where the exclude is useful is a random seed."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: output/${hydra.job.override_dirname}/seed=${seed}\n  job:\n    config:\n      override_dirname:\n        exclude_keys:\n          - seed\n"})}),"\n",(0,a.jsx)(n.p,{children:"With this configuration, running"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ python my_app.py --multirun  batch_size=32 learning_rate=0.1,0.01 seed=1,2\n"})}),"\n",(0,a.jsx)(n.p,{children:"Would result in a directory structure like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"$ tree multirun -d\nmultirun\n\u251c\u2500\u2500 batch_size=32,learning_rate=0.01\n\u2502\xa0\xa0 \u251c\u2500\u2500 seed=1\n\u2502\xa0\xa0 \u2514\u2500\u2500 seed=2\n\u2514\u2500\u2500 batch_size=32,learning_rate=0.1\n    \u251c\u2500\u2500 seed=1\n    \u2514\u2500\u2500 seed=2\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>d});var i=r(96540);const a={},t=i.createContext(a);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},49595:(e,n,r)=>{r.d(n,{A:()=>s,C:()=>c});r(96540);var i=r(28774),a=r(44586),t=r(48295),o=r(74848);function d(e){const n=(0,t.ir)();return(0,a.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function s(e){return(0,o.jsx)(i.default,{...e,to:d(e.to),target:"_blank"})}function c(e){const n=e.text??"Example (Click Here)";return(0,o.jsxs)(s,{...e,children:[(0,o.jsx)("span",{children:"\xa0"}),(0,o.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}}}]);