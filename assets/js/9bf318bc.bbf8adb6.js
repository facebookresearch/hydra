"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9065],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(96540);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},94023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"tutorial/debugging","title":"Debugging","description":"Hydra provides a few options to improve debuggability.","source":"@site/versioned_docs/version-0.11/tutorial/10_debugging.md","sourceDirName":"tutorial","slug":"/tutorial/debugging","permalink":"/docs/0.11/tutorial/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/tutorial/10_debugging.md","tags":[],"version":"0.11","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761323009000,"sidebarPosition":10,"frontMatter":{"id":"debugging","title":"Debugging","sidebar_label":"Debugging"},"sidebar":"docs","previous":{"title":"Logging","permalink":"/docs/0.11/tutorial/logging"},"next":{"title":"Creating objects","permalink":"/docs/0.11/patterns/objects"}}');var o=t(74848),r=t(28453);const a={id:"debugging",title:"Debugging",sidebar_label:"Debugging"},s=void 0,c={},d=[{value:"Printing the configuration",id:"printing-the-configuration",level:3},{value:"Hydra verbose debugging",id:"hydra-verbose-debugging",level:3}];function l(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Hydra provides a few options to improve debuggability."}),"\n",(0,o.jsx)(n.h3,{id:"printing-the-configuration",children:"Printing the configuration"}),"\n",(0,o.jsx)(n.p,{children:"Print the config that would be used for a job without actually running it by adding '-c job' or '--cfg job' to your command line:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# A normal run:\n$ python tutorial/objects_example/my_app.py\nMySQL connecting to localhost with user=root and password=1234\n\n# just show the config without running your function:\n$ python tutorial/objects_example/my_app.py -c job\n[2019-09-29 11:09:14,134] -\ndb:\n  class: tutorial.objects_example.my_app.MySQLConnection\n  params:\n    host: localhost\n    password: 1234\n    user: root\n"})}),"\n",(0,o.jsx)(n.p,{children:"The printed config would be the actual config the job received with the rest of the command line arguments:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"$ python tutorial/objects_example/my_app.py db=postgresql db.params.database=tutorial2 --cfg job\n[2019-09-29 11:14:55,977] -\ndb:\n  class: tutorial.objects_example.my_app.PostgreSQLConnection\n  params:\n    database: tutorial2\n    host: localhost\n    password: 1234\n    user: root\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"--cfg"})," option takes one argument indicating which part of the config to print:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"job"})," : Your config"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"hydra"})," : Hydra's config"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"all"})," : The full config, which is a union of ",(0,o.jsx)(n.code,{children:"job"})," and ",(0,o.jsx)(n.code,{children:"hydra"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"hydra-verbose-debugging",children:"Hydra verbose debugging"}),"\n",(0,o.jsxs)(n.p,{children:["Hydra prints some very useful information in ",(0,o.jsx)(n.code,{children:"DEBUG"})," log level.\nThis includes:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Installed plugins : What Hydra plugins are installed in the environment"}),"\n",(0,o.jsx)(n.li,{children:"Config search path : The configuration search path"}),"\n",(0,o.jsx)(n.li,{children:"Composition trace : Which config files were used to compose your configuration, at what order and where did they came from."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This is often used with ",(0,o.jsx)(n.code,{children:"-c"})," to just see the config without running the application.\nExample output:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"$ python my_app.py hydra.verbose=hydra --cfg job\n[2019-09-29 13:35:46,780] - Installed Hydra Plugins\n[2019-09-29 13:35:46,780] - ***********************\n[2019-09-29 13:35:46,780] -     SearchPathPlugin:\n[2019-09-29 13:35:46,780] -     -----------------\n[2019-09-29 13:35:46,781] -     Sweeper:\n[2019-09-29 13:35:46,781] -     --------\n[2019-09-29 13:35:46,782] -             BasicSweeper\n[2019-09-29 13:35:46,782] -     Launcher:\n[2019-09-29 13:35:46,782] -     ---------\n[2019-09-29 13:35:46,783] -             BasicLauncher\n[2019-09-29 13:35:46,783] -\n[2019-09-29 13:35:46,783] - Hydra config search path\n[2019-09-29 13:35:46,783] - ************************\n[2019-09-29 13:35:46,783] - | Provider | Search path                           |\n[2019-09-29 13:35:46,783] - ----------------------------------------------------\n[2019-09-29 13:35:46,783] - | hydra  | pkg://hydra.conf                        |\n[2019-09-29 13:35:46,783] - | main   | /Users/omry/dev/hydra/tutorial/logging  |\n[2019-09-29 13:35:46,783] -\n[2019-09-29 13:35:46,783] - Composition trace\n[2019-09-29 13:35:46,783] - *****************\n[2019-09-29 13:35:46,783] - | Provider | Search path     | File      |\n...\n"})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);