"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3369],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var o=i(96540);const t={},r=o.createContext(t);function a(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},80612:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tutorial/config_file","title":"Configuration file","description":"It can get tedious to type all those command line arguments every time.","source":"@site/versioned_docs/version-0.11/tutorial/2_config_file.md","sourceDirName":"tutorial","slug":"/tutorial/config_file","permalink":"/docs/0.11/tutorial/config_file","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/tutorial/2_config_file.md","tags":[],"version":"0.11","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761332619000,"sidebarPosition":2,"frontMatter":{"id":"config_file","title":"Configuration file","sidebar_label":"Configuration file"},"sidebar":"docs","previous":{"title":"Simple command line application","permalink":"/docs/0.11/tutorial/simple_cli"},"next":{"title":"Config groups","permalink":"/docs/0.11/tutorial/config_groups"}}');var t=i(74848),r=i(28453);const a={id:"config_file",title:"Configuration file",sidebar_label:"Configuration file"},s=void 0,c={},l=[{value:"Strict mode",id:"strict-mode",level:3}];function d(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"It can get tedious to type all those command line arguments every time.\nFix it by creating a configuration file:"}),"\n",(0,t.jsxs)(n.p,{children:["Configuration file: ",(0,t.jsx)(n.code,{children:"config.yaml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"db:\n  driver: mysql\n  user: omry\n  pass: secret\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Specify the config file by passing a ",(0,t.jsx)(n.code,{children:"config_path"})," parameter to the ",(0,t.jsx)(n.code,{children:"@hydra.main()"})," decorator.\nThe location of the ",(0,t.jsx)(n.code,{children:"config_path"})," is relative to your Python file."]}),"\n",(0,t.jsxs)(n.p,{children:["Python file: ",(0,t.jsx)(n.code,{children:"my_app.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@hydra.main(config_path='config.yaml')\ndef my_app(cfg):\n    print(OmegaConf.to_yaml(cfg))\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"config.yaml"})," is loaded automatically when you run your application"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\ndb:\n  driver: mysql\n  pass: secret\n  user: omry\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can override values in the loaded config from the command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py db.user=root db.pass=1234\ndb:\n  driver: mysql\n  user: root\n  pass: 1234\n"})}),"\n",(0,t.jsx)(n.h3,{id:"strict-mode",children:"Strict mode"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Strict mode"})," is useful for catching mistakes in both the command line overrides and in the code early.\nStrict mode is on by default when you specify a configuration file for the ",(0,t.jsx)(n.code,{children:"config_path"})," argument in ",(0,t.jsx)(n.code,{children:"@hydra.main"})," decorator.\nIt can be turned on or off via the ",(0,t.jsx)(n.code,{children:"strict"})," argument in your ",(0,t.jsx)(n.code,{children:"@hydra.main()"})," decorator."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@hydra.main(config_path='config.yaml')\ndef my_app(cfg):\n    driver = cfg.db.driver # Okay\n    user = cfg.db.user # Okay\n    password = cfg.db.password # Not okay, there is no password field in db!\n                               # This will result in a KeyError\n"})}),"\n",(0,t.jsx)(n.p,{children:"Strict mode will also catch command line override mistakes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"$ python my_app.py db.port=3306\nTraceback (most recent call last):\n...\nKeyError: 'Accessing unknown key in a struct : db.port\n"})}),"\n",(0,t.jsx)(n.p,{children:"With strict mode off, accessing unknown keys in the config is permitted and both the above override and the example\nbelow would run."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"@hydra.main(config_path='config.yaml', strict=False)\ndef my_app(cfg):\n    cfg.db.port = 3306 # Okay\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);