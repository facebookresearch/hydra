"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1494],{28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>s});var i=n(96540);const t={},o=i.createContext(t);function d(e){const r=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(o.Provider,{value:r},e.children)}},68353:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>d,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"configure_hydra/workdir","title":"Customizing working directory pattern","description":"Run output directory grouped by day:","source":"@site/versioned_docs/version-0.11/configure_hydra/workdir.md","sourceDirName":"configure_hydra","slug":"/configure_hydra/workdir","permalink":"/docs/0.11/configure_hydra/workdir","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/configure_hydra/workdir.md","tags":[],"version":"0.11","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755108758000,"frontMatter":{"id":"workdir","title":"Customizing working directory pattern","sidebar_label":"Customizing working directory pattern"},"sidebar":"docs","previous":{"title":"Customizing logging","permalink":"/docs/0.11/configure_hydra/logging"},"next":{"title":"Customizing Application\'s help","permalink":"/docs/0.11/configure_hydra/app_help"}}');var t=n(74848),o=n(28453);const d={id:"workdir",title:"Customizing working directory pattern",sidebar_label:"Customizing working directory pattern"},s=void 0,a={},u=[{value:"Configuring hydra.job.override_dirname",id:"configuring-hydrajoboverride_dirname",level:3},{value:"Customizing outputs with substitution through the CLI",id:"customizing-outputs-with-substitution-through-the-cli",level:3}];function c(e){const r={blockquote:"blockquote",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Run output directory grouped by day:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: ./outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Sweep sub directory contains the the job number and the override parameters for the job instance:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  sweep:\n    subdir: ${hydra.job.num}_${hydra.job.num}_${hydra.job.override_dirname}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Run output directory grouped by job name:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Run output directory can contain user configuration variables:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: outputs/${now:%Y-%m-%d_%H-%M-%S}/opt:${optimizer.type}\n\n"})}),"\n",(0,t.jsx)(r.p,{children:"Run output directory can contain override parameters for the job"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  run:\n    dir: output/${hydra.job.override_dirname}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"configuring-hydrajoboverride_dirname",children:"Configuring hydra.job.override_dirname"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"hydra.job.override_dirname"})," can be configured via hydra.job.config.override_dirname.\nYou can exclude keys such as ",(0,t.jsx)(r.code,{children:"random_seed"})," or change the separator used to construct override_dirname."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"hydra:\n  job:\n    config:\n      # configuration for the ${hydra.job.override_dirname} runtime variable\n      override_dirname:\n        kv_sep: '='\n        item_sep: ','\n        exclude_keys: []\n"})}),"\n",(0,t.jsx)(r.h3,{id:"customizing-outputs-with-substitution-through-the-cli",children:"Customizing outputs with substitution through the CLI"}),"\n",(0,t.jsx)(r.p,{children:"Outputs can also be configured through the CLI, like any other configuration."}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"python train.py model.nb_layers=3 hydra.run.dir=3_layers"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"This feature can become really powerful to write multiruns without boilerplate using substitution."}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"python train.py --multirun model.nb_layers=1,2,3,5 hydra.sweep.dir=multiruns/layers_effect hydra.sweep.subdir=\\${model.nb_layers}"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"With bash, be careful to escape the $ symbol. Otherwise, bash will try to resolve the substitution, instead of passing it to Hydra."})]})}function l(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);