"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8944],{9407:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/basic/your_first_app/config_groups","title":"Grouping config files","description":"Suppose you want to benchmark your application on each of PostgreSQL and MySQL. To do this, use config groups.","source":"@site/versioned_docs/version-1.0/tutorials/basic/your_first_app/4_config_groups.md","sourceDirName":"tutorials/basic/your_first_app","slug":"/tutorials/basic/your_first_app/config_groups","permalink":"/docs/1.0/tutorials/basic/your_first_app/config_groups","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/tutorials/basic/your_first_app/4_config_groups.md","tags":[],"version":"1.0","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1754333694000,"sidebarPosition":4,"frontMatter":{"id":"config_groups","title":"Grouping config files"},"sidebar":"docs","previous":{"title":"Using the config object","permalink":"/docs/1.0/tutorials/basic/your_first_app/using_config"},"next":{"title":"Selecting defaults for config groups","permalink":"/docs/1.0/tutorials/basic/your_first_app/defaults"}}');var i=o(74848),r=o(28453),t=o(49595);const a={id:"config_groups",title:"Grouping config files"},c=void 0,l={},d=[{value:"Using config groups",id:"using-config-groups",level:3},{value:"More advanced usages of config groups",id:"more-advanced-usages-of-config-groups",level:3}];function p(e){const n={a:"a",br:"br",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.C,{to:"examples/tutorials/basic/your_first_hydra_app/4_config_groups"}),"\n",(0,i.jsx)(n.p,{children:"Suppose you want to benchmark your application on each of PostgreSQL and MySQL. To do this, use config groups."}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Config Group"})})," is a named group with a set of valid options."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The config options are mutually exclusive. Only one can be selected."}),"\n",(0,i.jsx)(n.li,{children:"Selecting a non-existent config option generates an error message with the valid options."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To create a config group, create a directory. e.g. ",(0,i.jsx)(n.code,{children:"db"})," to hold a file for each database configuration option.\nSince we are expecting to have multiple config groups, we will proactively move all the configuration files\ninto a ",(0,i.jsx)(n.code,{children:"conf"})," directory."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Directory layout"',children:"\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u2514\u2500\u2500 db\n\u2502\xa0\xa0     \u251c\u2500\u2500 mysql.yaml\n\u2502\xa0\xa0     \u2514\u2500\u2500 postgresql.yaml\n\u2514\u2500\u2500 my_app.py\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="db/mysql.yaml"',children:"# @package _group_\ndriver: mysql\nuser: omry\npassword: secret\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The config group determines the ",(0,i.jsx)(n.code,{children:"package"})," of the config content inside the final config object."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="Interpretation of db/mysql.yaml" {1}',children:"db:\n  driver: mysql\n  user: omry\n  password: secret \n"})}),"\n",(0,i.jsxs)(n.p,{children:["In Hydra 1.1 ",(0,i.jsx)(n.code,{children:"_group_"})," will become the default package.",(0,i.jsx)(n.br,{}),"\n","For now, add ",(0,i.jsx)(n.code,{children:"# @package _group_"})," at the top of your config group files.",(0,i.jsx)(n.br,{}),"\n","Learn more about packages directive ",(0,i.jsx)(n.a,{href:"/docs/1.0/advanced/overriding_packages",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"using-config-groups",children:"Using config groups"}),"\n",(0,i.jsxs)(n.p,{children:["Since we moved all the configs into the ",(0,i.jsx)(n.code,{children:"conf"})," directory, we need to tell Hydra where to find them using the ",(0,i.jsx)(n.code,{children:"config_path"})," parameter.\n",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"config_path"})," is a directory relative to ",(0,i.jsx)(n.code,{children:"my_app.py"})]}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="my_app.py" {1}',children:'@hydra.main(config_path="conf")\ndef my_app(cfg: DictConfig) -> None:\n    print(OmegaConf.to_yaml(cfg))\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Running ",(0,i.jsx)(n.code,{children:"my_app.py"})," without requesting a configuration will print an empty config."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\n{}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can append an item a config group to the ",(0,i.jsx)(n.code,{children:"Defaults List"}),".",(0,i.jsx)(n.br,{}),"\n","The ",(0,i.jsx)(n.code,{children:"Defaults List"})," is described on the next page."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py +db=postgresql\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 10\n  user: postgres_user\n"})}),"\n",(0,i.jsx)(n.p,{children:"Like before, you can still override individual values in the resulting config:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py +db=postgresql db.timeout=20\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 20\n  user: postgres_user\n"})}),"\n",(0,i.jsx)(n.h3,{id:"more-advanced-usages-of-config-groups",children:"More advanced usages of config groups"}),"\n",(0,i.jsxs)(n.p,{children:["Config groups can be nested. For example the config group ",(0,i.jsx)(n.code,{children:"db/mysql/storage_engine"})," can contain ",(0,i.jsx)(n.code,{children:"innodb.yaml"})," and ",(0,i.jsx)(n.code,{children:"myisam.yaml"}),".\nWhen selecting an option from a nested config group, use ",(0,i.jsx)(n.code,{children:"/"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ python my_app.py +db=mysql +db/mysql/storage_engine=innodb\ndb:\n  driver: mysql\n  user: omry\n  password: secret \n  mysql:\n    storage_engine:\n      innodb_data_file_path: /var/lib/mysql/ibdata1\n      max_file_size: 1G\n"})}),"\n",(0,i.jsx)(n.p,{children:"This simple example also demonstrated a very powerful feature of Hydra:\nYou can compose your configuration object from multiple configuration groups."})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>a});var s=o(96540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}},49595:(e,n,o)=>{o.d(n,{A:()=>c,C:()=>l});o(96540);var s=o(28774),i=o(44586),r=o(48295),t=o(74848);function a(e){const n=(0,r.ir)();return(0,i.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function c(e){return(0,t.jsx)(s.default,{...e,to:a(e.to),target:"_blank"})}function l(e){const n=e.text??"Example (Click Here)";return(0,t.jsxs)(c,{...e,children:[(0,t.jsx)("span",{children:"\xa0"}),(0,t.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}}}]);