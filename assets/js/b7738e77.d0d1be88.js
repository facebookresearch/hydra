"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6895],{24574:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"plugins/rq_launcher","title":"RQ Launcher plugin","description":"PyPI","source":"@site/versioned_docs/version-1.0/plugins/rq_launcher.md","sourceDirName":"plugins","slug":"/plugins/rq_launcher","permalink":"/docs/1.0/plugins/rq_launcher","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/plugins/rq_launcher.md","tags":[],"version":"1.0","lastUpdatedBy":"zhenbang-2026","lastUpdatedAt":1756937906000,"frontMatter":{"id":"rq_launcher","title":"RQ Launcher plugin","sidebar_label":"RQ Launcher plugin"},"sidebar":"docs","previous":{"title":"Ray Launcher plugin","permalink":"/docs/1.0/plugins/ray_launcher"},"next":{"title":"Submitit Launcher plugin","permalink":"/docs/1.0/plugins/submitit_launcher"}}');var s=r(74848),a=r(28453);const t={id:"rq_launcher",title:"RQ Launcher plugin",sidebar_label:"RQ Launcher plugin"},l=void 0,o={},d=[{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3}];function c(e){const n={a:"a",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://pypi.org/project/hydra-rq-launcher/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/v/hydra-rq-launcher",alt:"PyPI"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/l/hydra-rq-launcher",alt:"PyPI - License"}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/pyversions/hydra-rq-launcher",alt:"PyPI - Python Version"}),"\n",(0,s.jsx)(n.a,{href:"https://pypistats.org/packages/hydra-rq-launcher",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/dm/hydra-rq-launcher.svg",alt:"PyPI - Downloads"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_rq_launcher/example",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-Example%20application-informational",alt:"Example application"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_rq_launcher",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/-Plugin%20source-informational",alt:"Plugin source"})})]}),"\n",(0,s.jsxs)(n.p,{children:["The RQ Launcher plugin provides a launcher for distributed execution and job queuing based on ",(0,s.jsx)(n.a,{href:"https://python-rq.org",children:"Redis Queue (RQ)"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["RQ launcher allows parallelizing across multiple nodes and scheduling jobs in queues. Usage of this plugin requires a ",(0,s.jsx)(n.a,{href:"https://redis.io/topics/quickstart",children:"Redis server"}),". When parallelisation on a single node is intended, the Joblib launcher may be preferable, since it works without a database."]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"pip install hydra-rq-launcher --upgrade\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Usage of this plugin requires a ",(0,s.jsx)(n.a,{href:"https://redis.io/topics/quickstart",children:"Redis server"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that RQ does ",(0,s.jsx)(n.a,{href:"https://python-rq.org/docs/#limitations",children:"not support Windows"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Once installed, add ",(0,s.jsx)(n.code,{children:"hydra/launcher=rq"})," to your command line. Alternatively, override ",(0,s.jsx)(n.code,{children:"hydra/launcher"})," in your config:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - hydra/launcher: rq\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The configuration packaged with the plugin is defined ",(0,s.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/blob/master/plugins/hydra_rq_launcher/hydra_plugins/hydra_rq_launcher/config.py",children:"here"}),". The default configuration is as follows:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="$ python your_app.py hydra/launcher=rq --cfg hydra -p hydra.launcher"',children:'# @package hydra.launcher\n_target_: hydra_plugins.hydra_rq_launcher.rq_launcher.RQLauncher\nenqueue:\n  job_timeout: null                  # maximum runtime of the job before it\'s killed (e.g. "1d" for 1 day, units: d/h/m/s), default: no limit\n  ttl: null                          # maximum queued time before the job before is discarded (e.g. "1d" for 1 day, units: d/h/m/s), default: no limit\n  result_ttl: null                   # how long successful jobs and their results are kept (e.g. "1d" for 1 day, units: d/h/m/s), default: no limit\n  failure_ttl: null                  # specifies how long failed jobs are kept (e.g. "1d" for 1 day, units: d/h/m/s), default: no limit\n  at_front: false                    # place job at the front of the queue, instead of the back\n  job_id: null                       # job id, will be overidden automatically by a uuid unless specified explicitly\n  description: null                  # description, will be overidden automatically unless specified explicitly\nqueue: default                       # queue name\nredis:\n  host: ${env:REDIS_HOST,localhost}  # host address via REDIS_HOST environment variable, default: localhost\n  port: ${env:REDIS_PORT,6379}       # port via REDIS_PORT environment variable, default: 6379\n  db: ${env:REDIS_DB,0}              # database via REDIS_DB environment variable, default: 0\n  password: ${env:REDIS_PASSWORD,}   # password via REDIS_PASSWORD environment variable, default: no password\n  mock: ${env:REDIS_MOCK,False}      # switch to run without redis server in single thread, for testing purposes only\nstop_after_enqueue: false            # stop after enqueueing by raising custom exception\nwait_polling: 1.0                    # wait time in seconds when polling results\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The plugin is using environment variables to store Redis connection information. The environment variables ",(0,s.jsx)(n.code,{children:"REDIS_HOST"}),", ",(0,s.jsx)(n.code,{children:"REDIS_PORT"}),", ",(0,s.jsx)(n.code,{children:"REDIS_DB"}),", and ",(0,s.jsx)(n.code,{children:"REDIS_PASSWORD"}),", are used for the host address, port, database, and password of the server, respectively."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, they might be set as follows when using ",(0,s.jsx)(n.code,{children:"bash"})," or ",(0,s.jsx)(n.code,{children:"zsh"})," as a shell:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:'export REDIS_HOST="localhost"\nexport REDIS_PORT="6379"\nexport REDIS_DB="0"\nexport REDIS_PASSWORD=""\n'})}),"\n",(0,s.jsx)(n.p,{children:"Assuming configured environment variables, workers connecting to the Redis server can be launched using:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"rq worker --url redis://:$REDIS_PASSWORD@$REDIS_HOST:$REDIS_PORT/$REDIS_DB\n"})}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_rq_launcher/example",children:"example application"})," using this launcher is provided in the plugin repository."]}),"\n",(0,s.jsxs)(n.p,{children:["Starting the app with ",(0,s.jsx)(n.code,{children:"python my_app.py --multirun task=1,2,3,4,5"})," will enqueue five jobs to be processed by worker instances:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"$ python my_app.py --multirun task=1,2,3,4,5\n\n[HYDRA] RQ Launcher is enqueuing 5 job(s) in queue : default\n[HYDRA] Sweep output dir : multirun/2020-06-15/18-00-00\n[HYDRA] Enqueued 13b3da4e-03f7-4d16-9ca8-cfb3c48afeae\n[HYDRA] \t#1 : task=1\n[HYDRA] Enqueued 00c6a32d-e5a4-432c-a0f3-b9d4ef0dd585\n[HYDRA] \t#2 : task=2\n[HYDRA] Enqueued 63b90f27-0711-4c95-8f63-70164fd850df\n[HYDRA] \t#3 : task=3\n[HYDRA] Enqueued b1d49825-8b28-4516-90ca-8106477e1eb1\n[HYDRA] \t#4 : task=4\n[HYDRA] Enqueued ed96bdaa-087d-4c7f-9ecb-56daf948d5e2\n[HYDRA] \t#5 : task=5\n[HYDRA] Finished enqueuing\n[HYDRA] Polling job statuses every 1.0 sec\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that any dependencies need to be installed in the Python environment used to run the RQ worker. For serialization of jobs ",(0,s.jsx)(n.a,{href:"https://github.com/cloudpickle/cloudpickle",children:(0,s.jsx)(n.code,{children:"cloudpickle"})})," is used."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://python-rq.org/",children:"RQ documentation"})," holds further information on ",(0,s.jsx)(n.a,{href:"http://python-rq.org/docs/monitoring/",children:"job monitoring"}),", which can be done via console or ",(0,s.jsx)(n.a,{href:"https://github.com/nvie/rq-dashboard",children:"web interfaces"}),", and provides ",(0,s.jsx)(n.a,{href:"https://python-rq.org/patterns/",children:"patterns"})," for worker and exception handling."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var i=r(96540);const s={},a=i.createContext(s);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);