"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1442],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>a});var s=i(96540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},34370:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"tutorials/basic/your_first_app/defaults","title":"Selecting default configs","description":"After office politics, you decide that you want to use MySQL by default.","source":"@site/versioned_docs/version-1.2/tutorials/basic/your_first_app/5_defaults.md","sourceDirName":"tutorials/basic/your_first_app","slug":"/tutorials/basic/your_first_app/defaults","permalink":"/docs/1.2/tutorials/basic/your_first_app/defaults","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/tutorials/basic/your_first_app/5_defaults.md","tags":[],"version":"1.2","lastUpdatedBy":"dependabot[bot]","lastUpdatedAt":1756143349000,"sidebarPosition":5,"frontMatter":{"id":"defaults","title":"Selecting default configs"},"sidebar":"docs","previous":{"title":"Grouping config files","permalink":"/docs/1.2/tutorials/basic/your_first_app/config_groups"},"next":{"title":"Putting it all together","permalink":"/docs/1.2/tutorials/basic/your_first_app/composition"}}');var t=i(74848),o=i(28453),r=i(49595);const a={id:"defaults",title:"Selecting default configs"},l=void 0,d={},c=[{value:"Config group defaults",id:"config-group-defaults",level:3},{value:"Overriding a config group default",id:"overriding-a-config-group-default",level:4},{value:"Composition order of primary config",id:"composition-order-of-primary-config",level:3},{value:"Non-config group defaults",id:"non-config-group-defaults",level:3}];function f(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.C,{to:"examples/tutorials/basic/your_first_hydra_app/5_defaults"}),"\n",(0,t.jsxs)(n.p,{children:["After office politics, you decide that you want to use MySQL by default.\nYou no longer want to type ",(0,t.jsx)(n.code,{children:"+db=mysql"})," every time you run your application."]}),"\n",(0,t.jsxs)(n.p,{children:["You can add a ",(0,t.jsx)(n.strong,{children:"Default List"})," to your config file.\nA ",(0,t.jsx)(n.strong,{children:"Defaults List"})," is a list telling Hydra how to compose the final config object.\nBy convention, it is the first item in the config."]}),"\n",(0,t.jsx)(n.h3,{id:"config-group-defaults",children:"Config group defaults"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"defaults:\n  - db: mysql\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Remember to specify the ",(0,t.jsx)(n.code,{children:"config_name"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from omegaconf import DictConfig, OmegaConf\nimport hydra\n\n@hydra.main(version_base=None, config_path="conf", config_name="config")\ndef my_app(cfg: DictConfig) -> None:\n    print(OmegaConf.to_yaml(cfg))\n\nif __name__ == "__main__":\n    my_app()\n'})}),"\n",(0,t.jsx)(n.p,{children:"When you run the updated application, MySQL is loaded by default."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\ndb:\n  driver: mysql\n  pass: secret\n  user: omry\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can have multiple items in the defaults list, e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"defaults:\n - db: mysql\n - db/mysql/engine: innodb\n"})}),"\n",(0,t.jsx)(n.p,{children:"The defaults are ordered:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If multiple configs define the same value, the last one wins."}),"\n",(0,t.jsx)(n.li,{children:"If multiple configs contribute to the same dictionary, the result is the combined dictionary."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"overriding-a-config-group-default",children:"Overriding a config group default"}),"\n",(0,t.jsx)(n.p,{children:"You can still load PostgreSQL, and override individual values."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py db=postgresql db.timeout=20\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 20\n  user: postgres_user\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can remove a default entry from the defaults list by prefixing it with ~:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py ~db\n{}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"composition-order-of-primary-config",children:"Composition order of primary config"}),"\n",(0,t.jsxs)(n.p,{children:["Your primary config can contain both config values and a Defaults List.\nIn such cases, you should add the ",(0,t.jsx)(n.code,{children:"_self_"})," keyword to your defaults list to specify the composition order of the config file relative to the items in the defaults list."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you want your primary config to override the values of configs from the Defaults List, append ",(0,t.jsx)(n.code,{children:"_self_"})," to the end of the Defaults List."]}),"\n",(0,t.jsxs)(n.li,{children:["If you want the configs from the Defaults List to override the values in your primary config, insert ",(0,t.jsx)(n.code,{children:"_self_"})," as the first item in your Defaults List."]}),"\n"]}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col col--6",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml" {3}',children:"defaults:\n  - db: mysql\n  - _self_\n\ndb:\n  user: root\n"})})}),(0,t.jsx)("div",{className:"col  col--6",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="Result config: db.user from config.yaml" {4}',children:"db:\n  driver: mysql  # db/mysql.yaml\n  pass: secret   # db/mysql.yaml \n  user: root     # config.yaml\n\n\n"})})}),(0,t.jsx)("div",{className:"col col--6",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml" {2}',children:"defaults:\n  - _self_\n  - db: mysql\n\ndb:\n  user: root\n"})})}),(0,t.jsx)("div",{className:"col  col--6",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="Result config: All values from db/mysql" {4}',children:"db:\n  driver: mysql # db/mysql.yaml\n  pass: secret  # db/mysql.yaml\n  user: omry    # db/mysql.yaml\n\n\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/1.2/advanced/defaults_list#composition-order",children:"Composition Order"})," for more information."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"The default composition order changed between Hydra 1.0 and Hydra 1.1."}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hydra 1.0"}),": Configs from the defaults list are overriding the primary config"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hydra 1.1"}),": A config is overriding the configs from the defaults list."]}),"\n"]}),(0,t.jsxs)(n.p,{children:["To mitigate confusion, Hydra 1.1 issue a warning if the primary config contains both Default List and Config values, and ",(0,t.jsx)(n.code,{children:"_self_"})," is not specified in the Defaults List.",(0,t.jsx)(n.br,{}),"\n","The warning will disappear if you add ",(0,t.jsx)(n.code,{children:"_self_"})," to the Defaults List based on the desired behavior."]})]}),"\n",(0,t.jsx)(n.h3,{id:"non-config-group-defaults",children:"Non-config group defaults"}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes a config file does not belong in any config group.\nYou can still load it by default. Here is an example for ",(0,t.jsx)(n.code,{children:"some_file.yaml"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - some_file\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Config files that are not part of a config group will always be loaded. They cannot be overridden.",(0,t.jsx)(n.br,{}),"\n","Prefer using a config group."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["For more information about the Defaults List see ",(0,t.jsx)(n.a,{href:"/docs/1.2/advanced/defaults_list",children:"Reference Manual/The Defaults List"}),"."]})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}},49595:(e,n,i)=>{i.d(n,{A:()=>l,C:()=>d});i(96540);var s=i(28774),t=i(44586),o=i(48295),r=i(74848);function a(e){const n=(0,o.ir)();return(0,t.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function l(e){return(0,r.jsx)(s.default,{...e,to:a(e.to),target:"_blank"})}function d(e){const n=e.text??"Example (Click Here)";return(0,r.jsxs)(l,{...e,children:[(0,r.jsx)("span",{children:"\xa0"}),(0,r.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}}}]);