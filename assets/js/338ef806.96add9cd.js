"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3152],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},49595:(e,n,t)=>{t.d(n,{A:()=>c,C:()=>d});t(96540);var i=t(28774),s=t(44586),o=t(48295),a=t(74848);function r(e){const n=(0,o.ir)();return(0,s.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function c(e){return(0,a.jsx)(i.default,{...e,to:r(e.to),target:"_blank"})}function d(e){const n=e.text??"Example (Click Here)";return(0,a.jsxs)(c,{...e,children:[(0,a.jsx)("span",{children:"\xa0"}),(0,a.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}},79660:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"patterns/extending_configs","title":"Extending Configs","description":"A common pattern is to extend an existing config, overriding and/or adding new config values to it.","source":"@site/versioned_docs/version-1.3/patterns/extending_configs.md","sourceDirName":"patterns","slug":"/patterns/extending_configs","permalink":"/docs/1.3/patterns/extending_configs","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.3/patterns/extending_configs.md","tags":[],"version":"1.3","lastUpdatedBy":"zhenbang-2026","lastUpdatedAt":1757109332000,"frontMatter":{"id":"extending_configs","title":"Extending Configs"},"sidebar":"docs","previous":{"title":"Structured Config schema","permalink":"/docs/1.3/tutorials/structured_config/schema"},"next":{"title":"Configuring Experiments","permalink":"/docs/1.3/patterns/configuring_experiments"}}');var s=t(74848),o=t(28453),a=t(49595);const r={id:"extending_configs",title:"Extending Configs"},c=void 0,d={},l=[{value:"Extending a config from the same config group:",id:"extending-a-config-from-the-same-config-group",level:4},{value:"Extending a config from another config group:",id:"extending-a-config-from-another-config-group",level:4}];function g(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.C,{text:"Example application",to:"examples/patterns/extending_configs"}),"\n",(0,s.jsx)(n.p,{children:"A common pattern is to extend an existing config, overriding and/or adding new config values to it.\nThe extension is done by including the base configuration, and then overriding the chosen values in the current config."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This page assumes that you are familiar with the contents of ",(0,s.jsx)(n.a,{href:"/docs/1.3/advanced/defaults_list",children:"The Defaults List"}),"."]})}),"\n",(0,s.jsx)(n.h4,{id:"extending-a-config-from-the-same-config-group",children:"Extending a config from the same config group:"}),"\n",(0,s.jsxs)("div",{className:"row",children:[(0,s.jsx)("div",{className:"col col--4",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"defaults:\n  - db: mysql \n\n\n\n\n\n"})})}),(0,s.jsx)("div",{className:"col col--4",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="db/mysql.yaml" {2}',children:"defaults:\n  - base_mysql\n\nuser: omry\npassword: secret\nport: 3307\nencoding: utf8\n"})})}),(0,s.jsx)("div",{className:"col col--4",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="db/base_mysql.yaml"',children:"host: localhost\nport: 3306\nuser: ???\npassword: ???\n\n\n\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="$ python my_app.py"',children:"db:\n  host: localhost   # from db/base_mysql\n  port: 3307        # overridden by db/mysql.yaml \n  user: omry        # populated by db/mysql.yaml\n  password: secret  # populated by db/mysql.yaml\n  encoding: utf8    # added by db/mysql.yaml\n"})}),"\n",(0,s.jsx)(n.h4,{id:"extending-a-config-from-another-config-group",children:"Extending a config from another config group:"}),"\n",(0,s.jsxs)(n.p,{children:["To extend a config from a different config group, include it using an absolute path (/), and override\nthe package to ",(0,s.jsx)(n.em,{children:"_here_"}),". (",(0,s.jsx)(n.em,{children:"_here_"})," is described in ",(0,s.jsx)(n.a,{href:"/docs/1.3/advanced/overriding_packages#default-list-package-keywords",children:"Packages"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",metastring:'title="db/mysql.yaml" {2}',children:"defaults:\n  - /db_schema/base_mysql@_here_\n"})}),"\n",(0,s.jsx)(n.p,{children:"It is otherwise identical to extending a config within the same config group."})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);