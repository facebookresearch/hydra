"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9900],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(96540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},52695:e=>{e.exports=JSON.parse('{"permalink":"/blog/2022/05/18/Hydra_1.2","source":"@site/blog/2022-05-18-Hydra_1.2.md","title":"Hydra 1.2","description":"After many months and a lot of hard work by many people, Hydra 1.2 is released!","date":"2022-05-18T00:00:00.000Z","tags":[{"inline":true,"label":"Hydra","permalink":"/blog/tags/hydra"},{"inline":true,"label":"Release","permalink":"/blog/tags/release"}],"readingTime":3.31,"hasTruncateMarker":true,"authors":[{"name":"Padraig Brady","url":"https://github.com/pixelb","imageURL":"https://graph.facebook.com/733244046/picture/?height=200&width=200","key":null,"page":null}],"frontMatter":{"title":"Hydra 1.2","author":"Padraig Brady","author_url":"https://github.com/pixelb","author_image_url":"https://graph.facebook.com/733244046/picture/?height=200&width=200","tags":["Hydra","Release"],"image":"/img/Hydra-Readme-logo2.svg"},"unlisted":false,"nextItem":{"title":"Hydra 1.1","permalink":"/blog/2021/06/13/Hydra_1.1"}}')},97109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var i=t(52695),a=t(74848),s=t(28453);const r={title:"Hydra 1.2",author:"Padraig Brady",author_url:"https://github.com/pixelb",author_image_url:"https://graph.facebook.com/733244046/picture/?height=200&width=200",tags:["Hydra","Release"],image:"/img/Hydra-Readme-logo2.svg"},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Major new features in Hydra 1.2",id:"major-new-features-in-hydra-12",level:3},{value:"Object instantiation enhancements",id:"object-instantiation-enhancements",level:4},{value:"OmegaConf 2.2 highlights",id:"omegaconf-22-highlights",level:3},{value:"More flexible type hints in structured configs",id:"more-flexible-type-hints-in-structured-configs",level:4},{value:"Native support for bytes and pathlib.Path",id:"native-support-for-bytes-and-pathlibpath",level:4},{value:"Migrating from 1.1",id:"migrating-from-11",level:3}];function h(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("p",{align:"center",children:(0,a.jsx)("img",{src:"/img/Hydra-Readme-logo2.svg",alt:"logo",width:"70%"})}),"\n",(0,a.jsx)(n.p,{children:"After many months and a lot of hard work by many people, Hydra 1.2 is released!\nHydra 1.2 comes with OmegaConf 2.2, which has its own share of improvements."}),"\n",(0,a.jsx)(n.p,{children:"This blog post highlights some of the most prominent features, check the release notes for a complete list of changes:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Hydra 1.2 ",(0,a.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/releases/tag/v1.2.0",children:"release notes"})]}),"\n",(0,a.jsxs)(n.li,{children:["OmegaConf 2.2 ",(0,a.jsx)(n.a,{href:"https://github.com/omry/omegaconf/releases/tag/v2.2.1",children:"release notes"})]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"major-new-features-in-hydra-12",children:"Major new features in Hydra 1.2"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Easier integration with existing systems","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Support not changing working directory at runtime"}),"\n",(0,a.jsx)(n.li,{children:"Default to not implicitly adding directories to the config path"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Improved support for reproducible experiments","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Support defining multirun mode and sweeping parameters through config"}),"\n",(0,a.jsx)(n.li,{children:"Improved callback support for logging / persisting job runs"}),"\n",(0,a.jsxs)(n.li,{children:["A new ",(0,a.jsx)(n.code,{children:"--experimental-rerun"})," option to reproduce persisted single runs"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Improved instantiate API functionality","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Support for instances partially defined from config, via a ",(0,a.jsx)(n.code,{children:"_partial_"})," keyword"]}),"\n",(0,a.jsxs)(n.li,{children:["Accept ",(0,a.jsx)(n.code,{children:"ListConfig"}),"/",(0,a.jsx)(n.code,{children:"list"}),"-type config as top-level input"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Better alignment with ecosystem versions","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Support for Python 3.10, and ANTLR 4.9"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["OmegaConf 2.2:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"More flexible type hints in structured configs"}),"\n",(0,a.jsx)(n.li,{children:"Native support for bytes and pathlib.Path"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"object-instantiation-enhancements",children:"Object instantiation enhancements"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Lists can now be passed directly to the instantiate API.\nFor example one can now do:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from hydra.utils import instantiate\n\nlst = [\n    {"_target_": "pathlib.Path", "_args_": ["foo"]},\n    {"_target_": "pathlib.Path", "_args_": ["bar"]},\n]\n\npaths = instantiate(lst)\nprint(paths)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Resulting in:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"$ python demo.py\n[PosixPath('foo'), PosixPath('bar')]\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Instances can now be partially defined in config with the ",(0,a.jsx)(n.code,{children:"_partial_"})," keyword.\nPlease see the ",(0,a.jsx)(n.a,{href:"/docs/advanced/instantiate_objects/overview/#partial-instantiation",children:"Instantiate API - Partial Instantiation"})," docs\nfor a detailed example."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"omegaconf-22-highlights",children:"OmegaConf 2.2 highlights"}),"\n",(0,a.jsx)(n.h4,{id:"more-flexible-type-hints-in-structured-configs",children:"More flexible type hints in structured configs"}),"\n",(0,a.jsx)(n.p,{children:"OmegaConf 2.2's structured configs support runtime type checking for an expanded set of type hints.\nIt is now possible to use nested container types (e.g. dict-of-dict or list-of-list),\nunions of primitive types, and containers with optional element types."}),"\n",(0,a.jsx)(n.p,{children:"Here is an example demonstrating these new capabilities:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from dataclasses import dataclass\nfrom typing import Dict, List, Optional, Union\nfrom omegaconf import OmegaConf\n\n@dataclass\nclass DemoConfig:\n    union: Union[int, str, bool]\n    dict_of_union: Dict[str, Union[int, str]]\n    list_of_dict: List[Dict[int, float]]\n    dict_of_optional: Dict[str, Optional[int]]\n\ncfg = OmegaConf.structured({\"foo\": DemoConfig})\ncfg.foo.dict_of_union = {\"abc\": 123}  # ok\ncfg.foo.dict_of_union = {\"abc\": 10.1}  # raises ValidationError!\n# Value '10.1' of type 'float' is incompatible with type hint 'Union[int, str]'\n"})}),"\n",(0,a.jsx)(n.h4,{id:"native-support-for-bytes-and-pathlibpath",children:"Native support for bytes and pathlib.Path"}),"\n",(0,a.jsx)(n.p,{children:"OmegaConf now supports binary data via Python's bytes type."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'cfg = OmegaConf.create({b"binary_key": b"binary_value"})\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In addition, OmegaConf now supports ",(0,a.jsx)(n.code,{children:"pathlib.Path"})," instances as config values, easing workflows that involve the file system."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from pathlib import Path\ncfg.my_homedir = Path.home()\nassert cfg.my_homedir.is_dir()\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"bytes"})," and ",(0,a.jsx)(n.code,{children:"pathlib.Path"})," types can be used as type hints in structured config class definitions,\nand configs containing binary and Path data can be round-tripped to/from yaml files via OmegaConf's save/load/to_yaml/create methods."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'yaml_data = OmegaConf.to_yaml(cfg)\ncfg2 = OmegaConf.create(yaml_data)\nassert cfg2[b"binary_key"] == b"binary_value"\nassert isinstance(cfg2.my_homedir, Path)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"migrating-from-11",children:"Migrating from 1.1"}),"\n",(0,a.jsxs)(n.p,{children:["Hydra 1.2 is a major release. For most people, migrating from 1.1 to 1.2 will be smooth.\nIn addition, for this release we introduce support for more compatible upgrades\nthrough the ",(0,a.jsx)(n.a,{href:"/docs/upgrades/version_base/",children:"version_base"})," mechanism.\nNew users are encouraged to use the latest defaults by setting ",(0,a.jsx)(n.code,{children:"version_base=None"})," with ",(0,a.jsx)(n.code,{children:"@hydra.main()"})," and ",(0,a.jsx)(n.code,{children:"hydra.initialize()"}),',\nwhile existing users have more control over what potentially incompatible changes are introduced when upgrading to Hydra 1.2.\nPlease see the "Behavior changes" section of the ',(0,a.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/releases/tag/v1.2.0",children:"Hydra 1.2 release notes"})," for details.\nOmegaConf 2.2 also has some API changes and deprecations (not protected by version_base), detailed in its ",(0,a.jsx)(n.a,{href:"https://github.com/omry/omegaconf/releases/tag/v2.2.1",children:"release notes"}),".\nPlease feel free to reach out for ",(0,a.jsx)(n.a,{href:"/docs/intro#community",children:"help"})," if you see a change in behavior that is not mentioned in the release notes."]}),"\n",(0,a.jsx)(n.p,{children:"That's it for now, take Hydra 1.2 for a spin!"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);