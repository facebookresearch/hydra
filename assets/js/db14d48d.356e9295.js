"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7950],{15680:(e,a,n)=>{n.r(a),n.d(a,{MDXContext:()=>s,MDXProvider:()=>c,mdx:()=>h,useMDXComponents:()=>p,withMDXComponents:()=>d});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(){return i=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},i.apply(this,arguments)}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function m(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),d=function(e){return function(a){var n=p(a.components);return t.createElement(e,i({},a,{components:n}))}},p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},f=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,g=d["".concat(o,".").concat(c)]||d[c]||u[c]||i;return n?t.createElement(g,l(l({ref:a},s),{},{components:n})):t.createElement(g,l({ref:a},s))}));function h(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var m in a)hasOwnProperty.call(a,m)&&(l[m]=a[m]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},21858:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var t=n(58168),r=(n(96540),n(15680));const i={id:"terminology",title:"Terminology"},o=void 0,l={unversionedId:"advanced/terminology",id:"advanced/terminology",title:"Terminology",description:"This page describes some common concepts in Hydra, most of which are covered in greater details throughout the documentation.",source:"@site/docs/advanced/terminology.md",sourceDirName:"advanced",slug:"/advanced/terminology",permalink:"/docs/advanced/terminology",draft:!1,editUrl:"https://github.com/facebookresearch/hydra/edit/main/website/docs/advanced/terminology.md",tags:[],version:"current",lastUpdatedBy:"jesszzzz",lastUpdatedAt:1753478733,formattedLastUpdatedAt:"Jul 25, 2025",frontMatter:{id:"terminology",title:"Terminology"},sidebar:"docs",previous:{title:"Optuna Sweeper plugin",permalink:"/docs/plugins/optuna_sweeper"},next:{title:"Hydra's command line flags",permalink:"/docs/advanced/hydra-command-line-flags"}},m={},s=[{value:"Input Configs",id:"input-configs",level:2},{value:"Config files",id:"config-files",level:3},{value:"Structured Config",id:"structured-config",level:3},{value:"Other configs",id:"other-configs",level:2},{value:"Overrides",id:"overrides",level:2},{value:"Defaults List",id:"defaults-list",level:2},{value:"Config Group",id:"config-group",level:2},{value:"Config Group Option",id:"config-group-option",level:2},{value:"Package",id:"package",level:2},{value:"Example of Core Concepts",id:"example-of-core-concepts",level:2},{value:"Config Search Path",id:"config-search-path",level:2},{value:"Plugins",id:"plugins",level:2}],d={toc:s},p="wrapper";function c(e){let{components:a,...n}=e;return(0,r.mdx)(p,(0,t.A)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"This page describes some common concepts in Hydra, most of which are covered in greater details throughout the documentation.\nExamples of many of the following concepts are in the ",(0,r.mdx)("a",{parentName:"p",href:"#example-of-core-concepts"},"Examples section"),"."),(0,r.mdx)("h2",{id:"input-configs"},"Input Configs"),(0,r.mdx)("p",null,"Input configs are building blocks used to construct the ",(0,r.mdx)("a",{parentName:"p",href:"#output-config"},"Output Config")," consumed by the application.\nThey can be grouped by placing them in ",(0,r.mdx)("a",{parentName:"p",href:"#config-group"},"Config Groups"),"."),(0,r.mdx)("h3",{id:"config-files"},"Config files"),(0,r.mdx)("p",null,"Config files are form of input configs in ",(0,r.mdx)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," format. They can exist in the file system or\nin a Python module."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Example config file"',title:'"Example',config:!0,'file"':!0},"user:\n  name: James Bond\n  age: 7\n")),(0,r.mdx)("h3",{id:"structured-config"},"Structured Config"),(0,r.mdx)("p",null,"This term has two common meanings:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"A class decorated with ",(0,r.mdx)("a",{parentName:"li",href:"https://docs.python.org/3/library/dataclasses.html"},"@dataclass")," or ",(0,r.mdx)("a",{parentName:"li",href:"https://www.attrs.org/en/stable/"},"@attr.s"),", or an instance of such a class which is intended to be used as config.  "),(0,r.mdx)("li",{parentName:"ol"},"A Config object initialized from a class or object as defined in 1. Structured Configs provide additional type information that enables static and runtime type checking.")),(0,r.mdx)("p",null,"The two primary patterns for using Structured Configs are:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"As an ",(0,r.mdx)("a",{parentName:"li",href:"#input-configs"},"Input Config"),"."),(0,r.mdx)("li",{parentName:"ul"},"As a schema validating Config Files and command line arguments.")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-python",metastring:'title="Example Schema"',title:'"Example','Schema"':!0},"@dataclass\nclass User:\n  name: str\n  age: int\n")),(0,r.mdx)("h2",{id:"other-configs"},"Other configs"),(0,r.mdx)("p",null,(0,r.mdx)("strong",{parentName:"p"},"Primary Config"),": The input config named in ",(0,r.mdx)("a",{parentName:"p",href:"/docs/tutorials/basic/your_first_app/config_file"},(0,r.mdx)("strong",{parentName:"a"},"@hydra.main()"))," or in the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/compose_api"},(0,r.mdx)("strong",{parentName:"a"},"Compose API")),".",(0,r.mdx)("br",{parentName:"p"}),"\n",(0,r.mdx)("strong",{parentName:"p"},"Output Config"),": A config composed from the ",(0,r.mdx)("a",{parentName:"p",href:"#input-configs"},"Input Configs")," and ",(0,r.mdx)("a",{parentName:"p",href:"#overrides"},"Overrides")," by ",(0,r.mdx)("strong",{parentName:"p"},"@hydra.main()"),", or the Compose API."),(0,r.mdx)("h2",{id:"overrides"},"Overrides"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/override_grammar/basic"},"Overrides")," are strings that can be used to manipulate the config composition process.\nThis includes updating, adding and deleting config values and ",(0,r.mdx)("a",{parentName:"p",href:"#defaults-list"},"Defaults List")," options.  "),(0,r.mdx)("p",null,"Overrides can be used in the command line and in the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/compose_api"},"Compose API"),".",(0,r.mdx)("br",{parentName:"p"}),"\n","In the examples below, ",(0,r.mdx)("inlineCode",{parentName:"p"},"key=value")," is an override:"),(0,r.mdx)("div",{className:"row"},(0,r.mdx)("div",{className:"col col--6"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell",metastring:'title="Override in the command line"',title:'"Override',in:!0,the:!0,command:!0,'line"':!0},"$ python my_app.py key=value\n\n"))),(0,r.mdx)("div",{className:"col col--6"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-python",metastring:'title="Override used in the Compose API"',title:'"Override',used:!0,in:!0,the:!0,Compose:!0,'API"':!0},'cfg = compose(config_name, \n              overrides=["key=value"])\n')))),(0,r.mdx)("h2",{id:"defaults-list"},"Defaults List"),(0,r.mdx)("p",null,"A list in an ",(0,r.mdx)("a",{parentName:"p",href:"#input-configs"},"Input Config")," that instructs Hydra how compose the config. "),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Defaults List in a YAML config"',title:'"Defaults',List:!0,in:!0,a:!0,YAML:!0,'config"':!0},"defaults:\n  - db: mysql      # An overridable defaults list entry\n  - schema/school  # A non-overridable defaults list entry\n")),(0,r.mdx)("h2",{id:"config-group"},"Config Group"),(0,r.mdx)("p",null,"A Config Group is a directory in the ",(0,r.mdx)("a",{parentName:"p",href:"#config-search-path"},"Config Search Path")," that contains ",(0,r.mdx)("a",{parentName:"p",href:"#input-configs"},"Input Configs"),".\nConfig Groups can be nested, and in that case the path elements are separated by a forward slash ('/') regardless of the operating system."),(0,r.mdx)("h2",{id:"config-group-option"},"Config Group Option"),(0,r.mdx)("p",null,"An Input Config in a Config Group. When used in a Defaults List, a Config Group Option can be a single Input Config, or a list of Input Configs from the same Config Group. "),(0,r.mdx)("h2",{id:"package"},"Package"),(0,r.mdx)("p",null,"A Package is the path to node in a config. By default, the Package of a Config Group Option is derived from the Config Group.\n",(0,r.mdx)("em",{parentName:"p"},"e.g:")," Configs in ",(0,r.mdx)("strong",{parentName:"p"},"mi6/agent")," will have the package ",(0,r.mdx)("strong",{parentName:"p"},"mi6.agent")," by default."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/overriding_packages#overriding-the-package-via-the-package-directive"},"Package Directive")," specifies the root ",(0,r.mdx)("a",{parentName:"p",href:"#package"},"Package")," of a ",(0,r.mdx)("a",{parentName:"p",href:"#input-configs"},"Config File"),". It can appear at the top of YAML config file."),(0,r.mdx)("h2",{id:"example-of-core-concepts"},"Example of Core Concepts"),(0,r.mdx)("div",{className:"row"},(0,r.mdx)("div",{className:"col col--4"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},"defaults:\n - mi6/agent: james_bond\n\n"))),(0,r.mdx)("div",{className:"col col--4"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml",metastring:'title="mi6/agent/james_bond.yaml" {1}',title:'"mi6/agent/james_bond.yaml"',"{1}":!0},"# @package bond.james\ncodename: '007'\n\n"))),(0,r.mdx)("div",{className:"col col--4"},(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Output config" {1,2}',title:'"Output','config"':!0,"{1,2}":!0},"bond:\n  james:\n    codename: '007'\n")))),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#input-configs"},"Input Configs"),": ",(0,r.mdx)("strong",{parentName:"li"},"config.yaml"),", ",(0,r.mdx)("strong",{parentName:"li"},"mi6/agent/james_bond.yaml")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#config-group"},"Config Group"),": mi6/agent"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#config-group-option"},"Config Group Option"),": james_bond"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#package"},"Packages"),": ",(0,r.mdx)("strong",{parentName:"li"},"<empty",">"),", ",(0,r.mdx)("strong",{parentName:"li"},"mi6"),", ",(0,r.mdx)("strong",{parentName:"li"},"mi6.agent"),", ",(0,r.mdx)("strong",{parentName:"li"},"mi6.agent.codename")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#package-directive"},"Package directive"),": ",(0,r.mdx)("strong",{parentName:"li"},"# @package bond.james"),", overriding the default Package for the containing Input Config ")),(0,r.mdx)("h2",{id:"config-search-path"},"Config Search Path"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/search_path"},"Config Search Path")," is a list of paths that are searched in order to find configs. It is similar to\nthe Python ",(0,r.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH"},"PYTHONPATH"),"."),(0,r.mdx)("h2",{id:"plugins"},"Plugins"),(0,r.mdx)("p",null,(0,r.mdx)("a",{parentName:"p",href:"/docs/advanced/plugins/overview"},"Plugins")," extend Hydra's capabilities. Hydra has several plugin types, for example Launcher and Sweeper."))}c.isMDXComponent=!0}}]);