"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1176],{28453:(r,e,n)=>{n.d(e,{R:()=>a,x:()=>d});var t=n(96540);const o={},i=t.createContext(o);function a(r){const e=t.useContext(i);return t.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function d(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:a(r.components),t.createElement(i.Provider,{value:e},r.children)}},34880:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"tutorials/basic/running_your_app/working_directory","title":"Output/Working directory","description":"Hydra can solve the problem of your needing to specify a new output directory for each run, by","source":"@site/docs/tutorials/basic/running_your_app/3_working_directory.md","sourceDirName":"tutorials/basic/running_your_app","slug":"/tutorials/basic/running_your_app/working_directory","permalink":"/docs/tutorials/basic/running_your_app/working_directory","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/docs/tutorials/basic/running_your_app/3_working_directory.md","tags":[],"version":"current","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755026473000,"sidebarPosition":3,"frontMatter":{"id":"working_directory","title":"Output/Working directory","sidebar_label":"Output/Working directory"},"sidebar":"docs","previous":{"title":"Multi-run","permalink":"/docs/tutorials/basic/running_your_app/multi-run"},"next":{"title":"Logging","permalink":"/docs/tutorials/basic/running_your_app/logging"}}');var o=n(74848),i=n(28453),a=n(49595);const d={id:"working_directory",title:"Output/Working directory",sidebar_label:"Output/Working directory"},c=void 0,s={},u=[{value:"Automatically change current working dir to job&#39;s output dir",id:"automatically-change-current-working-dir-to-jobs-output-dir",level:3},{value:"Changing or disabling Hydra&#39;s output subdir",id:"changing-or-disabling-hydras-output-subdir",level:3},{value:"Accessing the original working directory in your application",id:"accessing-the-original-working-directory-in-your-application",level:3}];function l(r){const e={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.C,{to:"examples/tutorials/basic/running_your_hydra_app/3_working_directory"}),"\n",(0,o.jsx)(e.p,{children:"Hydra can solve the problem of your needing to specify a new output directory for each run, by\ncreating a directory for each run and executing your code within that output directory.\nBy default, this output directory is used to store Hydra output for the run (Configuration, Logs etc)."}),"\n",(0,o.jsxs)(e.p,{children:["Every time you run the app, a new output directory is created.\nYou can retrieve the path of the output directy by\n",(0,o.jsx)(e.a,{href:"/docs/configure_hydra/intro#accessing-the-hydra-config",children:"inspecting the Hydra config"})," as in the example below."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",metastring:'title="my_app.py"',children:'import os\nfrom omegaconf import DictConfig\nimport hydra\n\n@hydra.main(version_base=None)\ndef my_app(_cfg: DictConfig) -> None:\n    print(f"Working directory : {os.getcwd()}")\n    print(f"Output directory  : {hydra.core.hydra_config.HydraConfig.get().runtime.output_dir}")\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-text",children:"$ python my_app.py\nWorking directory : /home/omry/dev/hydra\nOutput directory  : /home/omry/dev/hydra/outputs/2019-09-25/15-16-17\n\n$ python my_app.py\nWorking directory : /home/omry/dev/hydra\nOutput directory  : /home/omry/dev/hydra/outputs/2019-09-25/15-16-19\n"})}),"\n",(0,o.jsx)(e.p,{children:"Let's take a look at one of the output directories:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-text",children:"$ tree outputs/2019-09-25/15-16-17\noutputs/2019-09-25/15-16-17\n\u251c\u2500\u2500 .hydra\n\u2502   \u251c\u2500\u2500 config.yaml\n\u2502   \u251c\u2500\u2500 hydra.yaml\n\u2502   \u2514\u2500\u2500 overrides.yaml\n\u2514\u2500\u2500 my_app.log\n"})}),"\n",(0,o.jsxs)(e.p,{children:["We have the Hydra output directory (",(0,o.jsx)(e.code,{children:".hydra"})," by default), and the application log file.\nInside the Hydra output directory we have:"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"config.yaml"}),": A dump of the user specified configuration"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"hydra.yaml"}),": A dump of the Hydra configuration"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"overrides.yaml"}),": The command line overrides used"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"And in the main output directory:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"my_app.log"}),": A log file created for this run"]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["You can configure the name of the output directory using\nthe ",(0,o.jsx)(e.a,{href:"/docs/configure_hydra/workdir",children:"customizing the working directory"})," pattern."]}),"\n",(0,o.jsx)(e.h3,{id:"automatically-change-current-working-dir-to-jobs-output-dir",children:"Automatically change current working dir to job's output dir"}),"\n",(0,o.jsxs)(e.p,{children:["By setting ",(0,o.jsx)(e.code,{children:"hydra.job.chdir=True"}),", you can configure\nHydra's ",(0,o.jsx)(e.code,{children:"@hydra.main"})," decorator to change python's working directory by calling\n",(0,o.jsx)(e.code,{children:"os.chdir"})," before passing control to the user's decorated main function.\nAs of Hydra v1.2, ",(0,o.jsx)(e.code,{children:"hydra.job.chdir"})," defaults to ",(0,o.jsx)(e.code,{children:"False"}),".\nSetting ",(0,o.jsx)(e.code,{children:"hydra.job.chdir=True"})," enables convenient use of the output directory to\nstore output for the application (For example, a database dump file)."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"# check current working dir\n$ pwd\n/home/jasha/dev/hydra\n\n# for Hydra >= 1.2, working dir remains unchanged by default\n$ python my_app.py\nWorking directory : /home/jasha/dev/hydra\nOutput directory  : /home/jasha/dev/hydra/outputs/2023-04-18/13-43-24\n\n# working dir changed to output dir\n$ python my_app.py hydra.job.chdir=True\nWorking directory : /home/jasha/dev/hydra/outputs/2023-04-18/13-43-17\nOutput directory  : /home/jasha/dev/hydra/outputs/2023-04-18/13-43-17\n\n# output dir and files are still created even if `chdir` is disabled:\n$ tree -a outputs/2023-04-18/13-43-24/\noutputs/2023-04-18/13-43-24/\n\u251c\u2500\u2500 .hydra\n\u2502\xa0\xa0 \u251c\u2500\u2500 config.yaml\n\u2502\xa0\xa0 \u251c\u2500\u2500 hydra.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 overrides.yaml\n\u2514\u2500\u2500 my_app.log\n"})}),"\n",(0,o.jsx)(e.h3,{id:"changing-or-disabling-hydras-output-subdir",children:"Changing or disabling Hydra's output subdir"}),"\n",(0,o.jsxs)(e.p,{children:["You can change the ",(0,o.jsx)(e.code,{children:".hydra"})," subdirectory name by overriding ",(0,o.jsx)(e.code,{children:"hydra.output_subdir"}),".\nYou can disable its creation by overriding ",(0,o.jsx)(e.code,{children:"hydra.output_subdir"})," to ",(0,o.jsx)(e.code,{children:"null"}),"."]}),"\n",(0,o.jsx)(e.h3,{id:"accessing-the-original-working-directory-in-your-application",children:"Accessing the original working directory in your application"}),"\n",(0,o.jsxs)(e.p,{children:["With ",(0,o.jsx)(e.code,{children:"hydra.job.chdir=True"}),", you can still access the original working directory by importing ",(0,o.jsx)(e.code,{children:"get_original_cwd()"})," and ",(0,o.jsx)(e.code,{children:"to_absolute_path()"})," in ",(0,o.jsx)(e.code,{children:"hydra.utils"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'from hydra.utils import get_original_cwd, to_absolute_path\n\n@hydra.main(version_base=None)\ndef my_app(_cfg: DictConfig) -> None:\n    print(f"Current working directory : {os.getcwd()}")\n    print(f"Orig working directory    : {get_original_cwd()}")\n    print(f"to_absolute_path(\'foo\')   : {to_absolute_path(\'foo\')}")\n    print(f"to_absolute_path(\'/foo\')  : {to_absolute_path(\'/foo\')}")\n\nif __name__ == "__main__":\n    my_app()\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-text",metastring:'title="$ python examples/tutorial/8_working_directory/original_cwd.py"',children:"Current working directory  : /Users/omry/dev/hydra/outputs/2019-10-23/10-53-03\nOriginal working directory : /Users/omry/dev/hydra\nto_absolute_path('foo')    : /Users/omry/dev/hydra/foo\nto_absolute_path('/foo')   : /foo\n"})}),"\n",(0,o.jsxs)(e.p,{children:["The name of the generated working directories can be ",(0,o.jsx)(e.a,{href:"/docs/configure_hydra/workdir",children:"customized"}),"."]})]})}function h(r={}){const{wrapper:e}={...(0,i.R)(),...r.components};return e?(0,o.jsx)(e,{...r,children:(0,o.jsx)(l,{...r})}):l(r)}},49595:(r,e,n)=>{n.d(e,{A:()=>c,C:()=>s});n(96540);var t=n(28774),o=n(44586),i=n(48295),a=n(74848);function d(r){const e=(0,i.ir)();return(0,o.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[e?.name??"current"]+r}function c(r){return(0,a.jsx)(t.default,{...r,to:d(r.to),target:"_blank"})}function s(r){const e=r.text??"Example (Click Here)";return(0,a.jsxs)(c,{...r,children:[(0,a.jsx)("span",{children:"\xa0"}),(0,a.jsx)("img",{src:"https://img.shields.io/badge/-"+e+"-informational",alt:"Example (Click Here)"})]})}}}]);