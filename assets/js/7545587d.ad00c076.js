"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3688],{19387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"tutorials/structured_config/defaults","title":"Defaults List","description":"You can define a defaults list in your primary Structured Config just like you can in your primary config.yaml file.","source":"@site/docs/tutorials/structured_config/4_defaults.md","sourceDirName":"tutorials/structured_config","slug":"/tutorials/structured_config/defaults","permalink":"/docs/tutorials/structured_config/defaults","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/docs/tutorials/structured_config/4_defaults.md","tags":[],"version":"current","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761332619000,"sidebarPosition":4,"frontMatter":{"id":"defaults","title":"Defaults List"},"sidebar":"docs","previous":{"title":"Config Groups","permalink":"/docs/tutorials/structured_config/config_groups"},"next":{"title":"Structured Config schema","permalink":"/docs/tutorials/structured_config/schema"}}');var i=t(74848),o=t(28453),a=t(49595);const r={id:"defaults",title:"Defaults List"},l=void 0,d={},c=[{value:"A Note about composition order",id:"a-note-about-composition-order",level:3},{value:"Requiring users to specify a default list value",id:"requiring-users-to-specify-a-default-list-value",level:3}];function u(e){const n={a:"a",br:"br",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.C,{to:"examples/tutorials/structured_configs/4_defaults/my_app.py"}),"\n",(0,i.jsxs)(n.p,{children:["You can define a defaults list in your primary Structured Config just like you can in your primary ",(0,i.jsx)(n.code,{children:"config.yaml"})," file.\nThe example below extends the previous example by adding a defaults list that will load ",(0,i.jsx)(n.code,{children:"db=mysql"})," by default."]}),"\n",(0,i.jsx)("div",{class:"alert alert--info",role:"alert",children:(0,i.jsx)(n.p,{children:"NOTE: You can still place your defaults list in your primary (YAML) config file (Example in next page)."})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"{11-14,19,25}",children:'from dataclasses import dataclass\n\nimport hydra\nfrom hydra.core.config_store import ConfigStore\nfrom omegaconf import MISSING, OmegaConf\n\n@dataclass\nclass MySQLConfig:\n    ...\n\n@dataclass\nclass PostGreSQLConfig:\n    ...\n\ndefaults = [\n    # Load the config "mysql" from the config group "db"\n    {"db": "mysql"}\n]\n\n@dataclass\nclass Config:\n    # this is unfortunately verbose due to @dataclass limitations\n    defaults: List[Any] = field(default_factory=lambda: defaults)\n\n    # Hydra will populate this field based on the defaults list\n    db: Any = MISSING\n\ncs = ConfigStore.instance()\ncs.store(group="db", name="mysql", node=MySQLConfig)\ncs.store(group="db", name="postgresql", node=PostGreSQLConfig)\ncs.store(name="config", node=Config)\n\n\n@hydra.main(version_base=None, config_name="config")\ndef my_app(cfg: Config) -> None:\n    print(OmegaConf.to_yaml(cfg))\n\n\nif __name__ == "__main__":\n    my_app()\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Running ",(0,i.jsx)(n.code,{children:"my_app.py"})," loads the mysql config option by default:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\ndb:\n  driver: mysql\n  ...\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can override the default option via the command line:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py db=postgresql\ndb:\n  driver: postgresql\n  ...\n"})}),"\n",(0,i.jsx)(n.h3,{id:"a-note-about-composition-order",children:"A Note about composition order"}),"\n",(0,i.jsx)(n.p,{children:"The default composition order in Hydra is that values defined in a config are merged into values introduced from configs in the Defaults List - or in other words - overriding them.\nThis behavior can be unintuitive when your primary config is a Structured Config, like in the example above.\nFor example, if the primary config is:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"{6}",children:'@dataclass\nclass Config:\n    defaults: List[Any] = field(default_factory=lambda: [\n        "debug/activate",\n        # If you do not specify _self_, it will be appended to the end of the defaults list by default.\n        "_self_"\n    ])\n\n    debug: bool = False\n'})}),"\n",(0,i.jsxs)(n.p,{children:["And ",(0,i.jsx)(n.code,{children:"debug/activate.yaml"})," is overriding the ",(0,i.jsx)(n.code,{children:"debug"})," flag to ",(0,i.jsx)(n.code,{children:"True"}),", the composition order would be such that debug ends up being ",(0,i.jsx)(n.code,{children:"False"}),".",(0,i.jsx)(n.br,{}),"\n","To get ",(0,i.jsx)(n.code,{children:"debug/activate.yaml"})," to override this config, explicitly specify ",(0,i.jsx)(n.code,{children:"_self_"})," before ",(0,i.jsx)(n.code,{children:"debug/activate.yaml"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"{4}",children:'@dataclass\nclass Config:\n    defaults: List[Any] = field(default_factory=lambda: [\n        "_self_",\n        "debug/activate",\n    ])\n\n    debug: bool = False\n'})}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/docs/advanced/defaults_list#composition-order",children:"Composition Order"})," for more information."]}),"\n",(0,i.jsx)(n.h3,{id:"requiring-users-to-specify-a-default-list-value",children:"Requiring users to specify a default list value"}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:"db"})," as ",(0,i.jsx)(n.code,{children:"MISSING"})," to require the user to specify a value on the command line."]}),"\n",(0,i.jsxs)("div",{className:"row",children:[(0,i.jsx)("div",{className:"col col--6",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:'title="Defaults list with a missing db"',children:'defaults = [\n    {"db": MISSING}\n]\n\n\n'})})}),(0,i.jsx)("div",{className:"col  col--6",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="Output"',children:"$ python my_app.py\nYou must specify 'db', e.g, db=<OPTION>\nAvailable options:\n        mysql\n        postgresql\n"})})})]})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},49595:(e,n,t)=>{t.d(n,{A:()=>l,C:()=>d});t(96540);var s=t(28774),i=t(44586),o=t(48295),a=t(74848);function r(e){const n=(0,o.ir)();return(0,i.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function l(e){return(0,a.jsx)(s.default,{...e,to:r(e.to),target:"_blank"})}function d(e){const n=e.text??"Example (Click Here)";return(0,a.jsxs)(l,{...e,children:[(0,a.jsx)("span",{children:"\xa0"}),(0,a.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}}}]);