"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5288],{28453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>s});var o=i(96540);const t={},r=o.createContext(t);function a(n){const e=o.useContext(r);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),o.createElement(r.Provider,{value:e},n.children)}},81244:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"tutorials/basic/running_your_app/debugging","title":"Debugging","description":"Hydra provides a few options to improve debuggability.","source":"@site/versioned_docs/version-1.0/tutorials/basic/running_your_app/5_debugging.md","sourceDirName":"tutorials/basic/running_your_app","slug":"/tutorials/basic/running_your_app/debugging","permalink":"/docs/1.0/tutorials/basic/running_your_app/debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/tutorials/basic/running_your_app/5_debugging.md","tags":[],"version":"1.0","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761324871000,"sidebarPosition":5,"frontMatter":{"id":"debugging","title":"Debugging","sidebar_label":"Debugging"},"sidebar":"docs","previous":{"title":"Logging","permalink":"/docs/1.0/tutorials/basic/running_your_app/logging"},"next":{"title":"Tab completion","permalink":"/docs/1.0/tutorials/basic/running_your_app/tab_completion"}}');var t=i(74848),r=i(28453);const a={id:"debugging",title:"Debugging",sidebar_label:"Debugging"},s=void 0,c={},d=[{value:"Printing the configuration",id:"printing-the-configuration",level:3},{value:"Info",id:"info",level:3}];function l(n){const e={a:"a",br:"br",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:"Hydra provides a few options to improve debuggability."}),"\n",(0,t.jsx)(e.h3,{id:"printing-the-configuration",children:"Printing the configuration"}),"\n",(0,t.jsxs)(e.p,{children:["Print the config for your app without running your function by adding ",(0,t.jsx)(e.code,{children:"--cfg"})," or ",(0,t.jsx)(e.code,{children:"-c"})," to the command line."]}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"--cfg"})," option takes one argument indicating which part of the config to print:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"job"})," : Your config"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"hydra"})," : Hydra's config"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"all"})," : The full config, which is a union of ",(0,t.jsx)(e.code,{children:"job"})," and ",(0,t.jsx)(e.code,{children:"hydra"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"# A normal run:\n$ python my_app.py\nMySQL connecting to localhost with user=root and password=1234\n\n# just show the config without running your function:\n$ python my_app.py --cfg job\ndb:\n  host: localhost\n  user: root\n  password: 1234\n"})}),"\n",(0,t.jsx)(e.p,{children:"The printed config includes any modifications done via the command line:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",metastring:"{3}",children:"$ python my_app.py db.host=10.0.0.1 --cfg job\ndb:\n  host: 10.0.0.1\n  user: root\n  password: 1234\n"})}),"\n",(0,t.jsxs)(e.p,{children:["You can use ",(0,t.jsx)(e.code,{children:"--package"})," or ",(0,t.jsx)(e.code,{children:"-p"})," to select a a specific config package:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"python my_app.py --cfg hydra --package hydra.job\n# @package hydra.job\nname: my_app\nconfig_name: config\n...\n"})}),"\n",(0,t.jsx)(e.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(e.p,{children:["Hydra can print information about your plugins, config search path, composition trace and more using the",(0,t.jsx)(e.br,{}),"\n",(0,t.jsx)(e.code,{children:"--info"})," flag."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-text",children:"$ python my_app.py --info\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Subset of output (Complete ",(0,t.jsx)(e.a,{href:"http://paste.ubuntu.com/p/JWh2cKgGtD/",children:"example"}),")"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-commandline",children:"Config search path\n...\nProfiling information\n...\nComposition trace\n...\nConfig\n...\n"})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}}}]);