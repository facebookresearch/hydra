"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1978],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(96540);const o={},s=i.createContext(o);function a(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},49595:(e,t,n)=>{n.d(t,{A:()=>c,C:()=>d});n(96540);var i=n(28774),o=n(44586),s=n(48295),a=n(74848);function r(e){const t=(0,s.ir)();return(0,o.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[t?.name??"current"]+e}function c(e){return(0,a.jsx)(i.default,{...e,to:r(e.to),target:"_blank"})}function d(e){const t=e.text??"Example (Click Here)";return(0,a.jsxs)(c,{...e,children:[(0,a.jsx)("span",{children:"\xa0"}),(0,a.jsx)("img",{src:"https://img.shields.io/badge/-"+t+"-informational",alt:"Example (Click Here)"})]})}},54007:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"advanced/unit_testing","title":"Hydra in Unit Tests","description":"Use initialize(), initializeconfigmodule() or initializeconfigdir() in conjunction with compose()","source":"@site/versioned_docs/version-1.1/advanced/unit_testing.md","sourceDirName":"advanced","slug":"/advanced/unit_testing","permalink":"/docs/1.1/advanced/unit_testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.1/advanced/unit_testing.md","tags":[],"version":"1.1","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761571287000,"frontMatter":{"id":"unit_testing","title":"Hydra in Unit Tests"},"sidebar":"docs","previous":{"title":"Hydra in Jupyter Notebooks","permalink":"/docs/1.1/advanced/jupyter_notebooks"},"next":{"title":"Introduction","permalink":"/docs/1.1/experimental/intro"}}');var o=n(74848),s=n(28453),a=n(49595);const r={id:"unit_testing",title:"Hydra in Unit Tests"},c=void 0,d={},l=[];function p(e){const t={a:"a",br:"br",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Use ",(0,o.jsx)(t.code,{children:"initialize()"}),", ",(0,o.jsx)(t.code,{children:"initialize_config_module()"})," or ",(0,o.jsx)(t.code,{children:"initialize_config_dir()"})," in conjunction with ",(0,o.jsx)(t.code,{children:"compose()"}),"\nto compose configs inside your unit tests.",(0,o.jsx)(t.br,{}),"\n","Be sure to read the ",(0,o.jsx)(t.a,{href:"/docs/1.1/advanced/compose_api",children:"Compose API documentation"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["The Hydra example application contains an ",(0,o.jsx)(a.A,{to:"examples/advanced/hydra_app_example/tests/test_example.py",children:"example test"}),"."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",metastring:'title="Testing example with initialize()"',children:'from hydra import initialize, compose\n# 1. initialize will add config_path the config search path within the context\n# 2. The module with your configs should be importable. \n#    it needs to have a __init__.py (can be empty).\n# 3. THe config path is relative to the file calling initialize (this file)\ndef test_with_initialize() -> None:\n    with initialize(config_path="../hydra_app/conf"):\n        # config is relative to a module\n        cfg = compose(config_name="config", overrides=["app.user=test_user"])\n        assert cfg == {\n            "app": {"user": "test_user", "num1": 10, "num2": 20},\n            "db": {"host": "localhost", "port": 3306},\n        }\n'})}),"\n",(0,o.jsxs)(t.p,{children:["For an idea about how to modify Hydra's search path when using ",(0,o.jsx)(t.code,{children:"compose"})," in\nunit tests, see the page on\n",(0,o.jsxs)(t.a,{href:"/docs/1.1/advanced/search_path#overriding-hydrasearchpath-config",children:["overriding the ",(0,o.jsx)(t.code,{children:"hydra.searchpath"})," config"]}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);