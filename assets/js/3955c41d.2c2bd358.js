"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7603],{24135:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tutorials/basic/running_your_app/multi-run","title":"Multi-run","description":"Sometimes you want to run the same application with multiple different configurations.","source":"@site/docs/tutorials/basic/running_your_app/2_multirun.md","sourceDirName":"tutorials/basic/running_your_app","slug":"/tutorials/basic/running_your_app/multi-run","permalink":"/docs/tutorials/basic/running_your_app/multi-run","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/docs/tutorials/basic/running_your_app/2_multirun.md","tags":[],"version":"current","lastUpdatedBy":"dependabot[bot]","lastUpdatedAt":1756143349000,"sidebarPosition":2,"frontMatter":{"id":"multi-run","title":"Multi-run","sidebar_label":"Multi-run"},"sidebar":"docs","previous":{"title":"Putting it all together","permalink":"/docs/tutorials/basic/your_first_app/composition"},"next":{"title":"Output/Working directory","permalink":"/docs/tutorials/basic/running_your_app/working_directory"}}');var a=i(74848),s=i(28453),t=i(49595);const o={id:"multi-run",title:"Multi-run",sidebar_label:"Multi-run"},d=void 0,l={},c=[{value:"Configure <code>hydra.mode</code> (new in Hydra 1.2)",id:"configure-hydramode-new-in-hydra-12",level:3},{value:"<code>--multirun (-m)</code> from the command-line",id:"--multirun--m-from-the-command-line",level:3},{value:"Sweeping via <code>hydra.sweeper.params</code>",id:"sweeping-via-hydrasweeperparams",level:3},{value:"Additional sweep types",id:"additional-sweep-types",level:3},{value:"Sweeper",id:"sweeper",level:3},{value:"Launcher",id:"launcher",level:3}];function h(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Sometimes you want to run the same application with multiple different configurations.",(0,a.jsx)(n.br,{}),"\n","E.g. running a performance test on each of the databases with each of the schemas."]}),"\n",(0,a.jsx)(n.p,{children:"You can multirun a Hydra application via either commandline or configuration:"}),"\n",(0,a.jsxs)(n.h3,{id:"configure-hydramode-new-in-hydra-12",children:["Configure ",(0,a.jsx)(n.code,{children:"hydra.mode"})," (new in Hydra 1.2)"]}),"\n",(0,a.jsxs)(n.p,{children:["You can configure ",(0,a.jsx)(n.code,{children:"hydra.mode"})," in any supported way. The legal values are ",(0,a.jsx)(n.code,{children:"RUN"})," and ",(0,a.jsx)(n.code,{children:"MULTIRUN"}),".\nThe following shows how to override from the command-line and sweep over all combinations of the dbs and schemas.\nSetting ",(0,a.jsx)(n.code,{children:"hydra.mode=MULTIRUN"})," in your input config would make your application multi-run by default."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",metastring:'title="$ python my_app.py hydra.mode=MULTIRUN db=mysql,postgresql schema=warehouse,support,school"',children:"[2021-01-20 17:25:03,317][HYDRA] Launching 6 jobs locally\n[2021-01-20 17:25:03,318][HYDRA]        #0 : db=mysql schema=warehouse\n[2021-01-20 17:25:03,458][HYDRA]        #1 : db=mysql schema=support\n[2021-01-20 17:25:03,602][HYDRA]        #2 : db=mysql schema=school\n[2021-01-20 17:25:03,755][HYDRA]        #3 : db=postgresql schema=warehouse\n[2021-01-20 17:25:03,895][HYDRA]        #4 : db=postgresql schema=support\n[2021-01-20 17:25:04,040][HYDRA]        #5 : db=postgresql schema=school\n"})}),"\n",(0,a.jsx)(n.p,{children:"The printed configurations have been omitted for brevity."}),"\n",(0,a.jsxs)(n.h3,{id:"--multirun--m-from-the-command-line",children:[(0,a.jsx)(n.code,{children:"--multirun (-m)"})," from the command-line"]}),"\n",(0,a.jsx)(n.p,{children:"You can achieve the above from command-line as well:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-commandline",children:"python my_app.py --multirun db=mysql,postgresql schema=warehouse,support,school\n"})}),"\n",(0,a.jsx)(n.p,{children:"or"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-commandline",children:"python my_app.py -m db=mysql,postgresql schema=warehouse,support,school\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can access ",(0,a.jsx)(n.code,{children:"hydra.mode"})," at runtime to determine whether the application is in RUN or MULTIRUN mode. Check ",(0,a.jsx)(n.a,{href:"/docs/configure_hydra/intro",children:"here"}),"\non how to access Hydra config at run time."]}),"\n",(0,a.jsxs)(n.p,{children:["If conflicts arise (e.g., ",(0,a.jsx)(n.code,{children:"hydra.mode=RUN"})," and the application was run with ",(0,a.jsx)(n.code,{children:"--multirun"}),"), Hydra will determine the value of ",(0,a.jsx)(n.code,{children:"hydra.mode"}),"\nat run time. The following table shows what runtime ",(0,a.jsx)(n.code,{children:"hydra.mode"})," value you'd get with different input configs and commandline combinations."]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{}),(0,a.jsx)(n.th,{children:"No multirun commandline flag"}),(0,a.jsx)(n.th,{children:"--multirun ( -m)"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"hydra.mode=RUN"}),(0,a.jsx)(n.td,{children:"RunMode.RUN"}),(0,a.jsx)(n.td,{children:"RunMode.MULTIRUN (with UserWarning)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"hydra.mode=MULTIRUN"}),(0,a.jsx)(n.td,{children:"RunMode.MULTIRUN"}),(0,a.jsx)(n.td,{children:"RunMode.MULTIRUN"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"hydra.mode=None (default)"}),(0,a.jsx)(n.td,{children:"RunMode.RUN"}),(0,a.jsx)(n.td,{children:"RunMode.MULTIRUN"})]})]})]}),"\n",(0,a.jsx)(n.admonition,{type:"important",children:(0,a.jsx)(n.p,{children:"Hydra composes configs lazily at job launching time. If you change code or configs after launching a job/sweep, the final\ncomposed configs might be impacted."})}),"\n",(0,a.jsxs)(n.h3,{id:"sweeping-via-hydrasweeperparams",children:["Sweeping via ",(0,a.jsx)(n.code,{children:"hydra.sweeper.params"})]}),"\n","\n",(0,a.jsx)(t.C,{to:"examples/tutorials/basic/running_your_hydra_app/5_basic_sweep"}),"\n",(0,a.jsxs)(n.p,{children:["You can also define sweeping in the input configs by overriding\n",(0,a.jsx)(n.code,{children:"hydra.sweeper.params"}),". Using the above example, the same multirun could be achieved via the following config."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"hydra:\n  sweeper:\n    params:\n      db: mysql,postgresql\n      schema: warehouse,support,school\n"})}),"\n",(0,a.jsx)(n.p,{children:"The syntax are consistent for both input configs and commandline overrides.\nIf a sweep is specified in both an input config and at the command line,\nthen the commandline sweep will take precedence over the sweep defined\nin the input config. If we run the same application with the above input config and a new commandline override:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",metastring:'title="$ python my_app.py -m db=mysql"',children:"[2021-01-20 17:25:03,317][HYDRA] Launching 3 jobs locally\n[2021-01-20 17:25:03,318][HYDRA]        #0 : db=mysql schema=warehouse\n[2021-01-20 17:25:03,458][HYDRA]        #1 : db=mysql schema=support\n[2021-01-20 17:25:03,602][HYDRA]        #2 : db=mysql schema=school\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The above configuration methods only apply to Hydra's default ",(0,a.jsx)(n.code,{children:"BasicSweeper"})," for now. For other sweepers, please check out the\ncorresponding documentations."]})}),"\n",(0,a.jsx)(n.h3,{id:"additional-sweep-types",children:"Additional sweep types"}),"\n",(0,a.jsx)(n.p,{children:"Hydra supports other kinds of sweeps, e.g.:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"x=range(1,10)                  # 1-9\nschema=glob(*)                 # warehouse,support,school\nschema=glob(*,exclude=w*)      # support,school\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"/docs/advanced/override_grammar/extended",children:"Extended Override syntax"})," for details."]}),"\n",(0,a.jsx)(n.h3,{id:"sweeper",children:"Sweeper"}),"\n",(0,a.jsxs)(n.p,{children:["The default sweeping logic is built into Hydra. Additional sweepers are available as plugins.\nFor example, the ",(0,a.jsx)(n.a,{href:"/docs/plugins/ax_sweeper",children:"Ax Sweeper"})," can automatically find the best parameter combination!"]}),"\n",(0,a.jsx)(n.h3,{id:"launcher",children:"Launcher"}),"\n",(0,a.jsxs)(n.p,{children:["By default, Hydra runs your multi-run jobs locally and serially.\nOther launchers are available as plugins for launching in parallel and on different clusters. For example, the ",(0,a.jsx)(n.a,{href:"/docs/plugins/joblib_launcher",children:"JobLib Launcher"}),"\ncan execute the different parameter combinations in parallel on your local machine using multi-processing."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(96540);const a={},s=r.createContext(a);function t(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),r.createElement(s.Provider,{value:n},e.children)}},49595:(e,n,i)=>{i.d(n,{A:()=>d,C:()=>l});i(96540);var r=i(28774),a=i(44586),s=i(48295),t=i(74848);function o(e){const n=(0,s.ir)();return(0,a.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function d(e){return(0,t.jsx)(r.default,{...e,to:o(e.to),target:"_blank"})}function l(e){const n=e.text??"Example (Click Here)";return(0,t.jsxs)(d,{...e,children:[(0,t.jsx)("span",{children:"\xa0"}),(0,t.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}}}]);