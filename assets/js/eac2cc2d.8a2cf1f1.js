"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[854],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var a=n(96540);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},48523:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"advanced/search_path","title":"Config Search Path","description":"The Config Search Path is a list of paths that are searched in order to find configs. It is similar to","source":"@site/versioned_docs/version-1.0/advanced/search_path.md","sourceDirName":"advanced","slug":"/advanced/search_path","permalink":"/docs/1.0/advanced/search_path","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/advanced/search_path.md","tags":[],"version":"1.0","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1754333694000,"frontMatter":{"id":"search_path","title":"Config Search Path"},"sidebar":"docs","previous":{"title":"Overriding packages","permalink":"/docs/1.0/advanced/overriding_packages"},"next":{"title":"Hydra plugins","permalink":"/docs/1.0/advanced/plugins"}}');var s=n(74848),r=n(28453);const i={id:"search_path",title:"Config Search Path"},c=void 0,o={},d=[];function h(e){const t={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The Config Search Path is a list of paths that are searched in order to find configs. It is similar to\nthe Python PYTHONPATH."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"When a config is requested, The first matching config in the search path is used."}),"\n",(0,s.jsx)(t.li,{children:"Each search path element has a schema prefix such as file:// or pkg:// that is corresponding to a ConfigSourcePlugin."}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"SearchPathPlugin"})," can manipulate the search path."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["You can inspect the search path and the configurations loaded by Hydra by turning on verbose logging for the ",(0,s.jsx)(t.code,{children:"hydra"})," logger:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"$ python my_app.py hydra.verbose=hydra\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);