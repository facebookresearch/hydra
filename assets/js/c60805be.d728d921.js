"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6398],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},48156:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"patterns/instantiate_objects/structured_config","title":"Structured Configs example","description":"Example application","source":"@site/versioned_docs/version-1.0/patterns/instantiate_objects/structured_config.md","sourceDirName":"patterns/instantiate_objects","slug":"/patterns/instantiate_objects/structured_config","permalink":"/docs/1.0/patterns/instantiate_objects/structured_config","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/patterns/instantiate_objects/structured_config.md","tags":[],"version":"1.0","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755108758000,"frontMatter":{"id":"structured_config","title":"Structured Configs example","sidebar_label":"Structured Configs example"},"sidebar":"docs","previous":{"title":"Config files example","permalink":"/docs/1.0/patterns/instantiate_objects/config_files"},"next":{"title":"Specializing configuration","permalink":"/docs/1.0/patterns/specializing_config"}}');var o=n(74848),i=n(28453);const r={id:"structured_config",title:"Structured Configs example",sidebar_label:"Structured Configs example"},a=void 0,c={},l=[{value:"Example usage",id:"example-usage",level:4},{value:"Sample Output",id:"sample-output",level:4}];function d(e){const t={a:"a",code:"code",h4:"h4",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/examples/patterns/instantiate_structured_config/my_app.py",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/-Example%20application-informational",alt:"Example application"})})}),"\n",(0,o.jsx)(t.p,{children:"This example demonstrates the use of Structured Configs to instantiated objects."}),"\n",(0,o.jsx)(t.h4,{id:"example-usage",children:"Example usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",metastring:'title="my_app.py"',children:'class DBConnection:\n    def __init__(self, driver: str, host: str, port: int) -> None:\n        self.driver = driver\n        self.host = host\n        self.port = port\n\n    def connect(self) -> None:\n        print(f"{self.driver} connecting to {self.host}")\n\nclass MySQLConnection(DBConnection):\n    def __init__(self, driver: str, host: str, port: int) -> None:\n        super().__init__(driver=driver, host=host, port=port)\n\nclass PostgreSQLConnection(DBConnection):\n    def __init__(self, driver: str, host: str, port: int, timeout: int) -> None:\n        super().__init__(driver=driver, host=host, port=port)\n        self.timeout = timeout\n\n@dataclass\nclass DBConfig:\n    driver: str = MISSING\n    host: str = "localhost"\n    port: int = 80\n\n@dataclass\nclass MySQLConfig(DBConfig):\n    _target_: str = "my_app.MySQLConnection"\n    driver: str = "MySQL"\n    port: int = 1234\n\n@dataclass\nclass PostGreSQLConfig(DBConfig):\n    _target_: str = "my_app.PostgreSQLConnection"\n    driver: str = "PostgreSQL"\n    port: int = 5678\n    timeout: int = 10\n\n@dataclass\nclass Config:\n    defaults: List[Any] = field(default_factory=lambda: [{"db": "mysql"}])\n    db: DBConfig = MISSING\n\n\ncs = ConfigStore.instance()\ncs.store(name="config", node=Config)\ncs.store(group="db", name="mysql", node=MySQLConfig)\ncs.store(group="db", name="postgresql", node=PostGreSQLConfig)\n\n@hydra.main(config_name="config")\ndef my_app(cfg: Config) -> None:\n    connection = instantiate(cfg.db)\n    connection.connect()\n\nif __name__ == "__main__":\n    my_app()\n'})}),"\n",(0,o.jsx)(t.h4,{id:"sample-output",children:"Sample Output"}),"\n",(0,o.jsxs)("div",{className:"row",children:[(0,o.jsx)("div",{className:"col col--6",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ python my_app.py\nMySQL connecting to localhost:1234\n"})})}),(0,o.jsx)("div",{className:"col col--6",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"$ python my_app.py db=postgresql\nPostgreSQL connecting to localhost:5678\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);