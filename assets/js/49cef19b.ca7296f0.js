"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4620],{3864:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"development/testing","title":"Testing","description":"Hydra uses nox - a build automation tool - to manage tests, linting, code coverage, etc.","source":"@site/versioned_docs/version-1.1/development/testing.md","sourceDirName":"development","slug":"/development/testing","permalink":"/docs/1.1/development/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.1/development/testing.md","tags":[],"version":"1.1","lastUpdatedBy":"zhenbang-2026","lastUpdatedAt":1757109332000,"frontMatter":{"id":"testing","title":"Testing","sidebar_label":"Testing"},"sidebar":"docs","previous":{"title":"Developer Guide Overview","permalink":"/docs/1.1/development/overview"},"next":{"title":"Style Guide","permalink":"/docs/1.1/development/style_guide"}}');var i=t(74848),o=t(28453);const l={id:"testing",title:"Testing",sidebar_label:"Testing"},r=void 0,d={},c=[{value:"Testing with pytest",id:"testing-with-pytest",level:2},{value:"Testing with nox",id:"testing-with-nox",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Hydra uses ",(0,i.jsx)(n.a,{href:"https://github.com/theacodes/nox",children:"nox"})," - a build automation tool - to manage tests, linting, code coverage, etc.\nThe command ",(0,i.jsx)(n.code,{children:"nox"})," will run all the configured sessions. List the sessions using ",(0,i.jsx)(n.code,{children:"nox -l"})," and\nrun specific sessions with ",(0,i.jsx)(n.code,{children:"nox -s NAME"})," (you may need to quote the session name in some cases)"]}),"\n",(0,i.jsx)(n.h2,{id:"testing-with-pytest",children:"Testing with pytest"}),"\n",(0,i.jsxs)(n.p,{children:["Run ",(0,i.jsx)(n.code,{children:"pytest"})," at the repository root to run all the Hydra core tests.\nTo run the tests of individual plugins, use ",(0,i.jsx)(n.code,{children:"pytest plugins/NAME"})," (The plugin must be installed)."]}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,i.jsx)(n.p,{children:"Some plugins support fewer versions of Python than the Hydra core."})}),"\n",(0,i.jsx)(n.h2,{id:"testing-with-nox",children:"Testing with nox"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.code,{children:"nox -l"}),". a few examples:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nox -s test_core"})," will test Hydra core on all supported Python versions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'nox -s "test_plugins-3.8"'})," will test plugins on Python 3.8."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'nox -s "test_plugins-3.8"'})," will test plugins on Python 3.8."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"noxfile.py"})," is checking some environment variables to decide what to run. For example,\nto test a single plugin:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",metastring:"{4}",children:"$ PLUGINS=hydra_colorlog nox -s test_plugins-3.8\nOperating system        :       Linux\nNOX_PYTHON_VERSIONS     :       ['3.6', '3.7', '3.8', '3.9']\nPLUGINS                 :       ['hydra_colorlog']\nSKIP_CORE_TESTS         :       False\nFIX                     :       False\nVERBOSE                 :       0\nINSTALL_EDITABLE_MODE   :       0\nnox > Running session test_plugins-3.8\n...\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);