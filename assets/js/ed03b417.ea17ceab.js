"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7769],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(96540);const a={},o=r.createContext(a);function i(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:t},e.children)}},51800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"experimental/intro","title":"Introduction","description":"Experimental features are new features in Hydra that are considered experimental because their API may have not yet","source":"@site/docs/experimental/intro.md","sourceDirName":"experimental","slug":"/experimental/intro","permalink":"/docs/experimental/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/docs/experimental/intro.md","tags":[],"version":"current","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761571287000,"frontMatter":{"id":"intro","title":"Introduction","sidebar_label":"Introduction"},"sidebar":"docs","previous":{"title":"Hydra in Unit Tests","permalink":"/docs/advanced/unit_testing"},"next":{"title":"Callbacks","permalink":"/docs/experimental/callbacks"}}');var a=n(74848),o=n(28453);const i={id:"intro",title:"Introduction",sidebar_label:"Introduction"},s=void 0,c={},d=[];function l(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Experimental features are new features in Hydra that are considered experimental because their API may have not yet\nstabilized."}),"\n",(0,a.jsx)(t.p,{children:"Those features should all work, but code relying on them may break in future versions as they evolve.\nExperimental features are expected be promoted out of experimental once they deemed stable and complete enough."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);