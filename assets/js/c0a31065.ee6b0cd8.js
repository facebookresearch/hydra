"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[498],{1714:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"plugins/ray_launcher","title":"Ray Launcher plugin","description":"PyPI","source":"@site/versioned_docs/version-1.0/plugins/ray_launcher.md","sourceDirName":"plugins","slug":"/plugins/ray_launcher","permalink":"/docs/1.0/plugins/ray_launcher","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.0/plugins/ray_launcher.md","tags":[],"version":"1.0","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755026473000,"frontMatter":{"id":"ray_launcher","title":"Ray Launcher plugin","sidebar_label":"Ray Launcher plugin"},"sidebar":"docs","previous":{"title":"Joblib Launcher plugin","permalink":"/docs/1.0/plugins/joblib_launcher"},"next":{"title":"RQ Launcher plugin","permalink":"/docs/1.0/plugins/rq_launcher"}}');var i=a(74848),c=a(28453);const s={id:"ray_launcher",title:"Ray Launcher plugin",sidebar_label:"Ray Launcher plugin"},l=void 0,t={},o=[{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"<code>ray_aws</code> launcher",id:"ray_aws-launcher",level:3},{value:"Examples",id:"examples",level:4},{value:"Manage Cluster LifeCycle",id:"manage-cluster-lifecycle",level:5},{value:"<code>ray</code> launcher",id:"ray-launcher",level:3},{value:"Configure <code>ray.init()</code> and <code>ray.remote()</code>",id:"configure-rayinit-and-rayremote",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://pypi.org/project/hydra-ray-launcher/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/pypi/v/hydra-ray-launcher",alt:"PyPI"})}),"\n",(0,i.jsx)(n.img,{src:"https://img.shields.io/pypi/l/hydra-ray-launcher",alt:"PyPI - License"}),"\n",(0,i.jsx)(n.img,{src:"https://img.shields.io/pypi/pyversions/hydra-ray-launcher",alt:"PyPI - Python Version"}),"\n",(0,i.jsx)(n.a,{href:"https://pypistats.org/packages/hydra-ray-launcher",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/pypi/dm/hydra-ray-launcher.svg",alt:"PyPI - Downloads"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_ray_launcher/examples",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/-Example%20application-informational",alt:"Example application"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_ray_launcher",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/-Plugin%20source-informational",alt:"Plugin source"})})]}),"\n",(0,i.jsxs)(n.p,{children:["The Ray Launcher plugin provides 2 launchers: ",(0,i.jsx)(n.code,{children:"ray_aws"})," and ",(0,i.jsx)(n.code,{children:"ray"}),".\n",(0,i.jsx)(n.code,{children:"ray_aws"})," launches jobs remotely on AWS and is built on top of ",(0,i.jsx)(n.a,{href:"https://docs.ray.io/en/latest/cluster/launcher.html",children:"Ray cluster launcher"}),". ",(0,i.jsx)(n.code,{children:"ray"})," launches jobs on your local machine or existing ray cluster."]}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"$ pip install hydra-ray-launcher --upgrade\n"})}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Once installed, add ",(0,i.jsx)(n.code,{children:"hydra/launcher=ray_aws"})," or ",(0,i.jsx)(n.code,{children:"hydra/launcher=ray"})," to your command line. Alternatively, override ",(0,i.jsx)(n.code,{children:"hydra/launcher"})," in your config:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - hydra/launcher: ray_aws\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"ray_aws-launcher",children:[(0,i.jsx)(n.code,{children:"ray_aws"})," launcher"]}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ray_aws"})," launcher is built on top of ray's ",(0,i.jsx)(n.a,{href:"https://docs.ray.io/en/latest/cluster/launcher.html",children:"cluster launcher cli"}),". To get started, you need to\n",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html",children:"config your AWS credentials"}),".\n",(0,i.jsx)(n.code,{children:"ray cluster launcher"})," expects your AWS credentials have certain permissions for ",(0,i.jsx)(n.a,{href:"https://aws.amazon.com/ec2",children:(0,i.jsx)(n.code,{children:"EC2"})})," and ",(0,i.jsx)(n.a,{href:"https://aws.amazon.com/iam",children:(0,i.jsx)(n.code,{children:"IAM"})}),". Read ",(0,i.jsx)(n.a,{href:"https://github.com/ray-project/ray/issues/9327",children:"this"})," for more information."]})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ray cluster launcher"})," expects a yaml file to provide configuration for the EC2 cluster; we've schematized the configs in ",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/blob/master/plugins/hydra_ray_launcher/hydra_plugins/hydra_ray_launcher/conf/__init__.py",children:(0,i.jsx)(n.code,{children:"RayClusterConf"})}),","]}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Discover ray_aws launcher's config"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py hydra/launcher=ray_aws --cfg hydra -p hydra.launcher\n# @package hydra.launcher\n_target_: hydra_plugins.hydra_ray_launcher.ray_aws_launcher.RayAWSLauncher\nenv_setup:\n  pip_packages:\n    omegaconf: 2.0.5\n    hydra_core: 1.0.4\n    ray: 1.0.1.post1\n    cloudpickle: 1.6.0\n    pickle5: 0.0.11\n    hydra_ray_launcher: 0.1.2\n  commands:\n  - conda create -n hydra_${python_version:micro} python=${python_version:micro} -y\n  - echo 'export PATH=\"$HOME/anaconda3/envs/hydra_${python_version:micro}/bin:$PATH\"'\n    >> ~/.bashrc\nray:\n  init:\n    address: null\n  remote: {}\n  cluster:\n    cluster_name: default\n    min_workers: 0\n    max_workers: 1\n    initial_workers: 0\n    autoscaling_mode: default\n    target_utilization_fraction: 0.8\n    idle_timeout_minutes: 5\n    docker:\n      image: ''\n      container_name: ''\n      pull_before_run: true\n      run_options: []\n    provider:\n      type: aws\n      region: us-west-2\n      availability_zone: us-west-2a,us-west-2b\n      cache_stopped_nodes: false\n      key_pair:\n        key_name: hydra\n    auth:\n      ssh_user: ubuntu\n    head_node:\n      InstanceType: m5.large\n      ImageId: ami-008d8ed4bd7dc2485\n    worker_nodes:\n      InstanceType: m5.large\n      ImageId: ami-008d8ed4bd7dc2485\n    file_mounts: {}\n    initialization_commands: []\n    setup_commands: []\n    head_setup_commands: []\n    worker_setup_commands: []\n    head_start_ray_commands:\n    - ray stop\n    - ulimit -n 65536; ray start --head --redis-port=6379 --object-manager-port=8076\n      --autoscaling-config=~/ray_bootstrap_config.yaml\n    worker_start_ray_commands:\n    - ray stop\n    - ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076\nstop_cluster: true\nsync_up:\n  source_dir: null\n  target_dir: null\n  include: []\n  exclude: []\nsync_down:\n  source_dir: null\n  target_dir: null\n  include: []\n  exclude: []\n"})})]}),"\n",(0,i.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["The following examples can be found ",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_ray_launcher/examples",children:"here"}),"."]}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Simple app"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py --multirun task=1,2,3\n[HYDRA] Ray Launcher is launching 3 jobs,\n[HYDRA]        #0 : task=1\n[HYDRA]        #1 : task=2\n[HYDRA]        #2 : task=3\n[HYDRA] Pickle for jobs: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpqqg4v4i7/job_spec.pkl\n[HYDRA] Saving RayClusterConf in a temp yaml file: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpaa07pq3w.yaml.\n...\n[HYDRA] Output: INFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8265\n(pid=3374) [__main__][INFO] - Executing task 1\n(pid=3374) [__main__][INFO] - Executing task 2\n(pid=3374) [__main__][INFO] - Executing task 3\n...\n[HYDRA] Stopping cluster now. (stop_cluster=true)\n[HYDRA] Deleted the cluster (provider.cache_stopped_nodes=false)\n[HYDRA] Running command: ['ray', 'down', '-y', '/var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpaa07pq3w.yaml']\n\n"})})]}),"\n",(0,i.jsxs)(a,{children:[(0,i.jsx)("summary",{children:"Upload & Download from remote cluster"}),(0,i.jsxs)(n.p,{children:["If your application is dependent on multiple modules, you can configure ",(0,i.jsx)(n.code,{children:"hydra.launcher.sync_up"})," to upload dependency modules to the remote cluster.\nYou can also configure ",(0,i.jsx)(n.code,{children:"hydra.launcher.sync_down"})," to download output from remote cluster if needed. This functionality is built on top of ",(0,i.jsx)(n.code,{children:"rsync"}),", ",(0,i.jsx)(n.code,{children:"include"})," and ",(0,i.jsx)(n.code,{children:"exclude"})," is consistent with how it works in ",(0,i.jsx)(n.code,{children:"rsync"}),"."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"\n$  python train.py --multirun random_seed=1,2,3\n[HYDRA] Ray Launcher is launching 3 jobs,\n[HYDRA]        #0 : random_seed=1\n[HYDRA]        #1 : random_seed=2\n[HYDRA]        #2 : random_seed=3\n[HYDRA] Pickle for jobs: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmptdkye9of/job_spec.pkl\n[HYDRA] Saving RayClusterConf in a temp yaml file: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmp2reaoixs.yaml.\n[HYDRA] Running command: ['ray', 'up', '-y', '/var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmp2reaoixs.yaml']\n...\n[HYDRA] Output: INFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8265\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\nLoaded cached provider configuration\n...\n[HYDRA] Output: receiving file list ... done\n16-32-25/\n16-32-25/0/\n16-32-25/0/checkpoint/\n16-32-25/0/checkpoint/checkpoint_1.pt\n16-32-25/1/\n16-32-25/1/checkpoint/\n16-32-25/1/checkpoint/checkpoint_2.pt\n16-32-25/2/\n16-32-25/2/checkpoint/\n16-32-25/2/checkpoint/checkpoint_3.pt\n...\n[HYDRA] Stopping cluster now. (stop_cluster=true)\n[HYDRA] NOT deleting the cluster (provider.cache_stopped_nodes=true)\n[HYDRA] Running command: ['ray', 'down', '-y', '/var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpy430k4xr.yaml']\n"})})]}),"\n",(0,i.jsx)(n.h5,{id:"manage-cluster-lifecycle",children:"Manage Cluster LifeCycle"}),"\n",(0,i.jsx)(n.p,{children:"You can manage the Ray EC2 cluster lifecycle by configuring the two flags provided by the plugin:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Default setting (no need to specify on commandline): Delete cluster after job finishes remotely:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.stop_cluster=true\nhydra.launcher.ray.cluster.provider.cache_stopped_nodes=False\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Keep cluster running after jobs finishes remotely"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.stop_cluster=False\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Power off EC2 instances without deletion"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.ray.cluster.provider.cache_stopped_nodes=true\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"ray-launcher",children:[(0,i.jsx)(n.code,{children:"ray"})," launcher"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ray"})," launcher lets you launch application on your ray cluster or local machine. You can easily config how your jobs are executed by changing ",(0,i.jsx)(n.code,{children:"ray"})," launcher's configuration here\n",(0,i.jsx)(n.code,{children:"~/hydra/plugins/hydra_ray_launcher/hydra_plugins/hydra_ray_launcher/conf/hydra/launcher/ray.yaml"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/1.0_branch/plugins/hydra_ray_launcher/examples/simple",children:"example application"})," starts a new ray cluster."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py  --multirun hydra/launcher=ray\n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-11-10/15-16-28\n[HYDRA] Initializing ray with config: {}\nINFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8266\n[HYDRA]        #0 :\n(pid=97801) [__main__][INFO] - Executing task 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can run the example application on your existing ray cluster as well by overriding ",(0,i.jsx)(n.code,{children:"hydra.launcher.ray.init.address"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py  --multirun hydra/launcher=ray hydra.launcher.ray.init.address=localhost:6379'\n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-11-10/15-13-32\n[HYDRA] Initializing ray with config: {'num_cpus': None, 'num_gpus': None, 'address': 'localhost:6379'}\nINFO worker.py:633 -- Connecting to existing Ray cluster at address: 10.30.99.17:6379\n[HYDRA]        #0 :\n(pid=93358) [__main__][INFO] - Executing task 1\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"configure-rayinit-and-rayremote",children:["Configure ",(0,i.jsx)(n.code,{children:"ray.init()"})," and ",(0,i.jsx)(n.code,{children:"ray.remote()"})]}),"\n",(0,i.jsxs)(n.p,{children:["Ray launcher is built on top of ",(0,i.jsx)(n.a,{href:"https://docs.ray.io/en/master/package-ref.html?highlight=ray.remote#ray-init",children:(0,i.jsx)(n.code,{children:"ray.init()"})})," and ",(0,i.jsx)(n.a,{href:"https://docs.ray.io/en/master/package-ref.html?highlight=ray.remote#ray-remote",children:(0,i.jsx)(n.code,{children:"ray.remote()"})}),". You can configure ",(0,i.jsx)(n.code,{children:"ray"})," by overriding ",(0,i.jsx)(n.code,{children:"hydra.launcher.ray.init"})," and ",(0,i.jsx)(n.code,{children:"hydra.launcher.ray.remote"}),". Check out an ",(0,i.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/blob/master/plugins/hydra_ray_launcher/examples/simple/config.yaml",children:"example config"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>l});var r=a(96540);const i={},c=r.createContext(i);function s(e){const n=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);