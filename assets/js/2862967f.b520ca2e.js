"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6835],{28453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>r});var n=i(96540);const t={},a=n.createContext(t);function o(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(a.Provider,{value:s},e.children)}},75875:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"upgrades/1.0_to_1.1/default_composition_order","title":"Changes to default composition order","description":"Default composition order is changing in Hydra 1.1.","source":"@site/versioned_docs/version-1.2/upgrades/1.0_to_1.1/changes_to_default_composition_order.md","sourceDirName":"upgrades/1.0_to_1.1","slug":"/upgrades/1.0_to_1.1/default_composition_order","permalink":"/docs/1.2/upgrades/1.0_to_1.1/default_composition_order","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/upgrades/1.0_to_1.1/changes_to_default_composition_order.md","tags":[],"version":"1.2","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755026473000,"frontMatter":{"id":"default_composition_order","title":"Changes to default composition order"},"sidebar":"docs","previous":{"title":"Changes to @hydra.main() and hydra.initialize()","permalink":"/docs/1.2/upgrades/1.0_to_1.1/changes_to_hydra_main_config_path"},"next":{"title":"Defaults List Overrides","permalink":"/docs/1.2/upgrades/1.0_to_1.1/defaults_list_override"}}');var t=i(74848),a=i(28453);const o={id:"default_composition_order",title:"Changes to default composition order"},r=void 0,l={},c=[{value:"Migration",id:"migration",level:2},{value:"Primary config is a YAML file",id:"primary-config-is-a-yaml-file",level:3},{value:"Primary config is a Structured Config",id:"primary-config-is-a-structured-config",level:3},{value:"Primary config is a config file with a Structured Config schema",id:"primary-config-is-a-config-file-with-a-structured-config-schema",level:3},{value:"Compatibility with both Hydra 1.0 and 1.1",id:"compatibility-with-both-hydra-10-and-11",level:3}];function d(e){const s={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Default composition order is changing in Hydra 1.1."}),"\n",(0,t.jsx)(s.p,{children:"For this example, let's assume the following two configs:"}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col col--6",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"defaults:\n  - foo: bar\n\nfoo:\n  x: 10\n"})})}),(0,t.jsx)("div",{className:"col  col--6",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title="foo/bar.yaml"',children:"# @package _group_\nx: 20\n\n\n\n"})})})]}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col",children:(0,t.jsxs)(s.p,{children:["In ",(0,t.jsx)(s.strong,{children:"Hydra 1.0"}),", configs from the Defaults List are overriding ",(0,t.jsx)(s.em,{children:"config.yaml"}),", resulting in the following output:"]})}),(0,t.jsx)("div",{className:"col  col--4",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:"{2}",children:"foo:\n  x: 20\n"})})})]}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col",children:(0,t.jsxs)(s.p,{children:["As of ",(0,t.jsx)(s.strong,{children:"Hydra 1.1"}),", ",(0,t.jsx)(s.em,{children:"config.yaml"})," is overriding configs from the Defaults List, resulting in the following output:"]})}),(0,t.jsx)("div",{className:"col  col--4",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:"{2}",children:"foo:\n  x: 10\n"})})})]}),"\n",(0,t.jsx)(s.h2,{id:"migration",children:"Migration"}),"\n",(0,t.jsxs)(s.p,{children:["If your application uses ",(0,t.jsx)(s.code,{children:"hydra.main"}),", the best way to verify that updating Hydra versions does not change your job configurations is to compare the output of ",(0,t.jsx)(s.code,{children:"python my_app.py --cfg job"})," on both the new and old Hydra versions. If your application uses the Compose API, please make sure you have comprehensive unit tests on the composed configuration."]}),"\n",(0,t.jsx)(s.h3,{id:"primary-config-is-a-yaml-file",children:"Primary config is a YAML file"}),"\n",(0,t.jsxs)(s.p,{children:["To ensure this change is not missed by people migrating from Hydra 1.0, Hydra 1.1 issues a warning if the Defaults List in the primary config is missing ",(0,t.jsx)(s.code,{children:"_self_"}),", and there are config values in addition to the Defaults List.",(0,t.jsx)(s.br,{}),"\n","To address the warning, add ",(0,t.jsx)(s.code,{children:"_self_"})," to the Defaults List of the primary config."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["If the new behavior works for your application, append ",(0,t.jsx)(s.code,{children:"_self_"})," to the end of the Defaults List."]}),"\n",(0,t.jsxs)(s.li,{children:["If your application requires the previous behavior, insert ",(0,t.jsx)(s.code,{children:"_self_"})," as the first item in your Defaults List."]}),"\n"]}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col col--6",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title="config.yaml" {2}',children:"defaults:\n  - _self_\n  - foo: bar\n\nfoo:\n  x: 10\n"})})}),(0,t.jsx)("div",{className:"col  col--6",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'title="Output config"',children:"foo:\n  x: 20\n\n\n\n\n"})})})]}),"\n",(0,t.jsxs)(s.p,{children:["The Defaults List is described ",(0,t.jsx)(s.a,{href:"/docs/1.2/advanced/defaults_list",children:"here"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"primary-config-is-a-structured-config",children:"Primary config is a Structured Config"}),"\n",(0,t.jsxs)(s.p,{children:["Structured Configs used as primary config may see changes as well.\nYou should add ",(0,t.jsx)(s.code,{children:"_self_"})," to the defaults list to indicate the composition order. In such cases you will typically want ",(0,t.jsx)(s.code,{children:"_self_"})," to be the first item in the defaults list."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",metastring:"{3,14}",children:'defaults = [\n    "_self_",\n    {"db": "mysql"}\n]\n\n@dataclass\nclass Config:\n    # this is unfortunately verbose due to @dataclass limitations\n    defaults: List[Any] = field(default_factory=lambda: defaults)\n\n    # Hydra will populate this field based on the defaults list\n    db: Any = MISSING\n'})}),"\n",(0,t.jsx)(s.h3,{id:"primary-config-is-a-config-file-with-a-structured-config-schema",children:"Primary config is a config file with a Structured Config schema"}),"\n",(0,t.jsxs)(s.p,{children:["If you use Structured Config as a schema for your primary config, be sure to add ",(0,t.jsx)(s.code,{children:"_self_"})," after the schema in the Defaults List, otherwise the schema will override the config instead of the other way around."]}),"\n",(0,t.jsxs)("div",{className:"row",children:[(0,t.jsx)("div",{className:"col col--4",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",metastring:'title="my_app.py"',children:'@dataclass\nclass Config:\n  host: str = "localhost"\n  port: int = 8080\n\ncs.store(name="base_config", \n         node=Config)\n'})})}),(0,t.jsx)("div",{className:"col  col--4",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'{3,5} title="config.yaml"',children:"defaults:\n - base_config  # schema\n - _self_       # after schema\n\nport: 3306\n\n\n"})})}),(0,t.jsx)("div",{className:"col  col--4",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",metastring:'{2} title="Output config"',children:"host: localhost # schema\nport: 3306      # config.yaml\n\n\n\n\n\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"compatibility-with-both-hydra-10-and-11",children:"Compatibility with both Hydra 1.0 and 1.1"}),"\n",(0,t.jsxs)(s.p,{children:["If your config must be compatible with both Hydra 1.0 and 1.1, Insert ",(0,t.jsx)(s.code,{children:"_self_"})," as the first item in the Defaults List.\nHydra 1.0.7 (or newer releases in Hydra 1.0) ignores ",(0,t.jsx)(s.code,{children:"_self_"})," in the Defaults List and Hydra 1.1 will compose the same config as Hydra 1.0 if ",(0,t.jsx)(s.code,{children:"_self_"})," is the first item."]})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);