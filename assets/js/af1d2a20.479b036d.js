"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8292],{12699:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"advanced/compose_api","title":"Compose API","description":"Hydra 0.11.0 introduces a new experimental API for composing configuration via the hydra.experimental.compose() function.","source":"@site/versioned_docs/version-0.11/advanced/hydra_compose.md","sourceDirName":"advanced","slug":"/advanced/compose_api","permalink":"/docs/0.11/advanced/compose_api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/advanced/hydra_compose.md","tags":[],"version":"0.11","lastUpdatedBy":"zhenbang-2026","lastUpdatedAt":1756937906000,"frontMatter":{"id":"compose_api","title":"Compose API","sidebar_label":"Experimental compose API"},"sidebar":"docs","previous":{"title":"Hydra plugins","permalink":"/docs/0.11/advanced/plugins"},"next":{"title":"Ray example","permalink":"/docs/0.11/advanced/ray_example"}}');var a=o(74848),t=o(28453);const r={id:"compose_api",title:"Compose API",sidebar_label:"Experimental compose API"},c=void 0,s={},d=[{value:"<code>hydra.experimental.compose()</code> example",id:"hydraexperimentalcompose-example",level:3},{value:"API Documentation",id:"api-documentation",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Hydra 0.11.0 introduces a new experimental API for composing configuration via the ",(0,a.jsx)(n.code,{children:"hydra.experimental.compose()"})," function.\nPrior to calling compose(), you have to initialize Hydra: This can be done by using the standard ",(0,a.jsx)(n.code,{children:"@hydra.main()"})," or by calling ",(0,a.jsx)(n.code,{children:"hydra.experimental.initialize()"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Here is an ",(0,a.jsx)(n.a,{href:"https://github.com/facebookresearch/hydra/tree/0.11_branch/examples/notebook",children:"example Jupyter notebook utilizing this API"}),"."]}),"\n",(0,a.jsxs)(n.h3,{id:"hydraexperimentalcompose-example",children:[(0,a.jsx)(n.code,{children:"hydra.experimental.compose()"})," example"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from hydra.experimental import compose, initialize\n\n\nif __name__ == "__main__":\n    initialize(\n        config_dir="conf", strict=True,\n    )\n\n    cfg = compose("config.yaml", overrides=["db=mysql", "db.user=me"])\n    print(OmegaConf.to_yaml(cfg))\n'})}),"\n",(0,a.jsx)(n.h3,{id:"api-documentation",children:"API Documentation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def compose(config_file=None, overrides=[], strict=None):\n    """\n    :param config_file: optional config file to load\n    :param overrides: list of overrides for config file\n    :param strict: optionally override the default strict mode\n    :return: the composed config\n    """\n\n\ndef initialize(config_dir=None, strict=None, caller_stack_depth=1):\n    """\n    Initializes the Hydra sub system\n\n    :param config_dir: config directory relative to the calling script\n    :param strict: Default value for strict mode\n    :param caller_stack_depth:\n    :return:\n    """\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var i=o(96540);const a={},t=i.createContext(a);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);