"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8161],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const l={},t=i.createContext(l);function r(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}},55774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"advanced/defaults_list","title":"The Defaults List","description":"Introduction","source":"@site/versioned_docs/version-1.3/advanced/defaults_list.md","sourceDirName":"advanced","slug":"/advanced/defaults_list","permalink":"/docs/1.3/advanced/defaults_list","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.3/advanced/defaults_list.md","tags":[],"version":"1.3","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761324871000,"frontMatter":{"id":"defaults_list","title":"The Defaults List"},"sidebar":"docs","previous":{"title":"Extended Override syntax","permalink":"/docs/1.3/advanced/override_grammar/extended"},"next":{"title":"Packages","permalink":"/docs/1.3/advanced/overriding_packages"}}');var l=s(74848),t=s(28453);const r={id:"defaults_list",title:"The Defaults List"},a=void 0,d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"An example",id:"an-example",level:2},{value:"Overriding Config Group options",id:"overriding-config-group-options",level:2},{value:"Composition order",id:"composition-order",level:2},{value:"Interpolation in the Defaults List",id:"interpolation-in-the-defaults-list",level:2},{value:"Restrictions:",id:"restrictions",level:4},{value:"Debugging the Defaults List",id:"debugging-the-defaults-list",level:2},{value:"Related topics",id:"related-topics",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,l.jsx)(n.admonition,{type:"important",children:(0,l.jsx)(n.p,{children:"Many of the features described in this page are new. Please report any issues."})}),"\n",(0,l.jsx)(n.p,{children:"The Defaults List is a list in an input config that instructs Hydra how to build the output config.\nEach input config can have a Defaults List as a top level element. The Defaults List itself\nis not a part of output config."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",metastring:'title="Defaults List YAML syntax"',children:"defaults:\n (- CONFIG|GROUP_DEFAULT)*\n\nCONFIG                 : (CONFIG_GROUP/)?CONFIG_NAME(@PACKAGE)?\nGROUP_DEFAULT          : [optional|override]? CONFIG_GROUP(@PACKAGE)?: OPTION\nOPTION                 : CONFIG_NAME|CONFIG_NAMES|null\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"CONFIG"})," : A config to use when creating the output config. e.g. ",(0,l.jsx)(n.code,{children:"db/mysql"}),", ",(0,l.jsx)(n.code,{children:"db/mysql@backup"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"GROUP_DEFAULT"})," : An ",(0,l.jsx)(n.em,{children:"overridable"})," config. e.g. ",(0,l.jsx)(n.code,{children:"db: mysql"}),", ",(0,l.jsx)(n.code,{children:"db@backup: mysql"}),"."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"override"})})," : Overrides the option of a previously defined GROUP_DEFAULT."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"optional"})})," : By default, an OPTION that do not exist causes an error; optional suppresses the error."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"null"})})," : A place-holder for a future override. If it is not overridden the entry is ignored."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"CONFIG_NAME"}),": The name of a config, without the file system extension. e.g. ",(0,l.jsx)(n.code,{children:"mysql"})," and not ",(0,l.jsx)(n.code,{children:"mysql.yaml"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"CONFIG_NAMES"})," : A list of config names. e.g. ",(0,l.jsx)(n.code,{children:"[mysql, sqlite]"})]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"CONFIG_GROUP"})," : A path to a set of configs.\nThe path is relative to the containing config.\nIt can be made absolute by prefixing it with a ",(0,l.jsx)(n.code,{children:"/"}),".\nThe path separator is ",(0,l.jsx)(n.code,{children:"/"})," regardless of the operating system."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"OPTION"}),": The currently selected ",(0,l.jsx)(n.em,{children:"CONFIG_NAME"})," or ",(0,l.jsx)(n.em,{children:"CONFIG_NAMES"})," from a ",(0,l.jsx)(n.em,{children:"CONFIG_GROUP"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"PACKAGE"})," : Where to place the content of the config within the output config.\nIt is relative to the Package of the containing config by default. See ",(0,l.jsx)(n.a,{href:"/docs/1.3/advanced/overriding_packages",children:"Packages"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"an-example",children:"An example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",metastring:'title="Config directory structure"',children:"\u251c\u2500\u2500 server\n\u2502   \u251c\u2500\u2500 db\n\u2502   \u2502   \u251c\u2500\u2500 mysql.yaml\n\u2502   \u2502   \u2514\u2500\u2500 sqlite.yaml\n\u2502   \u2514\u2500\u2500 apache.yaml\n\u2514\u2500\u2500 config.yaml\n"})}),"\n",(0,l.jsx)(n.p,{children:"Input configs:"}),"\n",(0,l.jsxs)("div",{className:"row",children:[(0,l.jsx)("div",{className:"col col--4",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"defaults:\n  - server/apache\n\ndebug: false\n\n\n\n"})})}),(0,l.jsx)("div",{className:"col col--4",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="server/apache.yaml"',children:"defaults:\n  - db: mysql\n\nname: apache\n\n\n\n"})})}),(0,l.jsxs)("div",{className:"col col--4",children:[(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="server/db/mysql.yaml"',children:"name: mysql\n"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="server/db/sqlite.yaml"',children:"name: sqlite\n"})})]})]}),"\n",(0,l.jsx)(n.p,{children:"Output config:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="$ python my_app.py"',children:"server:\n  db:\n    name: mysql\n  name: apache\ndebug: false\n"})}),"\n",(0,l.jsx)(n.h2,{id:"overriding-config-group-options",children:"Overriding Config Group options"}),"\n",(0,l.jsxs)(n.p,{children:["A Config Group's option can be overridden using a new ",(0,l.jsx)(n.em,{children:"GROUP_DEFAULT"})," with the ",(0,l.jsx)(n.em,{children:(0,l.jsx)(n.strong,{children:"override"})})," keyword.\nIf a Group Default is overridden more than once, the last one, in depth first order, wins."]}),"\n",(0,l.jsx)(n.p,{children:"Extending the previous example:"}),"\n",(0,l.jsxs)("div",{className:"row",children:[(0,l.jsx)("div",{className:"col col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml" {3}',children:"defaults:\n  - server/apache\n  - override server/db: sqlite\n\ndebug: false\n"})})}),(0,l.jsx)("div",{className:"col col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="$ python my_app.py" {2,3}',children:"server:\n  db:\n    name: sqlite\n  name: apache\ndebug: false\n"})})})]}),"\n",(0,l.jsx)(n.p,{children:"A Config Group's option can also be overridden via the command line. e.g:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ python my_app.py server/db=sqlite\n"})}),"\n",(0,l.jsx)(n.h2,{id:"composition-order",children:"Composition order"}),"\n",(0,l.jsx)(n.p,{children:"The Defaults List is ordered:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If multiple configs define the same value, the last one wins."}),"\n",(0,l.jsx)(n.li,{children:"If multiple configs contribute to the same dictionary, the result is the combined dictionary."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"By default, the content of a config is overriding the content of configs in the defaults list."}),"\n",(0,l.jsxs)("div",{className:"row",children:[(0,l.jsx)("div",{className:"col col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml" {5}',children:"defaults:\n  - db: mysql\n\ndb:\n  host: backup\n"})})}),(0,l.jsx)("div",{className:"col  col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="Result: db.host from config" {3}',children:"db:\n  driver: mysql    # db/mysql.yaml\n  host: backup     # config.yaml\n  port: 3306       # db/mysql.yaml\n\n"})})})]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"_self_"})," entry determines the relative position of ",(0,l.jsx)(n.strong,{children:"this"})," config in the Defaults List.\nIf it is not specified, it is added automatically as the last item."]}),"\n",(0,l.jsxs)("div",{className:"row",children:[(0,l.jsx)("div",{className:"col col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="config.yaml" {2,6}',children:"defaults:\n  - _self_\n  - db: mysql # Overrides this config\n\ndb:\n  host: backup\n"})})}),(0,l.jsx)("div",{className:"col  col--6",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="Result: All values from db/mysql" {3}',children:"db:\n  driver: mysql    # db/mysql.yaml\n  host: localhost  # db/mysql.yaml\n  port: 3306       # db/mysql.yaml\n\n\n"})})})]}),"\n",(0,l.jsxs)(n.p,{children:["With ",(0,l.jsx)(n.code,{children:"_self_"})," at the top of the Defaults List, the host field defined in ",(0,l.jsx)(n.em,{children:"config.yaml"})," now precedes the host field defined\nin ",(0,l.jsx)(n.em,{children:"db/mysql.yaml"}),", and as a result is overridden."]}),"\n",(0,l.jsx)(n.h2,{id:"interpolation-in-the-defaults-list",children:"Interpolation in the Defaults List"}),"\n",(0,l.jsx)(n.p,{children:"Config Group Options can be selected using interpolation."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - server: apache\n  - db: mysql\n  - combination_specific_config: ${server}_${db}  # apache_mysql\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Interpolation keys can be config groups with any @package overrides.\nFor example: ",(0,l.jsx)(n.code,{children:"${db/engine}"}),", ",(0,l.jsx)(n.code,{children:"${db@backup}"})]}),"\n",(0,l.jsxs)(n.p,{children:["The selected option for ",(0,l.jsx)(n.em,{children:"combination_specific_config"})," depends on the final selected options for ",(0,l.jsx)(n.em,{children:"db"})," and ",(0,l.jsx)(n.em,{children:"server"}),".\ne.g., If ",(0,l.jsx)(n.em,{children:"db"})," is overridden to ",(0,l.jsx)(n.em,{children:"sqlite"}),", ",(0,l.jsx)(n.em,{children:"combination_specific_config"})," will become ",(0,l.jsx)(n.em,{children:"apache_sqlite"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"restrictions",children:"Restrictions:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Interpolation keys in the Defaults List cannot reference values in the Final Config Object (it does not yet exist)."}),"\n",(0,l.jsx)(n.li,{children:"Defaults List interpolation keys are absolute (even in nested configs)."}),"\n",(0,l.jsx)(n.li,{children:"The subtree expanded by an Interpolated Config may not contain Default List overrides."}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["See ",(0,l.jsx)(n.a,{href:"/docs/1.3/patterns/specializing_config",children:"Patterns/Specializing Configs"})," for more information."]}),"\n",(0,l.jsx)(n.h2,{id:"debugging-the-defaults-list",children:"Debugging the Defaults List"}),"\n",(0,l.jsx)(n.p,{children:"Hydra's config composition process is as follows:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"The Defaults Tree is created."}),"\n",(0,l.jsx)(n.li,{children:"The Final Defaults List is created via a DFS walk of the Defaults Tree."}),"\n",(0,l.jsx)(n.li,{children:"The Output Config is composed from the entries in the Final Defaults List."}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"You can inspect these artifacts via command line flags:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--info defaults-tree"})," shows the Defaults Tree."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--info defaults"})," Shows the Final Defaults List."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"--cfg job|hydra|all"})," Shows the Output Config."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"Example outputs:"}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsxs)("summary",{children:["python my_app.py ",(0,l.jsx)("b",{children:"--info defaults-tree"})]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title=""',children:"<root>:\n  hydra/config:\n    hydra/hydra_logging: default\n    hydra/job_logging: default\n    hydra/launcher: basic\n    hydra/sweeper: basic\n    hydra/output: default\n    hydra/help: default\n    hydra/hydra_help: default\n    _self_\n  config:\n    server/apache:\n      server/db: mysql\n      _self_\n    _self_\n"})})]}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsxs)("summary",{children:["python my_app.py ",(0,l.jsx)("b",{children:"--info defaults"})]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"Defaults List\n*************\n| Config path                 | Package             | _self_ | Parent        |\n-------------------------------------------------------------------------------\n| hydra/hydra_logging/default | hydra.hydra_logging | False  | hydra/config  |\n| hydra/job_logging/default   | hydra.job_logging   | False  | hydra/config  |\n| hydra/launcher/basic        | hydra.launcher      | False  | hydra/config  |\n| hydra/sweeper/basic         | hydra.sweeper       | False  | hydra/config  |\n| hydra/output/default        | hydra               | False  | hydra/config  |\n| hydra/help/default          | hydra.help          | False  | hydra/config  |\n| hydra/hydra_help/default    | hydra.hydra_help    | False  | hydra/config  |\n| hydra/config                | hydra               | True   | <root>        |\n| server/db/mysql             | server.db           | False  | server/apache |\n| server/apache               | server              | True   | config        |\n| config                      |                     | True   | <root>        |\n-------------------------------------------------------------------------------\n"})})]}),"\n",(0,l.jsxs)(s,{children:[(0,l.jsxs)("summary",{children:["python my_app.py ",(0,l.jsx)("b",{children:"--cfg job"})]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"server:\n  db:\n    name: mysql\n  name: apache\ndebug: false\n"})})]}),"\n",(0,l.jsx)(n.h2,{id:"related-topics",children:"Related topics"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/1.3/advanced/overriding_packages",children:"Packages"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/1.3/patterns/extending_configs",children:"Common Patterns/Extending Configs"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/1.3/patterns/configuring_experiments",children:"Common Patterns/Configuring Experiments"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/1.3/patterns/select_multiple_configs_from_config_group",children:"Selecting multiple configs from a Config Group"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);