"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[215],{19155:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"tutorial/logging","title":"Logging","description":"People often do not use Python logging due to the setup cost.","source":"@site/versioned_docs/version-0.11/tutorial/9_logging.md","sourceDirName":"tutorial","slug":"/tutorial/logging","permalink":"/docs/0.11/tutorial/logging","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/tutorial/9_logging.md","tags":[],"version":"0.11","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761324871000,"sidebarPosition":9,"frontMatter":{"id":"logging","title":"Logging","sidebar_label":"Logging"},"sidebar":"docs","previous":{"title":"Output/Working directory","permalink":"/docs/0.11/tutorial/working_directory"},"next":{"title":"Debugging","permalink":"/docs/0.11/tutorial/debugging"}}');var i=o(74848),l=o(28453);const s={id:"logging",title:"Logging",sidebar_label:"Logging"},r=void 0,g={},a=[];function d(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"People often do not use Python logging due to the setup cost.\nHydra solves that by configuring the Python logging for you."}),"\n",(0,i.jsx)(n.p,{children:"By default Hydra logs at the INFO level to both console and a file."}),"\n",(0,i.jsx)(n.p,{children:"Example of logging with Hydra:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import logging\n\n# A logger for this file\nlog = logging.getLogger(__name__)\n\n@hydra.main()\ndef my_app(_cfg):\n    log.info("Info level message")\n    log.debug("Debug level message")\n\n$ python my_app.py\n[2019-06-27 00:52:46,653][__main__][INFO] - Info level message\n\n'})}),"\n",(0,i.jsxs)(n.p,{children:["You can enable DEBUG level logging from the command line  by overriding ",(0,i.jsx)(n.code,{children:"hydra.verbose"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"hydra.verbose"})," can be a Boolean, a String or a List:\nExamples:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hydra.verbose=true"})," : Set ",(0,i.jsx)(n.strong,{children:"all"})," loggers log level to ",(0,i.jsx)(n.code,{children:"DEBUG"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hydra.verbose=__main__"})," : Set the ",(0,i.jsx)(n.code,{children:"__main__"})," logger log level to ",(0,i.jsx)(n.code,{children:"DEBUG"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"hydra.verbose=[__main__,hydra]"}),": Set the log levels of the loggers ",(0,i.jsx)(n.code,{children:"__main__"})," and hydra log to ",(0,i.jsx)(n.code,{children:"DEBUG"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"$ python my_app.py hydra.verbose=[__main__,hydra]\n[2019-09-29 13:06:00,880] - Installed Hydra Plugins\n[2019-09-29 13:06:00,880] - ***********************\n...\n[2019-09-29 13:06:00,896][__main__][INFO] - Info level message\n[2019-09-29 13:06:00,896][__main__][DEBUG] - Debug level message\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Logging can be ",(0,i.jsx)(n.a,{href:"/docs/0.11/configure_hydra/logging",children:"customized"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(96540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);