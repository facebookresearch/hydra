"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[717],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var i=n(96540);const s={},d=i.createContext(s);function o(e){const t=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(d.Provider,{value:t},e.children)}},96258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"upgrades/0.11_to_1.0/strict_mode_flag_deprecated","title":"strict flag mode deprecation","description":"strict flag mode deprecation","source":"@site/versioned_docs/version-1.2/upgrades/0.11_to_1.0/strict_mode_flag_deprecated.md","sourceDirName":"upgrades/0.11_to_1.0","slug":"/upgrades/0.11_to_1.0/strict_mode_flag_deprecated","permalink":"/docs/1.2/upgrades/0.11_to_1.0/strict_mode_flag_deprecated","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/upgrades/0.11_to_1.0/strict_mode_flag_deprecated.md","tags":[],"version":"1.2","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1755108758000,"frontMatter":{"id":"strict_mode_flag_deprecated","title":"strict flag mode deprecation","hide_title":true},"sidebar":"docs","previous":{"title":"Adding an @package directive","permalink":"/docs/1.2/upgrades/0.11_to_1.0/adding_a_package_directive"},"next":{"title":"Object instantiation changes","permalink":"/docs/1.2/upgrades/0.11_to_1.0/object_instantiation_changes"}}');var s=n(74848),d=n(28453);const o={id:"strict_mode_flag_deprecated",title:"strict flag mode deprecation",hide_title:!0},c=void 0,r={},a=[{value:"strict flag mode deprecation",id:"strict-flag-mode-deprecation",level:2},{value:"Alternatives to <code>strict=False</code>",id:"alternatives-to-strictfalse",level:2},{value:"Adding config fields through the command line",id:"adding-config-fields-through-the-command-line",level:3},{value:"Adding fields at runtime",id:"adding-fields-at-runtime",level:3},{value:"Field existence check",id:"field-existence-check",level:3}];function l(e){const t={br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"strict-flag-mode-deprecation",children:"strict flag mode deprecation"}),"\n",(0,s.jsxs)(t.p,{children:["The strict mode is a flag added to ",(0,s.jsx)(t.code,{children:"@hydra.main()"})," to enable two features:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Command line error detection (overriding a field not in the config)"}),"\n",(0,s.jsx)(t.li,{children:"Runtime config access error detection (accessing/setting a field not in the config)"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This flag is now deprecated, and the ability to turn it off will be removed in Hydra 1.1."}),"\n",(0,s.jsxs)(t.h2,{id:"alternatives-to-strictfalse",children:["Alternatives to ",(0,s.jsx)(t.code,{children:"strict=False"})]}),"\n",(0,s.jsx)(t.p,{children:"Below are a few common reasons for people disabling strict mode along with recommended alternatives."}),"\n",(0,s.jsx)(t.h3,{id:"adding-config-fields-through-the-command-line",children:"Adding config fields through the command line"}),"\n",(0,s.jsx)(t.p,{children:"With strict mode disabled; you can add fields not specified in config file through the command line.\nHydra 1.0 introduces the + prefix to command line overrides, enabling the addition of fields not in the config file."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="config.yaml"',children:"db:\n  driver: mysql\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:"{1,6}",children:"$ python my_app.py +db.host=localhost\ndb:\n  driver: mysql\n  host: localhost\n"})}),"\n",(0,s.jsx)(t.h3,{id:"adding-fields-at-runtime",children:"Adding fields at runtime"}),"\n",(0,s.jsxs)(t.p,{children:["When strict mode is disabled, you can add fields to your config at runtime.\nStrict mode is implemented by setting the OmegaConf ",(0,s.jsx)(t.code,{children:"struct"})," flag to True on the root of the config."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["You can disable the struct flag a specific context using ",(0,s.jsx)(t.code,{children:"open_dict"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["You can disable the struct flag permanently for your config using ",(0,s.jsx)(t.code,{children:"OmegaConf.set_struct(cfg, False)"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Learn more about OmegaConf struct flag ",(0,s.jsx)("a",{class:"external",href:"https://omegaconf.readthedocs.io/en/latest/usage.html#struct-flag",target:"_blank",children:"here"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"field-existence-check",children:"Field existence check"}),"\n",(0,s.jsx)(t.p,{children:"With strict mode disabled, you can check if a field is in the config by comparing it to None:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"if cfg.host is None:\n    # host is not in the config\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will no longer work because an exception will be thrown when the ",(0,s.jsx)(t.code,{children:"host"})," field is accessed.",(0,s.jsx)(t.br,{}),"\n","Use ",(0,s.jsx)(t.code,{children:"in"})," or ",(0,s.jsx)(t.code,{children:"hasattr"})," instead:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'if "host" not in cfg:\n    # host is not in the config\n\nif not hasattr(cfg, "host"):\n    # host is not in the config\n'})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);