"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5687],{28453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var a=r(96540);const s={},i=a.createContext(s);function l(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:n},e.children)}},49595:(e,n,r)=>{r.d(n,{A:()=>t,C:()=>o});r(96540);var a=r(28774),s=r(44586),i=r(48295),l=r(74848);function c(e){const n=(0,i.ir)();return(0,s.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function t(e){return(0,l.jsx)(a.default,{...e,to:c(e.to),target:"_blank"})}function o(e){const n=e.text??"Example (Click Here)";return(0,l.jsxs)(t,{...e,children:[(0,l.jsx)("span",{children:"\xa0"}),(0,l.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}},87521:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"plugins/ray_launcher","title":"Ray Launcher plugin","description":"PyPI","source":"@site/versioned_docs/version-1.2/plugins/ray_launcher.md","sourceDirName":"plugins","slug":"/plugins/ray_launcher","permalink":"/docs/1.2/plugins/ray_launcher","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/plugins/ray_launcher.md","tags":[],"version":"1.2","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761571287000,"frontMatter":{"id":"ray_launcher","title":"Ray Launcher plugin","sidebar_label":"Ray Launcher plugin"},"sidebar":"docs","previous":{"title":"Joblib Launcher plugin","permalink":"/docs/1.2/plugins/joblib_launcher"},"next":{"title":"RQ Launcher plugin","permalink":"/docs/1.2/plugins/rq_launcher"}}');var s=r(74848),i=r(28453),l=r(49595);const c={id:"ray_launcher",title:"Ray Launcher plugin",sidebar_label:"Ray Launcher plugin"},t=void 0,o={},d=[{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3},{value:"<code>ray_aws</code> launcher",id:"ray_aws-launcher",level:3},{value:"Examples",id:"examples",level:4},{value:"Manage Cluster LifeCycle",id:"manage-cluster-lifecycle",level:5},{value:"Configure Ray Logging",id:"configure-ray-logging",level:5},{value:"<code>ray</code> launcher",id:"ray-launcher",level:3},{value:"Configure <code>ray.init()</code> and <code>ray.remote()</code>",id:"configure-rayinit-and-rayremote",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://pypi.org/project/hydra-ray-launcher/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/v/hydra-ray-launcher",alt:"PyPI"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/l/hydra-ray-launcher",alt:"PyPI - License"}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/pyversions/hydra-ray-launcher",alt:"PyPI - Python Version"}),"\n",(0,s.jsx)(n.a,{href:"https://pypistats.org/packages/hydra-ray-launcher",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/pypi/dm/hydra-ray-launcher.svg",alt:"PyPI - Downloads"})}),(0,s.jsx)(l.C,{text:"Example application",to:"plugins/hydra_ray_launcher/examples"}),(0,s.jsx)(l.C,{text:"Plugin source",to:"plugins/hydra_ray_launcher"})]}),"\n",(0,s.jsxs)(n.p,{children:["The Ray Launcher plugin provides 2 launchers: ",(0,s.jsx)(n.code,{children:"ray_aws"})," and ",(0,s.jsx)(n.code,{children:"ray"}),".\n",(0,s.jsx)(n.code,{children:"ray_aws"})," launches jobs remotely on AWS and is built on top of ",(0,s.jsx)(n.a,{href:"https://docs.ray.io/en/releases-1.3.0/cluster/sdk.html",children:"ray autoscaler sdk"}),". ",(0,s.jsx)(n.code,{children:"ray"})," launches jobs on your local machine or existing ray cluster."]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$ pip install hydra-ray-launcher --upgrade\n"})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Once installed, add ",(0,s.jsx)(n.code,{children:"hydra/launcher=ray_aws"})," or ",(0,s.jsx)(n.code,{children:"hydra/launcher=ray"})," to your command line. Alternatively, override ",(0,s.jsx)(n.code,{children:"hydra/launcher"})," in your config:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - override hydra/launcher: ray_aws\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There are several standard approaches for configuring plugins. Check ",(0,s.jsx)(n.a,{href:"/docs/1.2/patterns/configuring_plugins",children:"this page"})," for more information."]}),"\n",(0,s.jsxs)(n.h3,{id:"ray_aws-launcher",children:[(0,s.jsx)(n.code,{children:"ray_aws"})," launcher"]}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ray_aws"})," launcher is built on top of ray's ",(0,s.jsx)(n.a,{href:"https://docs.ray.io/en/releases-1.3.0/cluster/sdk.html",children:"autoscaler sdk"}),". To get started, you need to\n",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html",children:"config your AWS credentials"}),".\n",(0,s.jsx)(n.code,{children:"ray autoscaler sdk"})," expects your AWS credentials have certain permissions for ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/ec2",children:(0,s.jsx)(n.code,{children:"EC2"})})," and ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/iam",children:(0,s.jsx)(n.code,{children:"IAM"})}),". Read ",(0,s.jsx)(n.a,{href:"https://github.com/ray-project/ray/issues/9327",children:"this"})," for more information."]})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ray autoscaler sdk"})," expects a configuration for the EC2 cluster; we've schematized the configs in ",(0,s.jsx)(l.A,{to:"plugins/hydra_ray_launcher/hydra_plugins/hydra_ray_launcher/_config.py",children:"here"})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Discover ray_aws launcher's config"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py hydra/launcher=ray_aws --cfg hydra -p hydra.launcher\n# @package hydra.launcher\n# @package hydra.launcher\n_target_: hydra_plugins.hydra_ray_launcher.ray_aws_launcher.RayAWSLauncher\nenv_setup:\n  pip_packages:\n    omegaconf: ${ray_pkg_version:omegaconf}\n    hydra_core: ${ray_pkg_version:hydra}\n    ray: ${ray_pkg_version:ray}\n    cloudpickle: ${ray_pkg_version:cloudpickle}\n    pickle5: 0.0.11\n    hydra_ray_launcher: 1.2.0.dev1\n  commands:\n  - conda create -n hydra_${python_version:micro} python=${python_version:micro} -y\n  - echo 'export PATH=\"$HOME/anaconda3/envs/hydra_${python_version:micro}/bin:$PATH\"'\n    >> ~/.bashrc\nray:\n  init:\n    address: null\n  remote: {}\n  cluster:\n    cluster_name: default\n    min_workers: 0\n    upscaling_speed: 1.0\n    max_workers: 1\n    initial_workers: 0\n    autoscaling_mode: default\n    target_utilization_fraction: 0.8\n    idle_timeout_minutes: 5\n    docker:\n      image: ''\n      container_name: ''\n      pull_before_run: true\n      run_options: []\n    provider:\n      type: aws\n      region: us-west-2\n      availability_zone: us-west-2a,us-west-2b\n      cache_stopped_nodes: false\n      key_pair:\n        key_name: hydra-${oc.env:USER,user}\n    auth:\n      ssh_user: ubuntu\n    available_node_types:\n      ray.head.default:\n        resources: {}\n        node_config:\n          InstanceType: m5.large\n          ImageId: ami-0a2363a9cff180a64\n      ray.worker.default:\n        min_workers: 0\n        max_workers: 2\n        resources: {}\n        node_config:\n          InstanceType: m5.large\n          ImageId: ami-0a2363a9cff180a64\n          InstanceMarketOptions:\n            MarketType: spot\n    head_node_type: ray.head.default\n    file_mounts: {}\n    initialization_commands: []\n    cluster_synced_files: []\n    setup_commands: []\n    head_setup_commands: []\n    worker_setup_commands: []\n    head_start_ray_commands:\n    - ray stop\n    - ulimit -n 65536;ray start --head --port=6379 --object-manager-port=8076             --autoscaling-config=~/ray_bootstrap_config.yaml\n    worker_start_ray_commands:\n    - ray stop\n    - ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076\n  run_env: auto\nstop_cluster: true\nsync_up:\n  source_dir: null\n  target_dir: null\n  include: []\n  exclude: []\nsync_down:\n  source_dir: null\n  target_dir: null\n  include: []\n  exclude: []\nlogging:\n  log_style: auto\n  color_mode: auto\n  verbosity: 0\ncreate_update_cluster:\n  no_restart: false\n  restart_only: false\n  no_config_cache: false\nteardown_cluster:\n  workers_only: false\n  keep_min_workers: false\n"})})]}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["The following examples can be found ",(0,s.jsx)(l.A,{to:"plugins/hydra_ray_launcher/examples",children:"here"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Simple app"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py --multirun task=1,2,3\n[HYDRA] Ray Launcher is launching 3 jobs,\n[HYDRA]        #0 : task=1\n[HYDRA]        #1 : task=2\n[HYDRA]        #2 : task=3\n[HYDRA] Pickle for jobs: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmpqqg4v4i7/job_spec.pkl\nCluster: default\n...\nINFO services.py:1172 -- View the Ray dashboard at http://localhost:8265\n(pid=3374) [__main__][INFO] - Executing task 1\n(pid=3374) [__main__][INFO] - Executing task 2\n(pid=3374) [__main__][INFO] - Executing task 3\n...\n[HYDRA] Stopping cluster now. (stop_cluster=true)\n[HYDRA] Deleted the cluster (provider.cache_stopped_nodes=false)\nDestroying cluster. Confirm [y/N]: y [automatic, due to --yes]\n...\nNo nodes remaining.\n\n"})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Upload & Download from remote cluster"}),(0,s.jsxs)(n.p,{children:["If your application is dependent on multiple modules, you can configure ",(0,s.jsx)(n.code,{children:"hydra.launcher.sync_up"})," to upload dependency modules to the remote cluster.\nYou can also configure ",(0,s.jsx)(n.code,{children:"hydra.launcher.sync_down"})," to download output from remote cluster if needed. This functionality is built on top of ",(0,s.jsx)(n.code,{children:"rsync"}),", ",(0,s.jsx)(n.code,{children:"include"})," and ",(0,s.jsx)(n.code,{children:"exclude"})," is consistent with how it works in ",(0,s.jsx)(n.code,{children:"rsync"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$  python train.py --multirun random_seed=1,2,3\n[HYDRA] Ray Launcher is launching 3 jobs,\n[HYDRA]        #0 : random_seed=1\n[HYDRA]        #1 : random_seed=2\n[HYDRA]        #2 : random_seed=3\n[HYDRA] Pickle for jobs: /var/folders/n_/9qzct77j68j6n9lh0lw3vjqcn96zxl/T/tmptdkye9of/job_spec.pkl\nCluster: default\n...\nINFO services.py:1172 -- View the Ray dashboard at http://localhost:8265\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\n(pid=1772) [__main__][INFO] - Start training...\n(pid=1772) [INFO] - Init my model\n(pid=1772) [INFO] - Created dir for checkpoints. dir=checkpoint\nLoaded cached provider configuration\n...\n[HYDRA] Output: receiving file list ... done\n16-32-25/\n16-32-25/0/\n16-32-25/0/checkpoint/\n16-32-25/0/checkpoint/checkpoint_1.pt\n16-32-25/1/\n16-32-25/1/checkpoint/\n16-32-25/1/checkpoint/checkpoint_2.pt\n16-32-25/2/\n16-32-25/2/checkpoint/\n16-32-25/2/checkpoint/checkpoint_3.pt\n...\n[HYDRA] Stopping cluster now. (stop_cluster=true)\n[HYDRA] Deleted the cluster (provider.cache_stopped_nodes=false)\nDestroying cluster. Confirm [y/N]: y [automatic, due to --yes]\n...\nNo nodes remaining.\n\n"})})]}),"\n",(0,s.jsx)(n.h5,{id:"manage-cluster-lifecycle",children:"Manage Cluster LifeCycle"}),"\n",(0,s.jsx)(n.p,{children:"You can manage the Ray EC2 cluster lifecycle by configuring the flags provided by the plugin:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Default setting (no need to specify on commandline): delete cluster after job finishes remotely:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.stop_cluster=true\nhydra.launcher.ray.cluster.provider.cache_stopped_nodes=false\nhydra.launcher.teardown_cluster.workers_only=false\nhydra.launcher.teardown_cluster.keep_min_workers=false\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Keep cluster running after jobs finishes remotely"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.stop_cluster=false\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Power off EC2 instances and control node termination using ",(0,s.jsx)(n.code,{children:"hydra.launcher.ray.cluster.provider.cache_stopped_nodes"}),"\nand ",(0,s.jsx)(n.code,{children:"hydra.launcher.teardown_cluster.workers_only"})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"cache_stopped_nodes"}),(0,s.jsx)(n.th,{children:"workers_only"}),(0,s.jsx)(n.th,{children:"behavior"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"All nodes are terminated"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"Keeps head node running and terminates only worker node"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Keeps both head node and worker node and stops both of them"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"true"}),(0,s.jsx)(n.td,{children:"Keeps both head node and worker node and stops only worker node"})]})]})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Keep ",(0,s.jsx)(n.code,{children:"hydra.launcher.ray.cluster.min_workers"})," worker nodes\nand delete the rest of the worker nodes"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.teardown_cluster.keep_min_workers=true\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Additionally, you can configure how to create or update the cluster:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Default config: run setup commands, restart Ray and use\nthe config cache if available"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.create_update_cluster.no_restart=false\nhydra.launcher.create_update_cluster.restart_only=false\nhydra.launcher.create_update_cluster.no_config_cache=false\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Skip restarting Ray services when updating the cluster config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.create_update_cluster.no_restart=true\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Skip running setup commands and only restart Ray (cannot be used with\n",(0,s.jsx)(n.code,{children:"hydra.launcher.create_update_cluster.no_restart"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.create_update_cluster.restart_only=true\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Fully resolve all environment settings from the cloud provider again"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.create_update_cluster.no_config_cache=true\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"configure-ray-logging",children:"Configure Ray Logging"}),"\n",(0,s.jsx)(n.p,{children:"You can manage Ray specific logging by configuring the flags provided by the plugin:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Default config: use minimal verbosity and automatically\ndetect whether to use pretty-print and color mode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:'hydra.launcher.logging.log_style="auto"\nhydra.launcher.logging.color_mode="auto"\nhydra.launcher.logging.verbosity=0\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Disable pretty-print"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:'hydra.launcher.logging.log_style="record"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Disable color mode"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:'hydra.launcher.logging.color_mode="false"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Increase Ray logging verbosity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"hydra.launcher.logging.verbosity=3\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"ray-launcher",children:[(0,s.jsx)(n.code,{children:"ray"})," launcher"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ray"})," launcher lets you launch application on your ray cluster or local machine. You can easily config how your jobs are executed by changing ",(0,s.jsx)(n.code,{children:"ray"})," launcher's configuration here\n",(0,s.jsx)(n.code,{children:"~/hydra/plugins/hydra_ray_launcher/hydra_plugins/hydra_ray_launcher/conf/hydra/launcher/ray.yaml"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(l.A,{to:"plugins/hydra_ray_launcher/examples/simple",children:"example application"})," starts a new ray cluster."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py  --multirun hydra/launcher=ray\n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-11-10/15-16-28\n[HYDRA] Initializing ray with config: {}\nINFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8266\n[HYDRA]        #0 :\n(pid=97801) [__main__][INFO] - Executing task 1\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can run the example application on your existing ray cluster as well by overriding ",(0,s.jsx)(n.code,{children:"hydra.launcher.ray.init.address"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-commandline",children:"$ python my_app.py  --multirun hydra/launcher=ray hydra.launcher.ray.init.address=localhost:6379'\n[HYDRA] Ray Launcher is launching 1 jobs, sweep output dir: multirun/2020-11-10/15-13-32\n[HYDRA] Initializing ray with config: {'num_cpus': None, 'num_gpus': None, 'address': 'localhost:6379'}\nINFO worker.py:633 -- Connecting to existing Ray cluster at address: 10.30.99.17:6379\n[HYDRA]        #0 :\n(pid=93358) [__main__][INFO] - Executing task 1\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"configure-rayinit-and-rayremote",children:["Configure ",(0,s.jsx)(n.code,{children:"ray.init()"})," and ",(0,s.jsx)(n.code,{children:"ray.remote()"})]}),"\n",(0,s.jsxs)(n.p,{children:["Ray launcher is built on top of ",(0,s.jsx)(n.a,{href:"https://docs.ray.io/en/master/package-ref.html?highlight=ray.remote#ray-init",children:(0,s.jsx)(n.code,{children:"ray.init()"})}),"\nand ",(0,s.jsx)(n.a,{href:"https://docs.ray.io/en/master/package-ref.html?highlight=ray.remote#ray-remote",children:(0,s.jsx)(n.code,{children:"ray.remote()"})}),".\nYou can configure ",(0,s.jsx)(n.code,{children:"ray"})," by overriding ",(0,s.jsx)(n.code,{children:"hydra.launcher.ray.init"})," and ",(0,s.jsx)(n.code,{children:"hydra.launcher.ray.remote"}),".\nCheck out an ",(0,s.jsx)(l.A,{to:"plugins/hydra_ray_launcher/examples/simple/config.yaml",children:"example config"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);