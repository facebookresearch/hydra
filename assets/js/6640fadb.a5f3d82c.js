"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1258],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(96540);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}},44513:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/multi_objective_result-398b4421a2661ec72d7c323762472ad5.png"},49595:(e,n,i)=>{i.d(n,{A:()=>l,C:()=>c});i(96540);var r=i(28774),t=i(44586),a=i(48295),s=i(74848);function o(e){const n=(0,a.ir)();return(0,t.default)().siteConfig.customFields.githubLinkVersionToBaseUrl[n?.name??"current"]+e}function l(e){return(0,s.jsx)(r.default,{...e,to:o(e.to),target:"_blank"})}function c(e){const n=e.text??"Example (Click Here)";return(0,s.jsxs)(l,{...e,children:[(0,s.jsx)("span",{children:"\xa0"}),(0,s.jsx)("img",{src:"https://img.shields.io/badge/-"+n+"-informational",alt:"Example (Click Here)"})]})}},97910:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"plugins/optuna_sweeper","title":"Optuna Sweeper plugin","description":"PyPI","source":"@site/versioned_docs/version-1.2/plugins/optuna_sweeper.md","sourceDirName":"plugins","slug":"/plugins/optuna_sweeper","permalink":"/docs/1.2/plugins/optuna_sweeper","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-1.2/plugins/optuna_sweeper.md","tags":[],"version":"1.2","lastUpdatedBy":"jesszzzz","lastUpdatedAt":1754333694000,"frontMatter":{"id":"optuna_sweeper","title":"Optuna Sweeper plugin","sidebar_label":"Optuna Sweeper plugin"},"sidebar":"docs","previous":{"title":"Nevergrad Sweeper plugin","permalink":"/docs/1.2/plugins/nevergrad_sweeper"},"next":{"title":"Terminology","permalink":"/docs/1.2/advanced/terminology"}}');var t=i(74848),a=i(28453),s=i(49595);const o={id:"optuna_sweeper",title:"Optuna Sweeper plugin",sidebar_label:"Optuna Sweeper plugin"},l=void 0,c={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Example 1: Single-Objective Optimization",id:"example-1-single-objective-optimization",level:2},{value:"Sampler configuration",id:"sampler-configuration",level:2},{value:"Search space configuration",id:"search-space-configuration",level:2},{value:"Configuring through commandline override",id:"configuring-through-commandline-override",level:3},{value:"Interval override",id:"interval-override",level:4},{value:"Range override",id:"range-override",level:4},{value:"Choice override",id:"choice-override",level:4},{value:"Configuring through config file",id:"configuring-through-config-file",level:3},{value:"Example 2:  Multi-Objective Optimization",id:"example-2--multi-objective-optimization",level:2},{value:"EXPERIMENTAL:  Custom-Search-Space Optimization",id:"experimental--custom-search-space-optimization",level:2},{value:"Order of trial configuration",id:"order-of-trial-configuration",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://pypi.org/project/hydra-optuna-sweeper/",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/pypi/v/hydra-optuna-sweeper",alt:"PyPI"})}),"\n",(0,t.jsx)(n.img,{src:"https://img.shields.io/pypi/l/hydra-optuna-sweeper",alt:"PyPI - License"}),"\n",(0,t.jsx)(n.img,{src:"https://img.shields.io/pypi/pyversions/hydra-optuna-sweeper",alt:"PyPI - Python Version"}),"\n",(0,t.jsx)(n.a,{href:"https://pypistats.org/packages/hydra-optuna-sweeper",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/pypi/dm/hydra-optuna-sweeper.svg",alt:"PyPI - Downloads"})}),(0,t.jsx)(s.C,{text:"Example application",to:"plugins/hydra_optuna_sweeper/example"}),(0,t.jsx)(s.C,{text:"Plugin source",to:"plugins/hydra_optuna_sweeper"})]}),"\n",(0,t.jsxs)(n.p,{children:["This plugin enables Hydra applications to utilize ",(0,t.jsx)(n.a,{href:"https://optuna.org",children:"Optuna"})," for the optimization of the parameters of experiments."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["This plugin requires ",(0,t.jsx)(n.code,{children:"hydra-core>=1.1.0"}),". Please install it with the following command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"pip install hydra-core --upgrade\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can install the plugin via pip:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"pip install hydra-optuna-sweeper --upgrade\n"})}),"\n",(0,t.jsxs)(n.p,{children:["There are several standard approaches for configuring plugins. Check ",(0,t.jsx)(n.a,{href:"/docs/1.2/patterns/configuring_plugins",children:"this page"})," for more information."]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Please set ",(0,t.jsx)(n.code,{children:"hydra/sweeper"})," to ",(0,t.jsx)(n.code,{children:"optuna"})," in your config file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - override hydra/sweeper: optuna\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, add ",(0,t.jsx)(n.code,{children:"hydra/sweeper=optuna"})," option to your command line."]}),"\n",(0,t.jsxs)(n.p,{children:["The default configuration is ",(0,t.jsx)(s.A,{to:"plugins/hydra_optuna_sweeper/hydra_plugins/hydra_optuna_sweeper/config.py",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"example-1-single-objective-optimization",children:"Example 1: Single-Objective Optimization"}),"\n",(0,t.jsxs)(n.p,{children:["We include an example in ",(0,t.jsx)(s.A,{to:"plugins/hydra_optuna_sweeper/example",children:"this directory"}),". ",(0,t.jsx)(n.code,{children:"example/sphere.py"})," implements a simple benchmark function to be minimized."]}),"\n",(0,t.jsx)(n.p,{children:"You can discover the Optuna sweeper parameters with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="python example/sphere.py hydra/sweeper=optuna --cfg hydra -p hydra.sweeper"',children:"# @package hydra.sweeper\nsampler:\n  _target_: optuna.samplers.TPESampler\n  seed: 123\n  consider_prior: true\n  prior_weight: 1.0\n  consider_magic_clip: true\n  consider_endpoints: false\n  n_startup_trials: 10\n  n_ei_candidates: 24\n  multivariate: false\n  warn_independent_sampling: true\n_target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper\ndirection: minimize\nstorage: null\nstudy_name: sphere\nn_trials: 20\nn_jobs: 1\nparams:\n  x: range(-5.5,5.5,step=0.5)\n  y: choice(-5,0,5)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The function decorated with ",(0,t.jsx)(n.code,{children:"@hydra.main()"})," returns a float which we want to minimize, the minimum is 0 and reached for:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"x: 0\ny: 0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To run optimization, clone the code and run the following command in the ",(0,t.jsx)(n.code,{children:"plugins/hydra_optuna_sweeper"})," directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/sphere.py --multirun\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can also override the search space parametrization:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/sphere.py --multirun 'x=interval(-5.0, 5.0)' 'y=interval(0, 10)'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You might find the ",(0,t.jsx)(n.code,{children:"optimization_results.yaml"})," file (i.e. best params and best value) under ",(0,t.jsx)(n.code,{children:"multirun"})," logs folder:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: optuna\nbest_params:\n  x: 0.0\n  'y': 0\nbest_value: 0.0\n"})}),"\n",(0,t.jsx)(n.h2,{id:"sampler-configuration",children:"Sampler configuration"}),"\n",(0,t.jsxs)(n.p,{children:["This plugin supports Optuna's ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/samplers.html",children:"samplers"}),".\nYou can change the sampler by overriding ",(0,t.jsx)(n.code,{children:"hydra/sweeper/sampler"})," or change sampler settings within ",(0,t.jsx)(n.code,{children:"hydra.sweeper.sampler"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"search-space-configuration",children:"Search space configuration"}),"\n",(0,t.jsxs)(n.p,{children:["This plugin supports Optuna's ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/distributions.html",children:"distributions"})," to configure search spaces. They can be defined either through commandline override or config file."]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-through-commandline-override",children:"Configuring through commandline override"}),"\n",(0,t.jsxs)(n.p,{children:["Hydra provides a override parser that support rich syntax. Please refer to ",(0,t.jsx)(n.a,{href:"/docs/1.2/advanced/override_grammar/basic",children:"OverrideGrammer/Basic"})," and ",(0,t.jsx)(n.a,{href:"/docs/1.2/advanced/override_grammar/extended",children:"OverrideGrammer/Extended"})," for details."]}),"\n",(0,t.jsx)(n.h4,{id:"interval-override",children:"Interval override"}),"\n",(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"interval"})," is converted to ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.UniformDistribution.html",children:(0,t.jsx)(n.code,{children:"UniformDistribution"})}),". You can use ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntUniformDistribution.html",children:(0,t.jsx)(n.code,{children:"IntUniformDistribution"})}),", ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.LogUniformDistribution.html",children:(0,t.jsx)(n.code,{children:"LogUniformDistribution"})})," or ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntLogUniformDistribution.html",children:(0,t.jsx)(n.code,{children:"IntLogUniformDistribution"})})," by casting the interval to ",(0,t.jsx)(n.code,{children:"int"})," and tagging it with ",(0,t.jsx)(n.code,{children:"log"}),"."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Example for interval override"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/sphere.py --multirun 'x=int(interval(-5.0, 5.0))' 'y=tag(log, interval(1, 10))'\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"[HYDRA] Study name: sphere\n[HYDRA] Storage: None\n[HYDRA] Sampler: TPESampler\n[HYDRA] Directions: ['minimize']\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#0 : x=-3 y=1.6859762540733367\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#1 : x=1 y=5.237816870668193\n...\n[HYDRA] Best parameters: {'x': 0, 'y': 1.0929184723430116}\n[HYDRA] Best value: 1.1944707871885822\n"})})]}),"\n",(0,t.jsx)(n.h4,{id:"range-override",children:"Range override"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"range"})," is converted to ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.IntUniformDistribution.html",children:(0,t.jsx)(n.code,{children:"IntUniformDistribution"})}),". If you apply ",(0,t.jsx)(n.code,{children:"shuffle"})," to ",(0,t.jsx)(n.code,{children:"range"}),", ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.CategoricalDistribution.html",children:(0,t.jsx)(n.code,{children:"CategoricalDistribution"})})," is used instead.\nIf any of ",(0,t.jsx)(n.code,{children:"range"}),"'s start, stop or step is of type float, it will be converted to ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.DiscreteUniformDistribution.html",children:(0,t.jsx)(n.code,{children:"DiscreteUniformDistribution"})})]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Example for range override"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/sphere.py --multirun 'x=range(-5.0, 5.0)' 'y=shuffle(range(-5, 5))'\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"[HYDRA] Study name: sphere\n[HYDRA] Storage: None\n[HYDRA] Sampler: TPESampler\n[HYDRA] Directions: ['minimize']\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#0 : x=-3 y=-4\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#1 : x=1 y=-1\n...\n[HYDRA] Best parameters: {'x': 0, 'y': -1}\n[HYDRA] Best value: 1.0\n"})})]}),"\n",(0,t.jsx)(n.h4,{id:"choice-override",children:"Choice override"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"choice"})," is converted to ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.distributions.CategoricalDistribution.html",children:(0,t.jsx)(n.code,{children:"CategoricalDistribution"})}),"."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Example for choice override"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/sphere.py --multirun 'x=choice(-5.0, 0.0, 5.0)' 'y=choice(0, 1, 2, 3, 4, 5)'\n"})}),(0,t.jsx)(n.p,{children:"The output is as follows:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"[HYDRA] Study name: sphere\n[HYDRA] Storage: None\n[HYDRA] Sampler: TPESampler\n[HYDRA] Directions: ['minimize']\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#0 : x=5.0 y=5\n[HYDRA] Launching 1 jobs locally\n[HYDRA] \t#1 : x=5.0 y=2\n...\n[HYDRA] Best parameters: {'x': 0.0, 'y': 0}\n[HYDRA] Best value: 0.0\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-through-config-file",children:"Configuring through config file"}),"\n",(0,t.jsxs)(n.p,{children:["The syntax in config file is consistent with the above commandline override. For example, a commandline override\n",(0,t.jsx)(n.code,{children:"x=range(1,4)"})," can be expressed in config file as ",(0,t.jsx)(n.code,{children:"x: range(1,4)"})," under the ",(0,t.jsx)(n.code,{children:"hydra.sweeper.params"})," node."]}),"\n",(0,t.jsx)(n.h2,{id:"example-2--multi-objective-optimization",children:"Example 2:  Multi-Objective Optimization"}),"\n",(0,t.jsxs)(n.p,{children:["In the same directory, ",(0,t.jsx)(n.code,{children:"example/multi-objective.py"})," implements a simple benchmark function, which has two objective values. We want to minimize two objectives simultaneously."]}),"\n",(0,t.jsx)(n.p,{children:"You can discover the Optuna sweeper parameters with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/multi-objective.py hydra/sweeper=optuna --cfg hydra -p hydra.sweeper\n"})}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Configuration of the multi-objective optimization example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# @package hydra.sweeper\nsampler:\n  _target_: optuna.samplers.NSGAIISampler\n  seed: 123\n  population_size: 50\n  mutation_prob: null\n  crossover_prob: 0.9\n  swapping_prob: 0.5\n  constraints_func: null\n_target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper\ndirection:\n- minimize\n- minimize\nstorage: null\nstudy_name: multi-objective\nn_trials: 20\nn_jobs: 1\nparams:\n  x: range(0, 5, step=0.5)\n  y: range(0, 3, step=0.5)\n"})})]}),"\n",(0,t.jsxs)(n.p,{children:["To run the optimization, use the following command in the ",(0,t.jsx)(n.code,{children:"plugins/hydra_optuna_sweeper"})," directory:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-commandline",children:"python example/multi-objective.py --multirun\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For problems with trade-offs between two different objectives, there may be no single solution that simultaneously minimizes both objectives. Instead, we obtained a set of solutions, namely ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Pareto_efficiency",children:"Pareto optimal solutions"}),", that show the best trade-offs possible between the objectives. In the following figure, the blue dots show the Pareto optimal solutions in the optimization results."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Pareto-optimal solutions",src:i(44513).A+"",width:"573",height:"443"})}),"\n",(0,t.jsx)(n.h2,{id:"experimental--custom-search-space-optimization",children:"EXPERIMENTAL:  Custom-Search-Space Optimization"}),"\n",(0,t.jsxs)(n.p,{children:["Hydra's Optuna Sweeper allows users to provide a hook for custom search space configuration.\nThis means you can work directly with the ",(0,t.jsx)(n.code,{children:"optuna.trial.Trial"})," object to suggest parameters.\nTo use this feature, define a python function with signature ",(0,t.jsx)(n.code,{children:"Callable[[DictConfig, optuna.trial.Trial], None]"}),"\nand set the ",(0,t.jsx)(n.code,{children:"hydra.sweeper.custom_search_space"})," key in your config to target that function."]}),"\n",(0,t.jsxs)(n.p,{children:["You can find a full example in the same directory as before, where ",(0,t.jsx)(n.code,{children:"example/custom-search-space-objective.py"})," implements a benchmark function to be minimized.\nThe example shows the use of Optuna's ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/tutorial/10_key_features/002_configurations.html",children:"pythonic search spaces"})," in combination with Hydra.\nPart of the search space configuration is defined in config files, and part of it is written in Python."]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"Example: Custom search space configuration"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"defaults:\n  - override hydra/sweeper: optuna\n\nhydra:\n  sweeper:\n    sampler:\n      seed: 123\n    direction: minimize\n    study_name: custom-search-space\n    storage: null\n    n_trials: 20\n    n_jobs: 1\n\n    params:\n      x: range(-5.5, 5.5, 0.5)\n      y: choice(-5, 0, 5)\n    # `custom_search_space` should be a dotpath pointing to a\n    # callable that provides search-space configuration logic:\n    custom_search_space: .custom-search-space-objective.configure\n\nx: 1\ny: 1\nz: 100\nmax_z_difference_from_x: 0.5\n"})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# example/custom-search-space-objective.py\n\n...\n\ndef configure(cfg: DictConfig, trial: Trial) -> None:\n    x_value = trial.params["x"]\n    trial.suggest_float(\n        "z",\n        x_value - cfg.max_z_difference_from_x,\n        x_value + cfg.max_z_difference_from_x,\n    )\n    trial.suggest_float("+w", 0.0, 1.0)  # note +w here, not w as w is a new parameter\n\n...\n'})})]}),"\n",(0,t.jsxs)(n.p,{children:["The method that ",(0,t.jsx)(n.code,{children:"custom_search_space"})," points to must accepts both a DictConfig with already set options and a trial object which needs further configuration. In this example we limit ",(0,t.jsx)(n.code,{children:"z"})," the difference between ",(0,t.jsx)(n.code,{children:"x"})," and ",(0,t.jsx)(n.code,{children:"z"})," to be no more than 0.5.\nNote that this ",(0,t.jsx)(n.code,{children:"custom_search_space"})," API should be considered experimental and is subject to change."]}),"\n",(0,t.jsx)(n.h3,{id:"order-of-trial-configuration",children:"Order of trial configuration"}),"\n",(0,t.jsx)(n.p,{children:"Configuring a trial object is done in the following sequence:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["search space parameters are set from the ",(0,t.jsx)(n.code,{children:"hydra.sweeper.params"})," key in the config"]}),"\n",(0,t.jsx)(n.li,{children:"Command line overrides are set"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"custom_search_space"})," parameters are set"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["It is not allowed to set search space parameters in the ",(0,t.jsx)(n.code,{children:"custom_search_space"})," method for parameters which have a fixed value from command line overrides. ",(0,t.jsx)(n.a,{href:"https://optuna.readthedocs.io/en/stable/reference/generated/optuna.trial.Trial.html#optuna.trial.Trial.user_attrs",children:"Trial.user_attrs"})," can be inspected to find any of such fixed parameters."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);