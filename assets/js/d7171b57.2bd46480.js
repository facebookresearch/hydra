"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3325],{28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var i=o(96540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}},90281:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"tutorial/config_groups","title":"Config groups","description":"This is the most important concept in Hydra.","source":"@site/versioned_docs/version-0.11/tutorial/3_config_groups.md","sourceDirName":"tutorial","slug":"/tutorial/config_groups","permalink":"/docs/0.11/tutorial/config_groups","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/tutorial/3_config_groups.md","tags":[],"version":"0.11","lastUpdatedBy":"Ryan Soklaski","lastUpdatedAt":1761332619000,"sidebarPosition":3,"frontMatter":{"id":"config_groups","title":"Config groups","sidebar_label":"Config groups"},"sidebar":"docs","previous":{"title":"Configuration file","permalink":"/docs/0.11/tutorial/config_file"},"next":{"title":"Defaults","permalink":"/docs/0.11/tutorial/defaults"}}');var t=o(74848),r=o(28453);const s={id:"config_groups",title:"Config groups",sidebar_label:"Config groups"},a=void 0,c={},l=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This is the most important concept in Hydra."}),"\n",(0,t.jsx)(n.p,{children:"Suppose you want to benchmark PostgreSQL and MySQL for your application.\nWhen running of the application, you will need either MySQL or PostgreSQL - but not both."}),"\n",(0,t.jsxs)(n.p,{children:["The way to do this with Hydra is with a ",(0,t.jsx)(n.strong,{children:"Config group"}),".\nA config group is a mutually exclusive set of configuration files."]}),"\n",(0,t.jsxs)(n.p,{children:["To create a config group, create a directory - ",(0,t.jsx)(n.code,{children:"db"})," - that will hold\na file for each database configuration alternative.\nSince we are expecting to have multiple config groups, we will proactively move all the configuration\nfiles into a ",(0,t.jsx)(n.code,{children:"conf"})," directory."]}),"\n",(0,t.jsxs)(n.p,{children:["Python file: ",(0,t.jsx)(n.code,{children:"my_app.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'@hydra.main(config_path="conf")\ndef my_app(cfg):\n    print(OmegaConf.to_yaml(cfg))\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"config_path"})," can specify your config file as in the ",(0,t.jsx)(n.a,{href:"/docs/0.11/tutorial/simple_cli",children:"previous command line example"}),", or the root directory for your configuration files.\nIf a config file is specified, its directory is the root directory."]}),"\n",(0,t.jsx)(n.p,{children:"The directory structure of our application now looks like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"\u251c\u2500\u2500 conf\n\u2502\xa0\xa0 \u2514\u2500\u2500 db\n\u2502\xa0\xa0     \u251c\u2500\u2500 mysql.yaml\n\u2502\xa0\xa0     \u2514\u2500\u2500 postgresql.yaml\n\u2514\u2500\u2500 my_app.py\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you run it, it prints an empty config because no configuration was specified."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py\n{}\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can now choose which database configuration to use from the command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py db=postgresql\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 10\n  user: postgres_user\n"})}),"\n",(0,t.jsx)(n.p,{children:"Like before, you can still override individual values in the resulting config:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"$ python my_app.py db=postgresql db.timeout=20\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 20\n  user: postgres_user\n"})}),"\n",(0,t.jsx)(n.p,{children:"This simple example demonstrated a very powerful feature of Hydra:\nYou can compose your configuration object from multiple configuration files."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);