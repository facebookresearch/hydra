"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[753],{15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>u,MDXProvider:()=>c,mdx:()=>y,useMDXComponents:()=>s,withMDXComponents:()=>p});var r=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),p=function(e){return function(n){var t=s(n.components);return r.createElement(e,a({},n,{components:t}))}},s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),p=s(t),c=o,m=p["".concat(l,".").concat(c)]||p[c]||f[c]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=g;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},89958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=t(58168),o=(t(96540),t(15680));const a={id:"defaults",title:"Defaults",sidebar_label:"Defaults"},l=void 0,i={unversionedId:"tutorial/defaults",id:"version-0.11/tutorial/defaults",title:"Defaults",description:"After office politics, you decide that you want to use MySQL by default.",source:"@site/versioned_docs/version-0.11/tutorial/4_defaults.md",sourceDirName:"tutorial",slug:"/tutorial/defaults",permalink:"/docs/0.11/tutorial/defaults",draft:!1,editUrl:"https://github.com/facebookresearch/hydra/edit/main/website/versioned_docs/version-0.11/tutorial/4_defaults.md",tags:[],version:"0.11",lastUpdatedBy:"jesszzzz",lastUpdatedAt:1741974472,formattedLastUpdatedAt:"Mar 14, 2025",sidebarPosition:4,frontMatter:{id:"defaults",title:"Defaults",sidebar_label:"Defaults"},sidebar:"docs",previous:{title:"Config groups",permalink:"/docs/0.11/tutorial/config_groups"},next:{title:"Config composition",permalink:"/docs/0.11/tutorial/composition"}},d={},u=[{value:"Config group defaults",id:"config-group-defaults",level:2},{value:"Overriding a config group default",id:"overriding-a-config-group-default",level:3},{value:"Non-config group defaults",id:"non-config-group-defaults",level:2}],p={toc:u},s="wrapper";function c(e){let{components:n,...t}=e;return(0,o.mdx)(s,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"After office politics, you decide that you want to use MySQL by default.\nYou no longer want to type ",(0,o.mdx)("inlineCode",{parentName:"p"},"db=mysql")," every time you run your application."),(0,o.mdx)("p",null,"You can add a ",(0,o.mdx)("inlineCode",{parentName:"p"},"defaults")," list into your config file."),(0,o.mdx)("h2",{id:"config-group-defaults"},"Config group defaults"),(0,o.mdx)("p",null,"Configuration file: ",(0,o.mdx)("inlineCode",{parentName:"p"},"config.yaml")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-yaml"},"defaults:\n  - db: mysql\n")),(0,o.mdx)("p",null,"Remember to specify ",(0,o.mdx)("inlineCode",{parentName:"p"},"config.yaml")," as the ",(0,o.mdx)("inlineCode",{parentName:"p"},"config_path"),"."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"@hydra.main(config_path='conf/config.yaml')\ndef my_app(cfg):\n    print(OmegaConf.to_yaml(cfg))\n")),(0,o.mdx)("p",null,"When you run the updated application, MySQL is loaded by default."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-yaml"},"$ python my_app.py\ndb:\n  driver: mysql\n  pass: secret\n  user: omry\n")),(0,o.mdx)("h3",{id:"overriding-a-config-group-default"},"Overriding a config group default"),(0,o.mdx)("p",null,"You can still load PostgreSQL, and override individual values."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-yaml"},"$ python my_app.py db=postgresql db.timeout=20\ndb:\n  driver: postgresql\n  pass: drowssap\n  timeout: 20\n  user: postgres_user\n")),(0,o.mdx)("p",null,"You can prevent a default from being loaded by assigning ",(0,o.mdx)("inlineCode",{parentName:"p"},"null")," to it in the command line:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-yaml"},"$ python my_app.py db=null\n{}\n")),(0,o.mdx)("h2",{id:"non-config-group-defaults"},"Non-config group defaults"),(0,o.mdx)("p",null,"Sometimes a config file you want to merge does not belong in any config group.\nThe following will load ",(0,o.mdx)("inlineCode",{parentName:"p"},"some_file.yaml")," from your config directory:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-yaml"},"defaults:\n  - some_file\n")),(0,o.mdx)("p",null,"Config files that not a part of a ",(0,o.mdx)("inlineCode",{parentName:"p"},"config group")," like ",(0,o.mdx)("inlineCode",{parentName:"p"},"db")," cannot be overridden."))}c.isMDXComponent=!0}}]);